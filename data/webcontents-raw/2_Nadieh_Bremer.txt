<!DOCTYPE html>
<html lang="en-us">
    <head><meta charset='utf-8'>
<meta name='viewport' content='width=device-width, initial-scale=1'><meta name='description' content='This week we&amp;rsquo;ve gotten an introduction into computer-aided design. Modelling in both 2D and 3D, preferably parametrically.
'><title>Computer-Aided Design</title>

<link rel='canonical' href='http://fabacademy.org/2021/labs/waag/students/nadieh-bremer/blog/week-2/'>

<link rel="stylesheet" href="../../scss/style.min.css"><meta property='og:title' content='Computer-Aided Design'>
<meta property='og:description' content='This week we&amp;rsquo;ve gotten an introduction into computer-aided design. Modelling in both 2D and 3D, preferably parametrically.
'>
<meta property='og:url' content='http://fabacademy.org/2021/labs/waag/students/nadieh-bremer/blog/week-2/'>
<meta property='og:site_name' content='Nadieh&#39;s Fab Academy'>
<meta property='og:type' content='article'><meta property='article:section' content='Blog' /><meta property='article:tag' content='cam' /><meta property='article:tag' content='cad' /><meta property='article:tag' content='2D' /><meta property='article:tag' content='raster' /><meta property='article:tag' content='vector' /><meta property='article:tag' content='3D' /><meta property='article:tag' content='xdesign' /><meta property='article:tag' content='fusion 360' /><meta property='article:tag' content='openscad' /><meta property='article:tag' content='freecad' /><meta property='article:tag' content='blender' /><meta property='article:tag' content='solidworks' /><meta property='article:published_time' content='2021-02-03T00:00:00&#43;00:00'/><meta property='article:modified_time' content='2021-02-26T00:00:00&#43;00:00'/><meta property='og:image' content='http://fabacademy.org/2021/labs/waag/students/nadieh-bremer/blog/week-2/header.jpg' />
<meta name="twitter:site" content="NadiehBremer"><meta name="twitter:title" content="Computer-Aided Design">
<meta name="twitter:description" content="This week we&amp;rsquo;ve gotten an introduction into computer-aided design. Modelling in both 2D and 3D, preferably parametrically.
"><meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:image" content='http://fabacademy.org/2021/labs/waag/students/nadieh-bremer/blog/week-2/header.jpg' /><link rel="shortcut icon" href='../../img/favicon.ico' /><link rel="preconnect" href="https://fonts.gstatic.com">
<link href="https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,300;0,400;0,900;1,400&family=Lobster+Two:wght@700&family=Source+Code+Pro:wght@400;700&display=swap" rel="stylesheet">
    </head>
    <body class="">
    <script>
        (function() {
            const colorSchemeKey = 'StackColorScheme';
            if(!localStorage.getItem(colorSchemeKey)){
                localStorage.setItem(colorSchemeKey, "auto");
            }
        })();
    </script><script>
    (function() {
        const colorSchemeKey = 'StackColorScheme';
        const colorSchemeItem = localStorage.getItem(colorSchemeKey);
        const supportDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches === true;

        if (colorSchemeItem == 'dark' || colorSchemeItem === 'auto' && supportDarkMode) {
            

            document.body.dataset.scheme = 'dark';
        } else {
            document.body.dataset.scheme = 'light';
        }
    })();
</script><div class="container main-container flex on-phone--column extended article-page with-toolbar">
            <aside class="sidebar left-sidebar sticky">
    <button class="hamburger hamburger--spin" type="button" id="toggle-menu" aria-label="Toggle Menu">
        <span class="hamburger-box">
            <span class="hamburger-inner"></span>
        </span>
    </button>

    <header class="site-info">
        <h1 class="site-name"><a href="http://fabacademy.org/2021/labs/waag/students/nadieh-bremer/">Nadieh&#39;s Fab Academy</a></h1>
        <p class="site-description">Keeping track of my documentation for each week of Fab Academy 2021</p>
    </header>

    <ol class="menu" id="main-menu">
        
        
        

        <li >
            <a href='../../'>
                
                    <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-home" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
  <path stroke="none" d="M0 0h24v24H0z"/>
  <polyline points="5 12 3 12 12 3 21 12 19 12" />
  <path d="M5 12v7a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-7" />
  <path d="M9 21v-6a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v6" />
</svg>



                
                <span>Home</span>
            </a>
        </li>
        
        

        <li >
            <a href='../../about'>
                
                    <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-user" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
  <path stroke="none" d="M0 0h24v24H0z"/>
  <circle cx="12" cy="7" r="4" />
  <path d="M6 21v-2a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v2" />
</svg>



                
                <span>About Me</span>
            </a>
        </li>
        
        

        <li >
            <a href='../../blog'>
                
                    <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-notebook" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
  <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
  <path d="M6 4h11a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-11a1 1 0 0 1 -1 -1v-14a1 1 0 0 1 1 -1m3 0v18" />
  <line x1="13" y1="8" x2="15" y2="8" />
  <line x1="13" y1="12" x2="15" y2="12" />
</svg>
                
                <span>Weekly Assignments</span>
            </a>
        </li>
        
        

        <li >
            <a href='../../final-project'>
                
                    <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-puzzle" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
  <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
  <path d="M4 7h3a1 1 0 0 0 1 -1v-1a2 2 0 0 1 4 0v1a1 1 0 0 0 1 1h3a1 1 0 0 1 1 1v3a1 1 0 0 0 1 1h1a2 2 0 0 1 0 4h-1a1 1 0 0 0 -1 1v3a1 1 0 0 1 -1 1h-3a1 1 0 0 1 -1 -1v-1a2 2 0 0 0 -4 0v1a1 1 0 0 1 -1 1h-3a1 1 0 0 1 -1 -1v-3a1 1 0 0 1 1 -1h1a2 2 0 0 0 0 -4h-1a1 1 0 0 1 -1 -1v-3a1 1 0 0 1 1 -1" />
</svg>
                
                <span>Final Project</span>
            </a>
        </li>
        
        

        <li >
            <a href='../../commands'>
                
                    <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-terminal" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
  <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
  <path d="M5 7l5 5l-5 5" />
  <line x1="12" y1="19" x2="19" y2="19" />
</svg>
                
                <span>Commands</span>
            </a>
        </li>
        

        
            <li id="dark-mode-toggle">
                <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-toggle-left" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
  <path stroke="none" d="M0 0h24v24H0z"/>
  <circle cx="8" cy="12" r="2" />
  <rect x="2" y="6" width="20" height="12" rx="6" />
</svg>



                <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-toggle-right" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
  <path stroke="none" d="M0 0h24v24H0z"/>
  <circle cx="16" cy="12" r="2" />
  <rect x="2" y="6" width="20" height="12" rx="6" />
</svg>



                <span>Dark Mode</span>
            </li>
        
    </ol>
</aside>

            <main class="main full-width">
    <div id="article-toolbar">
        <a href='../../blog' class="back-home">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-chevron-left" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
  <path stroke="none" d="M0 0h24v24H0z"/>
  <polyline points="15 6 9 12 15 18" />
</svg>



            <span>Back</span>
        </a>
    </div>

    <article class="has-image main-article">
    <header class="article-header">
        <div class="article-image">
            <a href="../../blog/week-2/">
                

                    <img src="../../blog/week-2/header.jpg"
                        
                        width="1000" 
                        height="667" 
                        loading="lazy"
                        alt="Featured image of post Computer-Aided Design" />
                
            </a>
        </div>
    

    <div class="article-details"><div class="article-time">
        <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-clock" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
  <path stroke="none" d="M0 0h24v24H0z"/>
  <circle cx="12" cy="12" r="9" />
  <polyline points="12 7 12 12 15 15" />
</svg>



        <time class="article-time--published">Feb 03, 2021</time>
    </div>
    <div class="article-category">
        
            <a href="../../categories/computer-aided-design/">
                Computer-Aided Design
            </a>
        
            <a href="../../categories/parametric-modelling/">
                Parametric Modelling
            </a>
        
            <a href="../../categories/final-project/">
                Final Project
            </a>
        
    </div>
    

    <h1 class="article-title">
        <a href="../../blog/week-2/">Computer-Aided Design</a>
    </h1>

    
    <h3 class="article-week">
        Week 2</h3>
    
    
</div>
</header>

    <section class="article-content">
    <p>This week we&rsquo;ve gotten an introduction into computer-aided design. Modelling in both 2D and 3D, preferably parametrically.</p>
<h2 id="assignments">Assignments</h2>
<p>Our task for this week is:</p>
<ul>
<li>Model (raster, vector, 2D, 3D, render, animate, simulate, &hellip;) a possible final project, compress your images and videos, and post it on your class page</li>
</ul>
<h2 id="hero-shots">Hero Shots</h2>
<p>Showing some final renders and animations of my 3D models for the <code>tl;dr</code> and hopefully showing you why the rest of this very long blog could be interesting to read <span class="kaomoji">(⌐■_■)</span>
</p>

<figure >
    
        <video class='controls' controls="true" playsinline ><source src='3D_blender_animation_physics_rotated.mp4' type="video/mp4"></video>
     
    
    <figcaption>An animation of puzzle pieces falling into my &#39;puzzle box&#39;</figcaption>
    
</figure>
<p><figure style="flex-grow: 144; flex-basis: 345px">
		<a href="../../blog/week-2/3D_fusion360_render_result.jpg" data-size="1000x694">
			
			<img src="../../blog/week-2/3D_fusion360_render_result.jpg"
				
				width="1000"
				height="694"
				loading="lazy"
				alt="The rendering result from Fusion 360">
		</a>
		
		<figcaption>The rendering result from Fusion 360</figcaption>
		
	</figure></p>
<h2 id="2d-modelling">2D Modelling</h2>
<p>To model in 2D you can use a raster based program, which makes use of the concept of a rectangular field of pixels and you basically define the color and transparency of each pixel. In an extreme case <em>pixel art</em> is a beautiful example of raster based drawing. Typical programs for raster based drawing are <em>Adobe Photoshop</em>, <em>GIMP</em>, and you can even draw (raster-based images) with JavaScript using the <em>HTML5 Canvas</em>. Typical file types are <em>png</em>, <em>jpeg</em>, and <em>gif</em>.</p>
<p>However, you can also create visuals using vector based programs. These use mathematical formulas and paths to define each shape. A big advantage is that the vectors can be scaled without losing any detail. And they are the type of &ldquo;drawing&rdquo; that is needed to work with laser- and vinyl-cutters. Typical tools for vector based drawing are <em>Adobe Illustrator</em>, <em>InkScape</em>, or when using JavaScript, you can create vector images as well, with <em>svg</em> being the most standard file type of vectors.</p>
<h3 id="raster-based">Raster based</h3>
<p>Because I already have experience with 2D raster and vector-based tools through my daily work, I want to focus on the 3D modelling aspect this week. I&rsquo;m therefore not going to very deeply into how the 2D (and especially raster-based) tools work.</p>
<h4 id="tayasui-sketches">Tayasui Sketches</h4>
<p>I already sketched my final project in 2D (top-view) and 3D (rough top-side) in a raster based tool during the <a class="link" href="../../blog/week-1b/" >previous week</a>, with my iPad Pro, Apple Pen, and an app called <a class="link" href="https://tayasui.com/sketches/"  target="_blank" rel="noopener"
    >Tayasui Sketches</a>. I use this app very often to create sketches of my data visualizations.</p>
<p>Below you can see the the app in use. It&rsquo;s extremely straightforward and minimal. Just select the type of tool you want to use (e.g. pencil, pen, brush) along the left, a color in the bottom right, the layer in the top right and right below the layer you can set the thickness and opacity of your chosen tool. That&rsquo;s really it. You can output the image as a png.</p>
<p><figure style="flex-grow: 141; flex-basis: 338px">
		<a href="../../blog/week-2/2D_raster_tayasui_sketches.jpg" data-size="1000x709">
			
			<img src="../../blog/week-2/2D_raster_tayasui_sketches.jpg"
				
				width="1000"
				height="709"
				loading="lazy"
				alt="2D raster program &lsquo;Tatasui Sketches&rsquo; on my iPad">
		</a>
		
		<figcaption>2D raster program ‘Tatasui Sketches’ on my iPad</figcaption>
		
	</figure></p>
<h3 id="vector-based">Vector based</h3>
<p>I have experience with <em>Adobe Illustrator</em> and <em>Affinity Designer</em> and feel comfortable enough with both to create designs. I&rsquo;ve tried <em>InkScape</em> in the past, but didn&rsquo;t like it. For this week however I started my 2D vector approach with <em>JavaScript</em> + <em>D3.js</em> and finished it in Adobe Illustrator.</p>
<h4 id="javascript--d3js">JavaScript &amp; D3.js</h4>
<p><a class="link" href="https://d3js.org/"  target="_blank" rel="noopener"
    >D3.js</a> is a JavaScript library mainly used for the creation of data visualizations (on the web) as an SVG. It&rsquo;s the core of my work and I feel very comfortable using it. You write JavaScript that creates the SVG in a web browser. I think you can see it as parametric modelling in 2D because you fix every aspect of the design through code.</p>
<p>I create a folder with a simple <code>index.html</code> and an empty JavaScript file. I prefer working with a live server so whenever I make changes to my JavaScript and save the file, the web browser running the live server automatically refreshes. I make use of <a class="link" href="https://nodejs.org/en/"  target="_blank" rel="noopener"
    >Node.js</a> and it&rsquo;s quite easy to install a <a class="link" href="https://www.npmjs.com/package/live-server"  target="_blank" rel="noopener"
    >live server</a> with <code>npm install -g live-server</code> (the <code>-g</code> makes it globally accessible on my laptop, not just in one repository). Within my folder with the <code>index.html</code> I run <code>live-server</code> in the terminal, and it opens up a webpage in my default browser that will automatically refresh on saving any file in the folder.</p>
<p><figure style="flex-grow: 258; flex-basis: 619px">
		<a href="../../blog/week-2/2D_vector_workflow.jpg" data-size="1200x465">
			
			<img src="../../blog/week-2/2D_vector_workflow.jpg"
				
				width="1200"
				height="465"
				loading="lazy"
				alt="My working set-up with the browser (and devTools open) on the left and the JS file in Visual Studio Code along the right">
		</a>
		
		<figcaption>My working set-up with the browser (and devTools open) on the left and the JS file in Visual Studio Code along the right</figcaption>
		
	</figure></p>
<p>I started very simple, a black circe to represent the wooden outline, with a hatched circle for the interior where you&rsquo;d place the puzzle pieces.</p>
<div class="highlight"><pre class="chroma"><code class="language-js" data-lang="js"><span class="c1">//Append and SVG to the body in D3.js style
</span><span class="c1"></span><span class="kr">const</span> <span class="nx">width</span> <span class="o">=</span> <span class="mi">1000</span>
<span class="kr">const</span> <span class="nx">height</span> <span class="o">=</span> <span class="mi">1000</span>
<span class="kr">const</span> <span class="nx">svg</span> <span class="o">=</span> <span class="nx">d3</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="s2">&#34;body&#34;</span><span class="p">)</span>
    <span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s2">&#34;svg&#34;</span><span class="p">)</span>
    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&#34;width&#34;</span><span class="p">,</span> <span class="nx">width</span><span class="p">)</span>
    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&#34;height&#34;</span><span class="p">,</span> <span class="nx">height</span><span class="p">)</span>
    <span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s2">&#34;g&#34;</span><span class="p">)</span> <span class="c1">//add a group and offset it to the center of the SVG
</span><span class="c1"></span>    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&#34;transform&#34;</span><span class="p">,</span> <span class="sb">`translate(</span><span class="si">${</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="si">}</span><span class="sb">, </span><span class="si">${</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="si">}</span><span class="sb">)`</span><span class="p">)</span>

<span class="c1">//Add a circle
</span><span class="c1"></span><span class="kr">const</span> <span class="nx">outside_radius</span> <span class="o">=</span> <span class="nx">width</span><span class="o">/</span><span class="mi">2</span> <span class="o">*</span> <span class="mf">0.8</span>
<span class="kr">const</span> <span class="nx">outside</span> <span class="o">=</span> <span class="nx">svg</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s2">&#34;circle&#34;</span><span class="p">)</span>
    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&#34;r&#34;</span><span class="p">,</span> <span class="nx">outside_radius</span><span class="p">)</span>
    <span class="p">.</span><span class="nx">style</span><span class="p">(</span><span class="s2">&#34;fill&#34;</span><span class="p">,</span> <span class="s2">&#34;black&#34;</span><span class="p">)</span>
</code></pre></div><p>I then added a spirograph pattern on top that will be etched out of the wood and puzzle pieces. I&rsquo;ve played with the math for spirographs in JavaScript quite often (I <a class="link" href="https://shop.visualcinnamon.com/collections/pen-plotter-prints"  target="_blank" rel="noopener"
    >sell pen plots</a> with spirograph designs), so I grabbed my code from those projects to create a spirograph.</p>
<p><figure style="flex-grow: 199; flex-basis: 479px">
		<a href="../../blog/week-2/2D_vector_first_steps.jpg" data-size="1200x601">
			
			<img src="../../blog/week-2/2D_vector_first_steps.jpg"
				
				width="1200"
				height="601"
				loading="lazy"
				alt="Two concentric circles to start with (left) and adding a spirograph pattern on top (right)">
		</a>
		
		<figcaption>Two concentric circles to start with (left) and adding a spirograph pattern on top (right)</figcaption>
		
	</figure></p>
<p>However, I want my puzzle to only have one possible solution, and a circular outline is the exact opposite of that. Even the swirly square shape that I drew in my initial sketch doesn&rsquo;t have 1 possible solution, since it&rsquo;s symmetric. I therefore started thinking of how to truly shape my puzzle <span class="kaomoji">( ｡･-･｡｀)</span>
</p>
<p>Maybe I could randomly perturb the circular outline so it wasn&rsquo;t perfect anymore? I drew an exceptionally ugly sketch to see how it might look, but I didn&rsquo;t like that break from symmetry.</p>
<p><figure style="flex-grow: 109; flex-basis: 262px">
		<a href="../../blog/week-2/2D_raster_perturbed_circle.jpg" data-size="400x366">
			
			<img src="../../blog/week-2/2D_raster_perturbed_circle.jpg"
				
				width="400"
				height="366"
				loading="lazy"
				alt="Sketching a perturbed circle to get a sense of how it would look">
		</a>
		
		<figcaption>Sketching a perturbed circle to get a sense of how it would look</figcaption>
		
	</figure></p>
<p>I kept on sketching and drew a hexagon. It&rsquo;s my favorite geometric shape, I won&rsquo;t go into the reasons here, but I&rsquo;ve worked with hexagons in my work often, and it&rsquo;s also the main shape of my company&rsquo;s logo. Perhaps I could have small marks along each of the 6 corners to help guide the puzzler to place corner pieces in the correct place?</p>
<p><figure style="flex-grow: 87; flex-basis: 210px">
		<a href="../../blog/week-2/2D_raster_hexagon_corners.jpg" data-size="400x456">
			
			<img src="../../blog/week-2/2D_raster_hexagon_corners.jpg"
				
				width="400"
				height="456"
				loading="lazy"
				alt="Going for a hexagon with marks in the corner to make sure a corner piece is placed correctly">
		</a>
		
		<figcaption>Going for a hexagon with marks in the corner to make sure a corner piece is placed correctly</figcaption>
		
	</figure></p>
<p>I left that idea for a while, because I was intrigued with filling the hexagon with a hexagonal grid of puzzle pieces I sketched a few hexagonal grids and filled them with &ldquo;puzzle pieces&rdquo;. Perhaps I could &ldquo;perturb&rdquo; the perfect lines so each piece would indeed have a unique position in the grid? Would that create very sharp edges for some pieces though?</p>
<p><figure style="flex-grow: 253; flex-basis: 607px">
		<a href="../../blog/week-2/2D_raster_hexagon_grid.jpg" data-size="1400x553">
			
			<img src="../../blog/week-2/2D_raster_hexagon_grid.jpg"
				
				width="1400"
				height="553"
				loading="lazy"
				alt="Sketching a set of pieces onto a hexagonal / triangular grid">
		</a>
		
		<figcaption>Sketching a set of pieces onto a hexagonal / triangular grid</figcaption>
		
	</figure></p>
<p>In the end I decided that until I knew if the LEDs would go inside a puzzle piece or would be below in the board itself, I&rsquo;d just stick with simpler puzzle pieces, even if that meant they weren&rsquo;t unique (for now).</p>
<p>Back in JavaScript, I turned the inner circle into a hexagon, and created some overly long-winded code to fill that grid with tiny triangles where no line was overlapping. I could then randomly remove some of the lines to create puzzle pieces that were more unique.</p>
<p><figure style="flex-grow: 99; flex-basis: 237px">
		<a href="../../blog/week-2/2D_vector_hexagonal_random_deletions.jpg" data-size="500x505">
			
			<img src="../../blog/week-2/2D_vector_hexagonal_random_deletions.jpg"
				
				width="500"
				height="505"
				loading="lazy"
				alt="Hexagonal grid with puzzle pieces created through random deletion of lines">
		</a>
		
		<figcaption>Hexagonal grid with puzzle pieces created through random deletion of lines</figcaption>
		
	</figure></p>
<p>However, I wasn&rsquo;t quite sure I liked the result enough. Some pieces were quite large and going around corners, while others remained as small as a triangle. Perhaps due to the electronics I might need to have these pieces be more similar sizes? Figuring out exactly which lines to remove through code felt like overkill to spend my time on at this point.</p>
<h4 id="adobe-illustrator">Adobe Illustrator</h4>
<p>Some things are just much easier to do manually. For those cases I take my SVG from the browser, and away from the code, into Illustrator for some final fine-tuning. I put all the original grid lines back in and copied the SVG from the browser into Adobe Illustrator to manually remove edge lines. You can easily copy an SVG by opening up the devTools of your browser with <code>⌘+⌥+i</code>. Right-click the SVG element, move to <em>Copy</em> and then <em>Outer HTML</em>. Now open up Adobe Illustrator, create a new file and just paste it.</p>
<p><figure style="flex-grow: 301; flex-basis: 723px">
		<a href="../../blog/week-2/2D_vector_copy_svg.jpg" data-size="1200x398">
			
			<img src="../../blog/week-2/2D_vector_copy_svg.jpg"
				
				width="1200"
				height="398"
				loading="lazy"
				alt="Copying an SVG from the browser">
		</a>
		
		<figcaption>Copying an SVG from the browser</figcaption>
		
	</figure></p>
<p>Within Illustrator I started manually removing edges to only create diamond and trapezoid shapes by clicking on an edge and deleting it.</p>
<p><figure style="flex-grow: 152; flex-basis: 365px">
		<a href="../../blog/week-2/2D_vector_illustrator_remove_lines.jpg" data-size="500x328">
			
			<img src="../../blog/week-2/2D_vector_illustrator_remove_lines.jpg"
				
				width="500"
				height="328"
				loading="lazy"
				alt="Having one line selected in Adobe Illustrator, which can be deleted with backspace">
		</a>
		
		<figcaption>Having one line selected in Adobe Illustrator, which can be deleted with backspace</figcaption>
		
	</figure></p>
<p>That only took 1 or 2 minutes, so wouldn&rsquo;t be too bad to redo. After saving the result from Illustrator back to SVG I do generally dive into the resulting SVG code to clean it up a little. I find that Illustrator always adds many attributes that aren&rsquo;t needed (such as <code>enable-background</code> or <code>xml:space</code>).</p>
<p>Below you can see the final result from creating the top of my puzzle &ldquo;box&rdquo; with 2D.</p>
<p><figure style="flex-grow: 100; flex-basis: 240px">
		<a href="../../blog/week-2/2D_vector_final.jpg" data-size="677x675">
			
			<img src="../../blog/week-2/2D_vector_final.jpg"
				
				width="677"
				height="675"
				loading="lazy"
				alt="Final 2D vector result of the top of the puzzle">
		</a>
		
		<figcaption>Final 2D vector result of the top of the puzzle</figcaption>
		
	</figure></p>
<p>Below are the files for the 2D vector version:</p>
<ul>
<li>The JavaScript code | <a class="link" href="2D_vector_puzzle.zip" >zip file</a></li>
<li>The raw SVG | <a class="link" href="2D_vector_puzzle_raw.svg" >svg file</a></li>
<li>The cleaned-up (with Illustrator) SVG | <a class="link" href="2D_vector_puzzle.svg" >svg file</a></li>
</ul>
<p>Now that I had an SVG version for the puzzle grid and spirograph, I was hoping to import the inner section with the puzzle as an SVG into some of the 3D tools to use as a base sketch.</p>
<h2 id="3d-modelling">3D Modelling</h2>
<p>Although the 2D side of this week was familiar to me, the 3D side was <em>completely</em> new. During the class with Neil, but also during the following tutorials given by the different instructors there were so many programs that seemed interesting to try. I eventually decided to investigate <em>xDesign</em>, <em>Fusion 360</em>, <em>FreeCAD</em>, <em>OpenSCAD</em>, with <em>Antimony</em> being a stretch goal. And trying <em>Blender</em> for some rendering and animation.</p>
<h3 id="fusion-360">Fusion 360</h3>
<p>On Thursday and Friday morning we received tutorials about Fusion 360 from the instructor at AgriLab and our lovely assistant at the Waag, Michelle Vossen. Those were really helpful to get a basic understanding of how to create 3D shapes in various ways. Since it was the tool I&rsquo;d had most exposure too, I decided to start my 3D CAD exploration in here.</p>
<p>I had also watched parts of this &ldquo;Parametric vs Direct Modeling&rdquo; <a class="link" href="https://www.youtube.com/watch?v=sVT6xt6uc6Q"  target="_blank" rel="noopener"
    >video</a> Wednesday evening to learn about the difference, but it turned out to be quite a good explanation of using Fusion 360 as well.</p>
<p>Below you can see the general starting screen of Fusion 360. I&rsquo;ve marked some of the tools and functions that I&rsquo;ve used (the most) during the creation of my project this week, and will be referring back to in the explanation below</p>
<p><figure style="flex-grow: 150; flex-basis: 361px">
		<a href="../../blog/week-2/3D_fusion360_button_explanation.png" data-size="1232x819">
			
			<img src="../../blog/week-2/3D_fusion360_button_explanation.png"
				
				width="1232"
				height="819"
				loading="lazy"
				alt="The general starting screen of Fusion 306 with the tools I used most often">
		</a>
		
		<figcaption>The general starting screen of Fusion 306 with the tools I used most often</figcaption>
		
	</figure></p>
<p>My goal is to make a cylindrical box where the top half is made of wood and the bottom from acrylic (for now), with cubby holes taken out along the edge, in the center a depression to place the puzzles pieces in, a bunch of puzzle pieces, and carving out a spirograph design from the top.</p>
<h4 id="creating-a-sketch">Creating a Sketch</h4>
<p>You always start with making a sketch. Make sure you&rsquo;re in the &ldquo;Design&rdquo; mode (big button top-left), Click the &ldquo;new sketch&rdquo; button, and select the plane onto which to make the sketch.</p>
<p><figure style="flex-grow: 178; flex-basis: 428px">
		<a href="../../blog/week-2/3D_fusion360_new_sketch.jpg" data-size="1000x560">
			
			<img src="../../blog/week-2/3D_fusion360_new_sketch.jpg"
				
				width="1000"
				height="560"
				loading="lazy"
				alt="Start a new sketch and select which plane to create it on">
		</a>
		
		<figcaption>Start a new sketch and select which plane to create it on</figcaption>
		
	</figure></p>
<p>This will take you into the sketch mode and changes the button option along the top. I&rsquo;ve made the collage below to show the menu&rsquo;s hidden beneath the sketch options. The rows marked by a pink dot are the ones I&rsquo;ve used (often) while experimenting with Fusion 360 (and there are even fold out menu&rsquo;s here, such as several different ways to define how to draw a rectangle or circle).</p>
<p><figure style="flex-grow: 168; flex-basis: 405px">
		<a href="../../blog/week-2/3D_fusion360_sketch_functions.jpg" data-size="1109x657">
			
			<img src="../../blog/week-2/3D_fusion360_sketch_functions.jpg"
				
				width="1109"
				height="657"
				loading="lazy"
				alt="The many functions available during the sketch phase, with my main ones highlighted with a pink circle">
		</a>
		
		<figcaption>The many functions available during the sketch phase, with my main ones highlighted with a pink circle</figcaption>
		
	</figure></p>
<p>I started by creating a circle (from center). Click in the center once, draw outward, it doesn&rsquo;t really matter how far at first. You can also fill in a diameter right now by typing a number.</p>
<p><figure style="flex-grow: 165; flex-basis: 396px">
		<a href="../../blog/week-2/3D_fusion360_create_circle.jpg" data-size="1000x605">
			
			<img src="../../blog/week-2/3D_fusion360_create_circle.jpg"
				
				width="1000"
				height="605"
				loading="lazy"
				alt="Start a new sketch and select which plane to create it on">
		</a>
		
		<figcaption>Start a new sketch and select which plane to create it on</figcaption>
		
	</figure></p>
<h4 id="parameters">Parameters</h4>
<p>Because it&rsquo;s important to create a parametric model, I then created a parameter for the radius of my model. Along the top, click on <em>Modify</em> and then select <em>Change Parameters</em>. This will open up a new window in which you can add new parameter by clicking the &ldquo;+&rdquo; sign next to <em>User Parameters</em>. A new window pops up in which you can supply a name, dimension and value.</p>
<p><figure style="flex-grow: 165; flex-basis: 396px">
		<a href="../../blog/week-2/3D_fusion360_adjust_parameter.jpg" data-size="1000x605">
			
			<img src="../../blog/week-2/3D_fusion360_adjust_parameter.jpg"
				
				width="1000"
				height="605"
				loading="lazy"
				alt="Adjust parameters">
		</a>
		
		<figcaption>Adjust parameters</figcaption>
		
	</figure></p>
<p>Inside the <em>Expression</em> box you can also use mathematical functions, or use previously defined parameters to calculate the new parameter. Saving the parameter, I returned to my circle, double-clicked the radius, and replaced it with <code>2 * radius_box</code>.</p>
<p><figure style="flex-grow: 165; flex-basis: 396px">
		<a href="../../blog/week-2/3D_fusion360_apply_parameter.jpg" data-size="1000x605">
			
			<img src="../../blog/week-2/3D_fusion360_apply_parameter.jpg"
				
				width="1000"
				height="605"
				loading="lazy"
				alt="Setting the diameter of the circle with a parameter">
		</a>
		
		<figcaption>Setting the diameter of the circle with a parameter</figcaption>
		
	</figure></p>
<p>Starting simple, I finished the sketch (the big button top-right). I could always return to it and make more changes or additions.</p>
<h4 id="extruding">Extruding</h4>
<p>Back in the main window, I selected <em>Extrude</em> from the top menu and clicked on the circle I&rsquo;d just drawn on the sketch to select it as the shape to extrude (and make 3D). This opens up a window along the right in which you have many options as to how to extrude. The default is to extrude upwards. However, you can also extrude in both ways, and create cuts (I&rsquo;ll do this later). I&rsquo;d created a new variable <code>thickness_wood</code> to apply to the distance to extrude.</p>
<p><figure style="flex-grow: 165; flex-basis: 396px">
		<a href="../../blog/week-2/3D_fusion360_extrude.jpg" data-size="1000x605">
			
			<img src="../../blog/week-2/3D_fusion360_extrude.jpg"
				
				width="1000"
				height="605"
				loading="lazy"
				alt="Extruding the circle into a 3D cylinder">
		</a>
		
		<figcaption>Extruding the circle into a 3D cylinder</figcaption>
		
	</figure></p>
<p>However, after doing this, I realized that I&rsquo;d made the wooden top lie on the &ldquo;ground&rdquo;, whereas I needed to have the acrylic section underneath it. I therefore clicked on the <em>Move/Copy</em> big cross-arrow icon along the middle-top. Just like with <em>extrude</em> this opens up a window along the right, in which I can customize how to move the body. I moved it upward by <code>thickness_acrylic</code>, another parameter.</p>
<p><figure style="flex-grow: 165; flex-basis: 397px">
		<a href="../../blog/week-2/3D_fusion360_move_upward.jpg" data-size="1000x604">
			
			<img src="../../blog/week-2/3D_fusion360_move_upward.jpg"
				
				width="1000"
				height="604"
				loading="lazy"
				alt="Moving the body upward">
		</a>
		
		<figcaption>Moving the body upward</figcaption>
		
	</figure></p>
<h4 id="inserting-an-svg-as-a-sketch">Inserting an SVG as a Sketch</h4>
<p>Next, I wanted to create the hexagonal center with the puzzle pieces. I created a new sketch, and this time selected the top of the cylinder as my sketch plane (it doesn&rsquo;t always need to be at the origin. In fact, I probably should&rsquo;ve created an <em>offset plane</em> to create my first sketch with, but didn&rsquo;t think of that).</p>
<p>I selected the <em>Insert</em> and then <em>Insert SVG</em> to add an SVG of my puzzle (that only contained the hexagon puzzle). I then saw that my SVG wasn&rsquo;t centered on the hexagon, and it was too small. I tried adjusting <em>X Distance</em> and <em>Y Distance</em> to make it centered, but it felt too rough, and I couldn&rsquo;t get it quite right.</p>
<p><figure style="flex-grow: 165; flex-basis: 397px">
		<a href="../../blog/week-2/3D_fusion360_insert_svg.jpg" data-size="1000x604">
			
			<img src="../../blog/week-2/3D_fusion360_insert_svg.jpg"
				
				width="1000"
				height="604"
				loading="lazy"
				alt="Inserting the SVG of the puzzle into the sketch, but seeing that it wasn&rsquo;t centered">
		</a>
		
		<figcaption>Inserting the SVG of the puzzle into the sketch, but seeing that it wasn’t centered</figcaption>
		
	</figure></p>
<p>Instead I went into the SVG code, and changed the <code>viewbox</code> of the SVG from <code>viewbox = &quot;0 0 1000 1000&quot;</code> to <code>viewbox = &quot;-500 -500 500 500&quot;</code> and removing the translation that I&rsquo;d applied to the SVG as whole (moving its center back to <code>0 0</code>). With this change, the hexagon SVG was placed in the direct center of my circle / origin, and I only had to adjust the scaling (which I set to <code>2.75</code>). Now I had the puzzle in the center and could select each inner shape.</p>
<p><figure style="flex-grow: 165; flex-basis: 397px">
		<a href="../../blog/week-2/3D_fusion360_svg_loaded.jpg" data-size="1000x604">
			
			<img src="../../blog/week-2/3D_fusion360_svg_loaded.jpg"
				
				width="1000"
				height="604"
				loading="lazy"
				alt="Having successfully loaded the puzzle SVG into my sketch">
		</a>
		
		<figcaption>Having successfully loaded the puzzle SVG into my sketch</figcaption>
		
	</figure></p>
<p>However, I then realized that I <em>first</em> wanted to cut the big outer hexagonal shape into the &ldquo;wooden&rdquo; cylinder, whereas all these separate puzzle piece shapes wasn&rsquo;t making that straightforward. I therefore deleted all the separate shapes, saved each separate component of the puzzle SVG into its own SVG (the hexagonal outside, the inner puzzle pieces, the spirograph), and inserted just the hexagon shape. I didn&rsquo;t use the <em>polygon</em> option from Fusion 360 to add the hexagon, because I wanted to make sure that the hexagon would perfectly fit the puzzle pieces that I&rsquo;d add later (however, since I later added spacing between the puzzle pieces, I might as well have used the easier route of creating the hexagon within Fusion 360).</p>
<p>With the hexagon sketch lying on top of the cylinder, I selected <em>Extrude</em> and this time selected <em>Cut</em> for the <em>Operation</em> and gave the <em>Distance</em> as a minus number. This created a hexagonal hole through the cylinder.</p>
<p><figure style="flex-grow: 165; flex-basis: 397px">
		<a href="../../blog/week-2/3D_fusion360_hexagon_cut.jpg" data-size="1000x604">
			
			<img src="../../blog/week-2/3D_fusion360_hexagon_cut.jpg"
				
				width="1000"
				height="604"
				loading="lazy"
				alt="Cutting a hexagon shape from the cylinder">
		</a>
		
		<figcaption>Cutting a hexagon shape from the cylinder</figcaption>
		
	</figure></p>
<h4 id="offsetting">Offsetting</h4>
<p>I started a new sketch for the puzzle pieces, but then remembered having see the usage of an <em>Offset plane</em> to draw a new sketch and decided to apply it here as well. Under <em>Construct</em> in the top row, select <em>Offset Plane</em>. In the pop-up that appears along the right, I selected the XY-plane and extended by a distance of <code>thickness_acrylic</code>. The meant that the new plane would lie exactly flush with the bottom of the &ldquo;wooden&rdquo; cylinder.</p>
<p><figure style="flex-grow: 165; flex-basis: 397px">
		<a href="../../blog/week-2/3D_fusion360_create_offset_plane.jpg" data-size="1000x604">
			
			<img src="../../blog/week-2/3D_fusion360_create_offset_plane.jpg"
				
				width="1000"
				height="604"
				loading="lazy"
				alt="Creating an offset plane">
		</a>
		
		<figcaption>Creating an offset plane</figcaption>
		
	</figure></p>
<p>Saving the result, I could then select this new higher lying plane after I clicked <em>New Sketch</em>. I inserted the SVG with just the puzzle pieces and scaled it to <code>2.75</code> as well.</p>
<p>I wanted to extrude each puzzle piece upward eventually. However, for realism, I wanted to add a little gap between each piece. For this I used the <em>Offset</em> that you cal select along the top while in <em>Sketch</em> mode. I created a parameter for the gap, <code>gap_puzzle_distance</code>. I tried to select a puzzle <em>shape</em>, but found out that I could only select the <em>edges</em>. Clicking in the center of a shape had no effect. But I could create a closed shape by clicking on all the outer edges of the shape.</p>
<p><figure style="flex-grow: 165; flex-basis: 397px">
		<a href="../../blog/week-2/3D_fusion360_offset.jpg" data-size="1000x604">
			
			<img src="../../blog/week-2/3D_fusion360_offset.jpg"
				
				width="1000"
				height="604"
				loading="lazy"
				alt="Offsetting a puzzle piece to create a gap between each piece">
		</a>
		
		<figcaption>Offsetting a puzzle piece to create a gap between each piece</figcaption>
		
	</figure></p>
<p>I did have to make sure that the offset line, the red line, was positioned towards the inner part of the shape. Otherwise I could click <em>Flip</em> in the <em>Offset</em> panel.</p>
<p><figure style="flex-grow: 165; flex-basis: 397px">
		<a href="../../blog/week-2/3D_fusion360_offset_applied.jpg" data-size="1000x604">
			
			<img src="../../blog/week-2/3D_fusion360_offset_applied.jpg"
				
				width="1000"
				height="604"
				loading="lazy"
				alt="An offset applied to one diamond shape">
		</a>
		
		<figcaption>An offset applied to one diamond shape</figcaption>
		
	</figure></p>
<p>I tried googling to see if it was at all possible to select a full shape to offset, but I wasn&rsquo;t able to find any solution. In the end I just resigned myself to selecting the edges of each puzzle piece separately and offsetting them all manually <span class="kaomoji">ಥ﹏ಥ</span>
</p>
<p>Strangely enough sometimes the offset would default to the inside, and sometimes it would default to the outside. With more than enough pieces to offset, I tried finding a pattern; clockwise selecting the edges versus counter-clockwise and such, but I couldn&rsquo;t figure out the logic.</p>
<p>I left two puzzle pieces out for some diversity.</p>
<h4 id="body-groups">Body Groups</h4>
<p>Finally having done all the offsets, I finished the sketch, selected all the pieces and extruded all 57 pieces by <code>puzzle_piece_height</code>.</p>
<p><figure style="flex-grow: 165; flex-basis: 397px">
		<a href="../../blog/week-2/3D_fusion360_extruding_pieces.jpg" data-size="1000x604">
			
			<img src="../../blog/week-2/3D_fusion360_extruding_pieces.jpg"
				
				width="1000"
				height="604"
				loading="lazy"
				alt="Extruding all 57 puzzle pieces">
		</a>
		
		<figcaption>Extruding all 57 puzzle pieces</figcaption>
		
	</figure></p>
<p>That created 57 unique bodies in my <em>Browser</em> (the panel along the left), which doesn&rsquo;t make it very ordered. Thankfully you can create a <em>Body Group</em> by right-clicking the <em>Bodies</em> in the Browser and selecting <em>New Group</em> and dragging all the bodies in there.</p>
<p><figure style="flex-grow: 165; flex-basis: 397px">
		<a href="../../blog/week-2/3D_fusion360_body_group.jpg" data-size="1000x604">
			
			<img src="../../blog/week-2/3D_fusion360_body_group.jpg"
				
				width="1000"
				height="604"
				loading="lazy"
				alt="Creating a body group to place all puzzle pieces into">
		</a>
		
		<figcaption>Creating a body group to place all puzzle pieces into</figcaption>
		
	</figure></p>
<h4 id="applying-materials">Applying Materials</h4>
<p>I&rsquo;d been at it for a while now, and for some fun I decided to add some different materials to these bodies (the standard material is steel I think). You can change this by clicking on <em>Modify</em> and then selecting <em>Physical Material</em>.</p>
<p><figure style="flex-grow: 165; flex-basis: 397px">
		<a href="../../blog/week-2/3D_fusion360_material.jpg" data-size="1000x604">
			
			<img src="../../blog/week-2/3D_fusion360_material.jpg"
				
				width="1000"
				height="604"
				loading="lazy"
				alt="A different material can be applied with &lsquo;Physical Material&rsquo;">
		</a>
		
		<figcaption>A different material can be applied with ‘Physical Material’</figcaption>
		
	</figure></p>
<p>This will open a panel along the right with a large selection of materials. You can inspect them, and when you&rsquo;ve chosen, you simply drag the material to the body that you want to apply it to. If you want to apply the same material to many different bodies at once (the puzzle pieces), you can simply select all of the bodies, then go to <em>Physical Material</em>, drag the desired material to one of the selected bodies, and it gets applied to all.</p>
<p><figure style="flex-grow: 165; flex-basis: 397px">
		<a href="../../blog/week-2/3D_fusion360_materials_applied.jpg" data-size="1000x604">
			
			<img src="../../blog/week-2/3D_fusion360_materials_applied.jpg"
				
				width="1000"
				height="604"
				loading="lazy"
				alt="The bodies take on a very rough color and transparency to mimic the applied material">
		</a>
		
		<figcaption>The bodies take on a very rough color and transparency to mimic the applied material</figcaption>
		
	</figure></p>
<h4 id="more-complex-shapes--mirroring">More Complex Shapes &amp; Mirroring</h4>
<p>With the sketch along the XY-plane base that I already had, I created another extrusion from the base to the bottom of the wood to represent the acrylic bottom in which I hope to hide the electronics.</p>
<p><figure style="flex-grow: 165; flex-basis: 397px">
		<a href="../../blog/week-2/3D_fusion360_adding_acrylic_bottom.jpg" data-size="1000x604">
			
			<img src="../../blog/week-2/3D_fusion360_adding_acrylic_bottom.jpg"
				
				width="1000"
				height="604"
				loading="lazy"
				alt="Adding another body below and applying a black acrylic material to it">
		</a>
		
		<figcaption>Adding another body below and applying a black acrylic material to it</figcaption>
		
	</figure></p>
<p>It was time to create the more difficult shapes of the puzzle-piece-stashing cubby holes along several of the sides. I opened up the sketch on which I&rsquo;d drawn the hexagonal outline of the puzzle, that lies along the top of the wooden cylinder.</p>
<p>I wanted to make one cubby hole and then mirror that along a circle. I drew a line from the center point and set the angle just a little smaller than 30°, the angle at which the first corner point of a hexagon lies. In the <em>Linetype</em> option of the <em>Sketch Palette</em> along the right, I then turned this line into a <em>construction line</em>, since I only wanted to use it as a guide to draw one side of the cubby hole with.</p>
<p>Next I had some trouble placing the straight line that needed to be parallel with the hexagon side. When I drew a vertical line and selected it to set it&rsquo;s distance from the origin, I could only set its length. No matter if I drew it at an angle. Some googling later showed me that I had to select an end point, not the line segment itself.</p>
<p>I then suddenly realized that it would be easier to draw half the cubby hole, and then simply mirror it along the x-axis to create something perfectly symmetric. So I drew a straight vertical line from the x-axis down to the radial construction line, then followed along that radial line for a bit, and to end it I drew a piece of circular arc using the <em>very</em> handy <em>3-Point Circle</em> option. With this you first select the center of the circle (the origin here), and then two points along the radius between which you want an arc. Eventually I had the line section you see in the image below.</p>
<p>I then clicked the <em>Mirror</em> option along the top. With the Mirror panel I selected the 3 line segments as <em>Objects</em> to mirror, and the x-axis as the <em>Mirror Line</em> and voila, a full cubby hole!</p>
<p><figure style="flex-grow: 165; flex-basis: 397px">
		<a href="../../blog/week-2/3D_fusion360_cubby_hole_one_side.jpg" data-size="1000x604">
			
			<img src="../../blog/week-2/3D_fusion360_cubby_hole_one_side.jpg"
				
				width="1000"
				height="604"
				loading="lazy"
				alt="Creating one side of the cubby hole with 2 straight lines and one circular arc section">
		</a>
		
		<figcaption>Creating one side of the cubby hole with 2 straight lines and one circular arc section</figcaption>
		
	</figure></p>
<p>With the cubby hole complete, I fixed its dimensions (based on variables). I could now use the other <em>very</em> handy <em>Circular Pattern</em> option that you can find under <em>Create</em>. Selecting the full cubby hole, and the origin as the <em>Center Point</em>. Setting 4 objects to be created in total along 180°.</p>
<p><figure style="flex-grow: 165; flex-basis: 397px">
		<a href="../../blog/week-2/3D_fusion360_mirror_circular.jpg" data-size="1000x604">
			
			<img src="../../blog/week-2/3D_fusion360_mirror_circular.jpg"
				
				width="1000"
				height="604"
				loading="lazy"
				alt="Mirroring 3 other cubby holes along the circle">
		</a>
		
		<figcaption>Mirroring 3 other cubby holes along the circle</figcaption>
		
	</figure></p>
<p>I then extruded these cubby holes through the wood and partly into the acrylic underside.</p>
<p><figure style="flex-grow: 165; flex-basis: 397px">
		<a href="../../blog/week-2/3D_fusion360_cut_cubby_holes.jpg" data-size="1000x604">
			
			<img src="../../blog/week-2/3D_fusion360_cut_cubby_holes.jpg"
				
				width="1000"
				height="604"
				loading="lazy"
				alt="Cutting the cubby holes away from the wood and acrylic underside">
		</a>
		
		<figcaption>Cutting the cubby holes away from the wood and acrylic underside</figcaption>
		
	</figure></p>
<h4 id="sweeping">Sweeping</h4>
<p>Next I wanted to cut out the spirograph pattern from the top of the wood and puzzle pieces. I first thought to do this with the <em>Sweep</em> functionality that is found under <em>Create</em> (while not in a <em>Sketch</em>).</p>
<p><figure style="flex-grow: 165; flex-basis: 397px">
		<a href="../../blog/week-2/3D_fusion360_sweep_function.jpg" data-size="1000x604">
			
			<img src="../../blog/week-2/3D_fusion360_sweep_function.jpg"
				
				width="1000"
				height="604"
				loading="lazy"
				alt="The sweep function to create a shape along a path">
		</a>
		
		<figcaption>The sweep function to create a shape along a path</figcaption>
		
	</figure></p>
<p>I created a new sketch along the top plane of the puzzle and loaded the spirograph SVG as the path. While selecting <em>Sweep</em> I saw that I also needed a profile, a shape to sweep along the path. I googled a bit to figure out how to create a profile. I created yet another sketch, but this time along the YZ-plane and drew a tiny circle.</p>
<p>I finished the <em>Sketch</em>, selected <em>Sweep</em> once more, with the spirograph as the path and the circle as the profile. However, Fusion 360 then gave me a very generic error message: <code>Cannot make sweep closure for closed path</code>. Some googling gave me the idea that the sweep wasn&rsquo;t able to handle difficult paths, and this spirograph was definitely difficult, with self intersecting points. Perhaps it just couldn&rsquo;t handle that?</p>
<p><figure style="flex-grow: 165; flex-basis: 397px">
		<a href="../../blog/week-2/3D_fusion360_sweep_error.jpg" data-size="1000x604">
			
			<img src="../../blog/week-2/3D_fusion360_sweep_error.jpg"
				
				width="1000"
				height="604"
				loading="lazy"
				alt="Fusion 360 didn&rsquo;t want to sweep the circle along the spirograph">
		</a>
		
		<figcaption>Fusion 360 didn’t want to sweep the circle along the spirograph</figcaption>
		
	</figure></p>
<p>Some more googling got me to a not quite related <a class="link" href="https://graphicdesign.stackexchange.com/questions/108152"  target="_blank" rel="noopener"
    >StackExchange answer</a> that stroked the path to make it have thickness. Right! I could also make a thick line and just cut that out of the wood and puzzle pieces!</p>
<p>Back in Illustrator I selected the spirograph path, made its stroke thicker, and via <em>Object</em> -&gt; <em>Path</em> -&gt; <em>Outline Stroke</em> turned it into a shape instead of a path. I loaded this new SVG into Fusion 360 and could <em>thankfully</em> select it as one shape to cut with. It cut through the wood very quickly. For cutting the puzzle pieces, I had to set the <em>Start</em> of the extrusion at the top of a (random) puzzle piece because the pieces are a little less high than the depth of the wood. Cutting the path from all the puzzle pieces took a few minutes for Fusion 360 to finish.</p>
<p><figure style="flex-grow: 165; flex-basis: 397px">
		<a href="../../blog/week-2/3D_fusion360_cut_spirograph.jpg" data-size="1000x604">
			
			<img src="../../blog/week-2/3D_fusion360_cut_spirograph.jpg"
				
				width="1000"
				height="604"
				loading="lazy"
				alt="Cutting the outlined spirograph path from the puzzle pieces">
		</a>
		
		<figcaption>Cutting the outlined spirograph path from the puzzle pieces</figcaption>
		
	</figure></p>
<h4 id="a-glass-plate-and-hollow-shell">A Glass Plate and Hollow Shell</h4>
<p>Because I&rsquo;m not sure if the LEDs will be within each puzzle piece or in the bottom of the puzzle, I decided to make the bottom of the puzzle area out of matte glass. In the sketch with the hexagon outline, I created another hexagon by offsetting the original hexagon outward a little. I then cut this slightly larger hexagon out of the bottom acrylic cylinder. Next, I extruded the same hexagon as a new body upward, and applied a glass material to it.</p>
<p><figure style="flex-grow: 168; flex-basis: 405px">
		<a href="../../blog/week-2/3D_fusion360_glass_plate.jpg" data-size="1000x592">
			
			<img src="../../blog/week-2/3D_fusion360_glass_plate.jpg"
				
				width="1000"
				height="592"
				loading="lazy"
				alt="Cutting a larger hexagon from the bottom to place a glass plate into">
		</a>
		
		<figcaption>Cutting a larger hexagon from the bottom to place a glass plate into</figcaption>
		
	</figure></p>
<p>I didn&rsquo;t want the bottom section to be one massive acrylic block. This part would need to contain the electronics! I therefore turned the model on its bottom and selected the <em>Shell</em> command to turn the massive bock into a shell. It ws surprisingly easy. I merely selected the bottom face, gave the thickness of the shell, and it neatly followed all the depressions I&rsquo;d created into the top of the acrylic cylinder.</p>
<p><figure style="flex-grow: 168; flex-basis: 405px">
		<a href="../../blog/week-2/3D_fusion360_shell_bottom.jpg" data-size="1000x592">
			
			<img src="../../blog/week-2/3D_fusion360_shell_bottom.jpg"
				
				width="1000"
				height="592"
				loading="lazy"
				alt="Turning the massive acrylic bottom into a shell">
		</a>
		
		<figcaption>Turning the massive acrylic bottom into a shell</figcaption>
		
	</figure></p>
<p>I think I can&rsquo;t actually <em>physically</em> create the acrylic bottom as a shell like this&hellip; However, right now I don&rsquo;t have the required knowledge of what you exactly <em>can</em> and <em>can&rsquo;t do</em> with the machines. I&rsquo;ll leave the feasibility for another week.</p>
<p>I cut the original hexagon from the acrylic shell so the glass bottom would be approachable from the bottom.</p>
<p><figure style="flex-grow: 168; flex-basis: 405px">
		<a href="../../blog/week-2/3D_fusion360_glass_see_through.jpg" data-size="1000x592">
			
			<img src="../../blog/week-2/3D_fusion360_glass_see_through.jpg"
				
				width="1000"
				height="592"
				loading="lazy"
				alt="Having cut the (smaller) hexagon from the acrylic bottom">
		</a>
		
		<figcaption>Having cut the (smaller) hexagon from the acrylic bottom</figcaption>
		
	</figure></p>
<h4 id="fillets">Fillets</h4>
<p>There was one thing I wanted to add that I hadn&rsquo;t used yet. To round off the sharp edges from the wooden top. For this you can use the <em>Fillet</em> option from the <em>Modify</em> menu. When clicking <em>Fillet</em> I noticed that due to the etching out of the spirograph from the wood I had to select each separate piece of the cubby holes' sides. I figured that could be done in less steps. So I moved the history slider on the bottom back to right before I etched out the spirograph from the wood, and clicked <em>Fillet</em> again.</p>
<p>I noticed that it was easy to create several groups to round with different values. I thus created 3 different groups; the outside circle, the cubby holes, and the inner hexagon, and played with the numbers to create fillets that looked good.</p>
<p><figure style="flex-grow: 169; flex-basis: 406px">
		<a href="../../blog/week-2/3D_fusion360_fillet.jpg" data-size="1000x591">
			
			<img src="../../blog/week-2/3D_fusion360_fillet.jpg"
				
				width="1000"
				height="591"
				loading="lazy"
				alt="Creating fillets along the top of the wood to round off the edges">
		</a>
		
		<figcaption>Creating fillets along the top of the wood to round off the edges</figcaption>
		
	</figure></p>
<p>After saving I moved the history back to the last step and noticed that the spirograph was no longer etched out of the wood! I edited the extrusion of that original cut and saw an error message about a problem in combining the geometry together.</p>
<p><figure style="flex-grow: 168; flex-basis: 405px">
		<a href="../../blog/week-2/3D_fusion360_cut_error.jpg" data-size="1000x592">
			
			<img src="../../blog/week-2/3D_fusion360_cut_error.jpg"
				
				width="1000"
				height="592"
				loading="lazy"
				alt="The error message in trying to cut the spirograph from the wood">
		</a>
		
		<figcaption>The error message in trying to cut the spirograph from the wood</figcaption>
		
	</figure></p>
<p>Looking a little closer, I got the idea that the problem could possibly be that the spirograph top and the wood top somehow were lying too close together? Not sure why the fillet had caused that to be an issue though. I therefore turned the spirograph sketch into a new body and extruded it in <em>both</em> dimensions.</p>
<p>The next step I took I <em>truly</em> would not have figured out if Michelle hadn&rsquo;t shown this in her tutorial. I selected the <em>Combine</em> from the <em>Modify</em> section. Selected the wooden top as the <em>Target Body</em> and the spirograph body as the <em>Tool Body</em> with a <em>cut</em> operation.</p>
<p><figure style="flex-grow: 168; flex-basis: 404px">
		<a href="../../blog/week-2/3D_fusion360_combine.jpg" data-size="1000x594">
			
			<img src="../../blog/week-2/3D_fusion360_combine.jpg"
				
				width="1000"
				height="594"
				loading="lazy"
				alt="Using &lsquo;Combine&rsquo; to cut the spirograph body from the wooden top">
		</a>
		
		<figcaption>Using ‘Combine’ to cut the spirograph body from the wooden top</figcaption>
		
	</figure></p>
<p>Thankfully this didn&rsquo;t throw an error and resulted in the etched out spirograph to appear back in the wood!</p>
<h4 id="rendering">Rendering</h4>
<p>That felt like enough creation of the different parts in one tool. It was time to look into rendering and animation. From the big button on the top-left that usually says <em>Design</em> I selected <em>Render</em>. There are a lot less buttons in this menu thankfully, so I quickly explored each after having watched <a class="link" href="https://www.youtube.com/watch?v=sejMq84YREs"  target="_blank" rel="noopener"
    >this</a> and <a class="link" href="https://www.youtube.com/watch?v=dwCrOwEw7u8"  target="_blank" rel="noopener"
    >this</a> Youtube tutorial.</p>
<p><figure style="flex-grow: 227; flex-basis: 545px">
		<a href="../../blog/week-2/3D_fusion360_render.jpg" data-size="1000x440">
			
			<img src="../../blog/week-2/3D_fusion360_render.jpg"
				
				width="1000"
				height="440"
				loading="lazy"
				alt="Rendering the puzzle box in canvas">
		</a>
		
		<figcaption>Rendering the puzzle box in canvas</figcaption>
		
	</figure></p>
<p>The rainbow circle lets you apply materials to each body. I had just seen in our Mattermost channel that there was a LED &ldquo;material&rdquo; available, which seemed very interesting, so I explored the materials some more, tried a few light emitting ones on the puzzle pieces and decided on sticking with making one puzzle piece into a  &ldquo;A Type Bulb - Frosted - 800lm&rdquo;.</p>
<p>Next to the rainbow circle are the <em>Scene Settings</em>, such as the brightness, the focal length, depth of field and more. I also played a little with this to see the resulting effect.</p>
<p>One option was very interesting, the metallic circle with the green &ldquo;play&rdquo; circle. This actives that <em>In-Canvas Render</em> and renders the scene right then and there. It starts out very rough and the longer you give it, the more the image becomes smooth and (more) realistic.</p>
<p>Finally, you can also do the rendering under the hood with the <em>Render</em> button (the teapot (why?)). Below you can see the result from rendering my puzzle box. I like how the light emitted by one of the puzzle pieces is scattered throughout the others.</p>
<p><figure style="flex-grow: 144; flex-basis: 345px">
		<a href="../../blog/week-2/3D_fusion360_render_result.jpg" data-size="1000x694">
			
			<img src="../../blog/week-2/3D_fusion360_render_result.jpg"
				
				width="1000"
				height="694"
				loading="lazy"
				alt="The result from rendering the full design">
		</a>
		
		<figcaption>The result from rendering the full design</figcaption>
		
	</figure></p>
<h4 id="animating-an-exploded-view">Animating an Exploded View</h4>
<p>My final exploration in Fusion 360 was to create an explosion animation of the separate pieces. To create animations, I had learned from Michelle that I had to turn my bodies into components. You can create a component from the <em>Assemble</em> menu along the top. I gave it a descriptive name, saved it, and dropped the body into the component (from the <em>Browser</em> panel along the left). I did this for all four parts; the acrylic bottom, the glass puzzle bottom plate, the wooden top and the puzzle pieces.</p>
<p>From the big button on the top-left I selected <em>Animation</em>. Again not many buttons along the top, so I explored the options given. The <em>Auto-Explode</em> options seemed interesting. However I kept getting error messages that <code>selected components are already separated from each other</code>. Through some YouTube video&rsquo;s that I&rsquo;d seen on xDesign I&rsquo;d already learned about the concept of &ldquo;mating&rdquo;, where you specify how separate components are attached or aligned to one another. In Fusion 360 this is called <em>Joint</em>, also in the <em>Assemble</em> menu along the top in the <em>Design</em> screen. However, when I clicked on <em>Joint</em> my entire model turned transparent and I couldn&rsquo;t select <em>anything</em>. I tried googling for what I&rsquo;d done wrong, but couldn&rsquo;t find any question that seemed similar to what I had. I did find <a class="link" href="https://www.autodesk.com/products/fusion-360/blog/components-bodies-for-new-designers/"  target="_blank" rel="noopener"
    >a short tutorial</a> on the Autodesk website about components and bodies in which components were directly created from bodies by right-clicking a body, and selecting &ldquo;Create components from bodies&rdquo;.</p>
<p><figure style="flex-grow: 172; flex-basis: 413px">
		<a href="../../blog/week-2/3D_fusion360_component_from_body.jpg" data-size="1000x580">
			
			<img src="../../blog/week-2/3D_fusion360_component_from_body.jpg"
				
				width="1000"
				height="580"
				loading="lazy"
				alt="Turning a body into a component directly">
		</a>
		
		<figcaption>Turning a body into a component directly</figcaption>
		
	</figure></p>
<p>Deleting all my components, and trying via this method I created my four components again, went to the <em>Animation</em> menu and tried <em>Auto-Explode</em> again. This time it worked! Truly not sure why the previous way didn&rsquo;t work&hellip;</p>
<p><figure style="flex-grow: 160; flex-basis: 385px">
		<a href="../../blog/week-2/3D_fusion360_auto_explode.jpg" data-size="1000x622">
			
			<img src="../../blog/week-2/3D_fusion360_auto_explode.jpg"
				
				width="1000"
				height="622"
				loading="lazy"
				alt="Finally auto exploding the four components">
		</a>
		
		<figcaption>Finally auto exploding the four components</figcaption>
		
	</figure></p>
<p>I watched parts of <a class="link" href="https://www.youtube.com/watch?v=Mehss_89ldo"  target="_blank" rel="noopener"
    >this</a> Youtube video on exploded views (around the 20 min mark), which made me remove the auto-explosion, and instead move apart my 4 elements manually by using the <em>Transform Components</em> cross-arrow icon in the top.</p>
<p><figure style="flex-grow: 153; flex-basis: 368px">
		<a href="../../blog/week-2/3D_fusion360_transform.jpg" data-size="1000x652">
			
			<img src="../../blog/week-2/3D_fusion360_transform.jpg"
				
				width="1000"
				height="652"
				loading="lazy"
				alt="Manually transforming each of the four components to an exploded view">
		</a>
		
		<figcaption>Manually transforming each of the four components to an exploded view</figcaption>
		
	</figure></p>
<p>And played with the duration and starting point of each movement in the animation timeline that is visible along the bottom. Only through that youtube video did I learn that all of my camera movements of the scene were also being recorded and added to the animation.</p>
<p><figure style="flex-grow: 162; flex-basis: 390px">
		<a href="../../blog/week-2/3D_fusion360_animation_timeline.jpg" data-size="1000x614">
			
			<img src="../../blog/week-2/3D_fusion360_animation_timeline.jpg"
				
				width="1000"
				height="614"
				loading="lazy"
				alt="You can adjust each movement, and the camera movement, in the animation timeline along the bottom">
		</a>
		
		<figcaption>You can adjust each movement, and the camera movement, in the animation timeline along the bottom</figcaption>
		
	</figure></p>
<p>With the <em>Publish</em> button at the top-right you can save the animation to an <em>mp4</em>. See my final explosion animation below:</p>

<figure >
    
        <video class='controls' controls="true" playsinline ><source src='3D_fusion360_exploded_view.mp4' type="video/mp4"></video>
     
    
    <figcaption>Exploded View</figcaption>
    
</figure>
<ul>
<li>Final Fusion 360 STL files of the 4 components | <a class="link" href="3D_fusion360_stl.zip" >zip file</a></li>
<li>Separate SVG files used for the hexagon and puzzle piece sketches | <a class="link" href="3D_fusion360_puzzle_svgs.zip" >zip file</a></li>
</ul>
<p>I had a stretch goal to also cut out a pattern from the sides of the wood and acrylic bottom, but getting to this point already took too much time <span class="kaomoji">ಥ_ಥ</span>
 and thus I moved on to other tools.</p>
<p>Finally, although I never watched any, the Fusion 360 tutorials from <a class="link" href="https://www.youtube.com/channel/UCooViVfi0DaWk_eqxIXXiOQ"  target="_blank" rel="noopener"
    >Product Design Online</a> seem very elaborate and useful. Perhaps I should look into that more if I decide to continue with Fusion 360.</p>
<h3 id="openscad">OpenSCAD</h3>
<p>After the highly visual and mouse driven designing of Fusion 360, I really wanted to try <a class="link" href="https://www.openscad.org/index.html"  target="_blank" rel="noopener"
    >OpenSCAD</a>, since it relies on scripting your model instead.</p>
<p>After a short tutorial given by our instructor Henk about the basics, watching a Youtube <a class="link" href="https://www.youtube.com/watch?v=wXpHRHgJyUE"  target="_blank" rel="noopener"
    >tutorial</a> to learn a little more about modules, skimming through <a class="link" href="https://en.wikibooks.org/wiki/OpenSCAD_Tutorial"  target="_blank" rel="noopener"
    >the OpenSCAD tutorial</a>, and downloading several <a class="link" href="https://www.thingiverse.com/thing:99020"  target="_blank" rel="noopener"
    >very</a> <a class="link" href="https://www.thingiverse.com/thing:37926"  target="_blank" rel="noopener"
    >interesting</a> <a class="link" href="https://www.thingiverse.com/thing:86476"  target="_blank" rel="noopener"
    >examples</a> I was ready to draw my puzzle box.</p>
<p>For quick access, here are some of the OpenSCAD documentation pages that came in handy:</p>
<ul>
<li><a class="link" href="https://en.wikibooks.org/wiki/OpenSCAD_User_Manual"  target="_blank" rel="noopener"
    >OpenSCAD User Manual</a></li>
<li><a class="link" href="https://www.openscad.org/cheatsheet/index.html"  target="_blank" rel="noopener"
    >OpenSCAD Cheat Sheet</a></li>
<li><a class="link" href="https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Primitive_Solid"  target="_blank" rel="noopener"
    >Primitive Solids</a> | cubes, spheres, cylinders and more</li>
<li><a class="link" href="https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Using_the_2D_Subsystem"  target="_blank" rel="noopener"
    >2D Primitives</a> | squares, circles, and how to extrude them</li>
<li><a class="link" href="https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Mathematical_Functions"  target="_blank" rel="noopener"
    >OpenSCAD&rsquo;s mathematical functions</a></li>
<li>To comment the entire selected section: <code>⌘+D</code>, to uncomment: <code>⌘+SHFT+D</code></li>
</ul>
<p>There aren&rsquo;t many button in OpenSCAD since the modelling all happens through the script. Below you can see the general overview with the main button functions that I&rsquo;ve used.</p>
<p><figure style="flex-grow: 169; flex-basis: 406px">
		<a href="../../blog/week-2/3D_openscad_main_functions.png" data-size="1000x590">
			
			<img src="../../blog/week-2/3D_openscad_main_functions.png"
				
				width="1000"
				height="590"
				loading="lazy"
				alt="The OpenSCAD working environment with the main (button) functions that I used">
		</a>
		
		<figcaption>The OpenSCAD working environment with the main (button) functions that I used</figcaption>
		
	</figure></p>
<h4 id="cylinders">Cylinders</h4>
<p>I started pretty simple by setting up some variables such as the radius of the puzzle box and the heights of the wooden and acrylic parts. Next, I drew two <a class="link" href="https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Primitive_Solids#cylinder"  target="_blank" rel="noopener"
    >cylinders</a> on top of each other, representing the wooden top and the acrylic bottom.</p>
<p><figure style="flex-grow: 202; flex-basis: 485px">
		<a href="../../blog/week-2/3D_openscad_two_cylinders.jpg" data-size="1000x494">
			
			<img src="../../blog/week-2/3D_openscad_two_cylinders.jpg"
				
				width="1000"
				height="494"
				loading="lazy"
				alt="Two cylinders on top of each other">
		</a>
		
		<figcaption>Two cylinders on top of each other</figcaption>
		
	</figure></p>
<p>These are quite easy to script, such as the top wooden cylinder with:</p>
<div class="highlight"><pre class="chroma"><code class="language-js" data-lang="js"><span class="c1">//translate upwards by height_acrylic
</span><span class="c1"></span><span class="nx">translate</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">height_acrylic</span><span class="p">])</span>
    <span class="c1">//Create a cylinder that has the same radius at the bottom and the top
</span><span class="c1"></span>    <span class="nx">cylinder</span><span class="p">(</span><span class="nx">height_wood</span><span class="p">,</span> <span class="nx">r</span> <span class="o">=</span> <span class="nx">radius</span><span class="p">);</span>
</code></pre></div><p>I found out that although during a <em>preview</em> I can use different colors for different parts, during an actual render OpenSCAD assumes everything that you make to be one body, and it all turns yellow. I therefore kept using the <em>preview</em> for all development.</p>
<p>I created a hexagon, which interestingly comes from creating a circle/cylinder using only 6 edges. I turned this into a module to be able to easily use it multiple times,</p>
<div class="highlight"><pre class="chroma"><code class="language-js" data-lang="js"><span class="c1">//Create a module, that returns a geometry
</span><span class="c1"></span><span class="nx">module</span> <span class="nx">hexagon</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span> <span class="nx">r</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">//$fn gives the number of facets to use to create a &#34;circle&#34;
</span><span class="c1"></span>    <span class="nx">cylinder</span><span class="p">(</span><span class="nx">$fn</span> <span class="o">=</span> <span class="mi">6</span><span class="p">,</span> <span class="nx">h</span><span class="p">,</span> <span class="nx">r</span> <span class="o">=</span> <span class="nx">r</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div><h4 id="constructive-solid-geometry">Constructive Solid Geometry</h4>
<p>With openSCAD you can create fascinating geometric shapes by using <em>union</em>, <em>difference</em> and <em>intersect</em> on two or more objects. To cut out a hexagonal center from my cylinders, I had to take the <code>difference</code> of a hexagon from a cylinder</p>
<div class="highlight"><pre class="chroma"><code class="language-js" data-lang="js"><span class="c1">//Every object within the difference gets subtracted from the first object
</span><span class="c1"></span><span class="nx">difference</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">cylinder</span><span class="p">(</span><span class="nx">height_wood</span><span class="p">,</span> <span class="nx">r</span> <span class="o">=</span> <span class="nx">radius</span><span class="p">);</span>
    <span class="c1">//Subtract the inner hexagon
</span><span class="c1"></span>    <span class="nx">hexagon</span><span class="p">(</span><span class="nx">height_wood</span><span class="p">,</span> <span class="nx">hex_radius</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div><p>However, that subtraction gave some really weird artifacts when previewed. As if the top and bottom were <em>just</em> there, but stringy.</p>
<p><figure style="flex-grow: 202; flex-basis: 485px">
		<a href="../../blog/week-2/3D_openscad_difference_artifacts.jpg" data-size="1000x494">
			
			<img src="../../blog/week-2/3D_openscad_difference_artifacts.jpg"
				
				width="1000"
				height="494"
				loading="lazy"
				alt="Strange stringy artifacts left after subtracting a hexagon from the cylinder">
		</a>
		
		<figcaption>Strange stringy artifacts left after subtracting a hexagon from the cylinder</figcaption>
		
	</figure></p>
<p>I googled a bit and found that this can happen when the shapes touch <em>exactly</em>. Instead you need to subtract a hexagon that is just a <em>little</em> taller than the cylinder. Someone called it the <em>nothing</em> parameter, because when 3D printed, the difference amounts to nothing. And so I created a <code>nothing = 0.01;</code> parameter and changed my <code>difference</code> function to:</p>
<div class="highlight"><pre class="chroma"><code class="language-js" data-lang="js"><span class="c1">//Every object within the difference gets subtracted from the first object
</span><span class="c1"></span><span class="nx">difference</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">cylinder</span><span class="p">(</span><span class="nx">height_wood</span><span class="p">,</span> <span class="nx">r</span> <span class="o">=</span> <span class="nx">radius</span><span class="p">);</span>
    <span class="c1">//Subtract the inner hexagon
</span><span class="c1"></span>    <span class="c1">//First move the hexagon just a little down
</span><span class="c1"></span>    <span class="nx">translate</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="o">-</span><span class="nx">nothing</span><span class="p">])</span>
        <span class="c1">//Subtract a hexagon shape that is just a little taller than the cylinder
</span><span class="c1"></span>        <span class="nx">hexagon</span><span class="p">(</span><span class="nx">height_wood</span> <span class="o">+</span> <span class="mi">2</span> <span class="o">*</span> <span class="nx">nothing</span><span class="p">,</span> <span class="nx">hex_radius</span><span class="p">);</span>
    <span class="p">}</span><span class="c1">//translate
</span><span class="c1"></span><span class="p">}</span><span class="c1">//difference
</span></code></pre></div><p>And that resulting in a clean cut. It did bug me that I&rsquo;d have to create extra translations though.</p>
<p>I moved on to create the glass plat along the bottom of puzzle floor, and subtracting that same hexagon from the acrylic bottom cylinder.</p>
<p>Because I sometimes only wanted to see the wooden box, or the other two parts, I put the creation of each object into its own module. That way I could call each separately with just one line, such as <code>acrylic_box();</code>, or comment it out if I didn&rsquo;t want to have it drawn.</p>
<p><figure style="flex-grow: 202; flex-basis: 485px">
		<a href="../../blog/week-2/3D_openscad_3_objects.jpg" data-size="1000x494">
			
			<img src="../../blog/week-2/3D_openscad_3_objects.jpg"
				
				width="1000"
				height="494"
				loading="lazy"
				alt="Three simple objects to form the base of my puzzle box">
		</a>
		
		<figcaption>Three simple objects to form the base of my puzzle box</figcaption>
		
	</figure></p>
<h4 id="more-complex-geometry">More Complex Geometry</h4>
<p>Next came a more complex, but still quite geometric shape; the cubby holes. I drew a simple sketch by hand to see how I could create one through adding or subtracting simple geometric shapes, and saw that it&rsquo;s basically a pie slice with a rectangle taken out from the pointy part.</p>
<p>Sadly, openSCAD&rsquo;s <code>cylinder</code> function doesn&rsquo;t have any parameters to take on a starting and ending angle. But thankfully a quick google got me to some <code>pie_slice</code>-like <a class="link" href="https://3dprinting.stackexchange.com/questions/10638"  target="_blank" rel="noopener"
    >functions</a> that I incorporated as a module in my code. I then wrote another module that creates a full cubby hole that can also be rotated:</p>
<div class="highlight"><pre class="chroma"><code class="language-js" data-lang="js"><span class="nx">module</span> <span class="nx">cubby_hole</span><span class="p">(</span><span class="nx">angle</span> <span class="o">=</span> <span class="mi">60</span><span class="p">,</span> <span class="nx">r</span><span class="p">,</span> <span class="nx">h</span><span class="p">,</span> <span class="nx">d</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">difference</span><span class="p">()</span> <span class="p">{</span>
        <span class="c1">//Create and rotate a centered pie-slice
</span><span class="c1"></span>        <span class="nx">rotate</span><span class="p">(</span><span class="o">-</span><span class="nx">angle</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span> <span class="nx">pie_slice</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span> <span class="nx">h</span><span class="p">,</span> <span class="nx">angle</span><span class="p">);</span>

        <span class="c1">//Remove a cube from it, centered on the origin
</span><span class="c1"></span>        <span class="nx">translate</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="nx">nothing</span><span class="p">])</span> <span class="p">{</span>
            <span class="nx">linear_extrude</span><span class="p">(</span><span class="nx">height</span><span class="o">=</span> <span class="nx">h</span> <span class="o">+</span> <span class="mi">2</span><span class="o">*</span><span class="nx">nothing</span><span class="p">)</span> 
                <span class="nx">square</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="nx">d</span><span class="p">,</span> <span class="nx">center</span><span class="o">=</span><span class="kc">true</span><span class="p">);</span> 
        <span class="p">}</span><span class="c1">//translate
</span><span class="c1"></span>    <span class="p">}</span><span class="c1">//difference
</span><span class="c1"></span><span class="p">}</span><span class="c1">//module cubby_hole
</span></code></pre></div><p>Resulting in the following shape</p>
<p><figure style="flex-grow: 202; flex-basis: 485px">
		<a href="../../blog/week-2/3D_openscad_cubby_hole.jpg" data-size="1000x494">
			
			<img src="../../blog/week-2/3D_openscad_cubby_hole.jpg"
				
				width="1000"
				height="494"
				loading="lazy"
				alt="Creating the shape of a cubby hole">
		</a>
		
		<figcaption>Creating the shape of a cubby hole</figcaption>
		
	</figure></p>
<p>I can add the <code>cubby_hole</code> module to the <code>difference</code> function I already had in the wooden top and acrylic bottom, adding it into a <code>for</code> loop to take out 4 cubby holes.</p>
<div class="highlight"><pre class="chroma"><code class="language-js" data-lang="js"><span class="cm">/*Inside the difference function */</span>

<span class="c1">//Cut out the cubby holes
</span><span class="c1"></span><span class="k">for</span> <span class="p">(</span> <span class="nx">i</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span> <span class="o">:</span> <span class="mi">3</span><span class="p">]</span> <span class="p">){</span>
    <span class="nx">rotate</span><span class="p">(</span><span class="o">-</span><span class="nx">i</span> <span class="o">*</span> <span class="mi">60</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">cubby_hole</span><span class="p">(</span><span class="nx">angle</span> <span class="o">=</span> <span class="nx">angle_cubby</span><span class="p">,</span> <span class="nx">r</span> <span class="o">=</span> <span class="nx">radius_hole</span><span class="p">,</span> <span class="nx">h</span> <span class="o">=</span> <span class="nx">height_wood</span> <span class="o">+</span> <span class="mi">2</span> <span class="o">*</span> <span class="nx">nothing</span><span class="p">,</span> <span class="nx">d</span>  <span class="o">=</span> <span class="nx">inside_distance</span><span class="p">);</span>
    <span class="p">}</span><span class="c1">//rotate
</span><span class="c1"></span><span class="p">}</span><span class="c1">//for i
</span></code></pre></div><p>Resulting in the following shape:</p>
<p><figure style="flex-grow: 202; flex-basis: 485px">
		<a href="../../blog/week-2/3D_openscad_cubby_holes_removed.jpg" data-size="1000x494">
			
			<img src="../../blog/week-2/3D_openscad_cubby_holes_removed.jpg"
				
				width="1000"
				height="494"
				loading="lazy"
				alt="Four cubby holes taken out">
		</a>
		
		<figcaption>Four cubby holes taken out</figcaption>
		
	</figure></p>
<h4 id="inserting-the-spirograph-svg">Inserting the Spirograph SVG</h4>
<p>To etch out the spirograph from the top I used the <code>import</code> function to load the SVG file, together with the <code>linear_extrude</code> to give the 2D path some height. Turning it into a simple module:</p>
<div class="highlight"><pre class="chroma"><code class="language-js" data-lang="js"><span class="c1">//Get the spirograph from the SVG
</span><span class="c1"></span><span class="nx">module</span> <span class="nx">spirograph</span><span class="p">(</span><span class="nx">height</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">linear_extrude</span><span class="p">(</span><span class="nx">height</span> <span class="o">=</span> <span class="nx">height</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">scale</span><span class="p">(</span><span class="nx">spiro_scale</span><span class="p">)</span>
        <span class="kr">import</span><span class="p">(</span><span class="s2">&#34;puzzle_spirograph_outlined.svg&#34;</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span><span class="c1">//module spirograph
</span></code></pre></div><p>Thankfully I already had an outlined spirograph shape from using it for the Fusion 360 model. Strangely it didn&rsquo;t load in the origin, even though it did for Fusion 360. Some fiddling with the <code>viewport</code> and overall translation of the inner path within the SVG and I was looking at a spirograph shape in OpenSCAD.</p>
<p>I added the call to the <code>spirograph</code> module to the <code>difference</code> function of the wooden box to etch it out of the top (and also etched it out of the glass plate, since I didn&rsquo;t have any puzzle pieces to etch it out of). Below is the result from doing a <em>render</em> where you can see the etching much better.</p>
<p><figure style="flex-grow: 191; flex-basis: 458px">
		<a href="../../blog/week-2/3D_openscad_etched_spirograph.png" data-size="1000x523">
			
			<img src="../../blog/week-2/3D_openscad_etched_spirograph.png"
				
				width="1000"
				height="523"
				loading="lazy"
				alt="A spirograph etched out of the top">
		</a>
		
		<figcaption>A spirograph etched out of the top</figcaption>
		
	</figure></p>
<p>It was all going rather smooth until this point. However, these were really only rather easy geometric shapes and steps. When I wanted to make more fine-tuning steps, things got quite a bit harder&hellip;</p>
<h4 id="sweeping-a-spirograph-path-with-math">Sweeping a Spirograph Path with Math</h4>
<p>I figured, with such a geometric and mathematically oriented program, shouldn&rsquo;t I be able to etch out the spirograph path by creating the path using the original <em>spirograph formula</em> instead of the SVG!</p>
<p>It turned out that there wasn&rsquo;t a &ldquo;sweep along path&rdquo; option default to OpenSCAD, only the simple <code>linear_extrude</code> and <code>rotate_extrude</code>. However, I found a <a class="link" href="https://github.com/openscad/list-comprehension-demos"  target="_blank" rel="noopener"
    >GitHub repo</a> that contained a <code>sweep</code> function together with some examples on how to use it.</p>
<p>Thankfully in OpenSCAD you can include and use other <code>.scad</code> files, which give you access to all the files' modules (and possibly created geometry when you use <code>include</code> instead of <code>use</code>).</p>
<p>The <code>sweep</code> function used files from yet another non-default library from OpenSCAD called <a class="link" href="https://github.com/openscad/scad-utils"  target="_blank" rel="noopener"
    >scad-utils</a>. I downloaded this, and added both the <code>sweep.scad</code> file and the full <code>scad-utils</code> folder to the library of OpenSCAD (found in <code>Applications/OpenSCAD/Contents/Resources/libraries</code> on a Mac), since these seemed like more general functions that I could be using more often.</p>
<p>I could now use the <code>sweep</code> function by adding <code>use &lt;sweep/sweep.scad&gt;</code> and <code>use &lt;scad-utils/shapes.scad&gt;</code> to the top of my script.</p>
<p>I got some of the simple example scripts working that were included with the <em>sweep</em> files, and turned to creating an array that would hold the path (x &amp; y positions) of my spirograph. With the experience I&rsquo;d had so far, I took my JavaScript code for my spirograph and kind of pseudo-code-like tried to adjust it to OpenSCAD:</p>
<div class="highlight"><pre class="chroma"><code class="language-js" data-lang="js"><span class="c1">//Semi pseudo-code that I wrote as a first try to create a spirograph function in OpenSCAD
</span><span class="c1"></span><span class="nx">module</span> <span class="nx">spiro_step</span><span class="p">(</span><span class="nx">wheels</span><span class="p">,</span> <span class="nx">k</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">line</span> <span class="o">=</span> <span class="p">[];</span>
    <span class="k">for</span><span class="p">(</span><span class="nx">k</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span> <span class="o">:</span> <span class="nx">steps</span><span class="p">])</span> <span class="p">{</span>
        <span class="nx">theta</span> <span class="o">=</span> <span class="nx">step_size</span> <span class="o">*</span> <span class="nx">k</span> <span class="o">*</span> <span class="mi">2</span> <span class="o">*</span> <span class="nx">PI</span><span class="p">;</span>
        <span class="nx">x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="nx">y</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="c1">//Loop over all the wheels
</span><span class="c1"></span>        <span class="k">for</span><span class="p">(</span><span class="nx">i</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span> <span class="o">:</span> <span class="mi">2</span><span class="p">])</span> <span class="p">{</span>
            <span class="nx">angle</span> <span class="o">=</span> <span class="p">(</span><span class="nx">wheels</span><span class="p">[</span><span class="nx">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">*</span> <span class="nx">theta</span> <span class="o">+</span> <span class="nx">PI</span> <span class="o">*</span> <span class="mi">2</span> <span class="o">*</span> <span class="nx">wheels</span><span class="p">[</span><span class="nx">i</span><span class="p">][</span><span class="mi">2</span><span class="p">])</span> <span class="o">*</span> <span class="mi">180</span><span class="o">/</span><span class="nx">PI</span><span class="p">;</span>
            <span class="nx">x</span> <span class="o">=</span> <span class="nx">x</span> <span class="o">+</span> <span class="nx">hex_radius</span> <span class="o">*</span> <span class="nx">wheels</span><span class="p">[</span><span class="nx">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="nx">cos</span><span class="p">(</span><span class="nx">angle</span><span class="p">);</span>
            <span class="nx">y</span> <span class="o">=</span> <span class="nx">y</span> <span class="o">+</span> <span class="nx">hex_radius</span> <span class="o">*</span> <span class="nx">wheels</span><span class="p">[</span><span class="nx">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="nx">sin</span><span class="p">(</span><span class="nx">angle</span><span class="p">);</span>
        <span class="p">}</span><span class="c1">//for i
</span><span class="c1"></span>        <span class="nx">line</span> <span class="o">=</span> <span class="nx">concat</span><span class="p">(</span><span class="nx">line</span><span class="p">,</span> <span class="p">[</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="p">]);</span>
    <span class="p">}</span><span class="c1">//for k
</span><span class="c1"></span><span class="p">}</span><span class="c1">//function spiro_step
</span></code></pre></div><p>I <a class="link" href="https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/User-Defined_Functions_and_Modules"  target="_blank" rel="noopener"
    >learned</a> that modules can only return geometries, not values. But OpenSCAD did have functions! Alright, without investigating further, I figured, a function is a function, no matter if it&rsquo;s JS, python or OpenSCAD. I replaced <code>module</code> by <code>function</code>, but was plagued by errors in the console. I couldn&rsquo;t quite grasp what the issue was. After actually googling a bit about functions in OpenSCAD I was baffled to find out that OpenSCAD only allows the <em>simplest</em> of functions, just one line statements <span class="kaomoji">(⑉⊙ȏ⊙)</span>
 WHY?! I&rsquo;m <a class="link" href="http://forum.openscad.org/function-syntax-td5915.html"  target="_blank" rel="noopener"
    >far from the only one</a> asking this question, but ok, nothing I could do about it, but to <em>slowly</em> transform my human-readable, usable, spirograph function into something that worked within OpenSCAD.</p>
<p>It took <em>many</em> tries, and lots of <code>echo(&lt;&lt;variable&gt;&gt;)</code> calls, but I got it working eventually. However, it now looked like the following mess <em>just</em> to get an array with points along the spirograph:</p>
<div class="highlight"><pre class="chroma"><code class="language-js" data-lang="js">    <span class="nx">line_data</span> <span class="o">=</span> <span class="p">[</span>
        <span class="k">for</span> <span class="p">(</span><span class="nx">k</span> <span class="o">=</span> <span class="p">[</span> <span class="mi">0</span> <span class="o">:</span> <span class="nx">steps</span><span class="p">])</span> <span class="p">[</span> <span class="c1">//set up the x, y and z values
</span><span class="c1"></span>            <span class="nx">x_total</span><span class="p">(</span><span class="nx">wheels</span><span class="p">,</span> <span class="nx">step_size</span> <span class="o">*</span> <span class="nx">k</span> <span class="o">*</span> <span class="mi">2</span> <span class="o">*</span> <span class="nx">PI</span><span class="p">),</span> 
            <span class="nx">y_total</span><span class="p">(</span><span class="nx">wheels</span><span class="p">,</span> <span class="nx">step_size</span> <span class="o">*</span> <span class="nx">k</span> <span class="o">*</span> <span class="mi">2</span> <span class="o">*</span> <span class="nx">PI</span><span class="p">),</span> 
            <span class="mi">0</span><span class="p">]</span>
    <span class="p">];</span>

    <span class="c1">//////// Spirograph Functions ////////
</span><span class="c1"></span>    <span class="kd">function</span> <span class="nx">angle</span><span class="p">(</span><span class="nx">wheels</span><span class="p">,</span> <span class="nx">index</span><span class="p">,</span> <span class="nx">theta</span><span class="p">)</span> <span class="o">=</span> <span class="p">(</span><span class="nx">wheels</span><span class="p">[</span><span class="nx">index</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">*</span> <span class="nx">theta</span> <span class="o">+</span> <span class="nx">PI</span> <span class="o">*</span> <span class="mi">2</span> <span class="o">*</span> <span class="nx">wheels</span><span class="p">[</span><span class="nx">index</span><span class="p">][</span><span class="mi">2</span><span class="p">])</span> <span class="o">*</span> <span class="mi">180</span><span class="o">/</span><span class="nx">PI</span><span class="p">;</span>
    
    <span class="kd">function</span> <span class="nx">x_val</span><span class="p">(</span><span class="nx">wheels</span><span class="p">,</span> <span class="nx">index</span><span class="p">,</span> <span class="nx">angle</span><span class="p">)</span> <span class="o">=</span> <span class="nx">radius</span> <span class="o">*</span> <span class="nx">wheels</span><span class="p">[</span><span class="nx">index</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="nx">cos</span><span class="p">(</span><span class="nx">angle</span><span class="p">);</span>
    <span class="kd">function</span> <span class="nx">y_val</span><span class="p">(</span><span class="nx">wheels</span><span class="p">,</span> <span class="nx">index</span><span class="p">,</span> <span class="nx">angle</span><span class="p">)</span> <span class="o">=</span> <span class="nx">radius</span> <span class="o">*</span> <span class="nx">wheels</span><span class="p">[</span><span class="nx">index</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="nx">sin</span><span class="p">(</span><span class="nx">angle</span><span class="p">);</span>
    
    <span class="kd">function</span> <span class="nx">x_total</span><span class="p">(</span><span class="nx">wheels</span><span class="p">,</span> <span class="nx">theta</span><span class="p">)</span> <span class="o">=</span> <span class="nx">x_val</span><span class="p">(</span><span class="nx">wheels</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">angle</span><span class="p">(</span><span class="nx">wheels</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">theta</span><span class="p">))</span> <span class="o">+</span> <span class="nx">x_val</span><span class="p">(</span><span class="nx">wheels</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="nx">angle</span><span class="p">(</span><span class="nx">wheels</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="nx">theta</span><span class="p">))</span>  <span class="o">+</span> <span class="nx">x_val</span><span class="p">(</span><span class="nx">wheels</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="nx">angle</span><span class="p">(</span><span class="nx">wheels</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="nx">theta</span><span class="p">));</span> 
    
    <span class="kd">function</span> <span class="nx">y_total</span><span class="p">(</span><span class="nx">wheels</span><span class="p">,</span> <span class="nx">theta</span><span class="p">)</span> <span class="o">=</span> <span class="nx">y_val</span><span class="p">(</span><span class="nx">wheels</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">angle</span><span class="p">(</span><span class="nx">wheels</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">theta</span><span class="p">))</span> <span class="o">+</span> <span class="nx">y_val</span><span class="p">(</span><span class="nx">wheels</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="nx">angle</span><span class="p">(</span><span class="nx">wheels</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="nx">theta</span><span class="p">))</span>  <span class="o">+</span> <span class="nx">y_val</span><span class="p">(</span><span class="nx">wheels</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="nx">angle</span><span class="p">(</span><span class="nx">wheels</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="nx">theta</span><span class="p">));</span>
</code></pre></div><p>Since I&rsquo;d only been using this tool for a few hours, I&rsquo;m sure that experts would be able to rewrite this to something shorter. However, I do wonder if that makes it more human-readable? I personally didn&rsquo;t grasp how to instead create a spirograph function with OpenSCAD&rsquo;s <em>list-comprehension</em> for example.</p>
<p>I still had some errors in my console, about the circular shape being unknown. After diving into the <code>shapes.scad</code> file from the <code>scad-utils</code> library I added, I saw that it used the <code>$fn</code> value to set the number of fragments to use. I hadn&rsquo;t set this in my script, and the default value is zero, thus the circle function failed. Easy enough to fix thankfully, although the error messages were a bit vague, making it hard to find the true reason (strangely enough, the sweep function couldn&rsquo;t use the 2D primitive <code>circle</code> that is part of OpenSCAD itself). And then <em>finally</em> I had the sweep function working, and had a spirograph object in my window.</p>
<p><figure style="flex-grow: 178; flex-basis: 428px">
		<a href="../../blog/week-2/3D_openscad_spirograph_sweep.png" data-size="1000x560">
			
			<img src="../../blog/week-2/3D_openscad_spirograph_sweep.png"
				
				width="1000"
				height="560"
				loading="lazy"
				alt="Creating a sweep along the spirograph path using a hexagon for a shape">
		</a>
		
		<figcaption>Creating a sweep along the spirograph path using a hexagon for a shape</figcaption>
		
	</figure></p>
<p>However, when I then added this shape as a <code>difference</code> to the glass plate, instead of using the SVG version, the places where the spirograph line intersected, were not being removed from the glass plate.</p>
<p><figure style="flex-grow: 218; flex-basis: 525px">
		<a href="../../blog/week-2/3D_openscad_spirograph_difference.jpg" data-size="600x274">
			
			<img src="../../blog/week-2/3D_openscad_spirograph_difference.jpg"
				
				width="600"
				height="274"
				loading="lazy"
				alt="Taking the difference of the spirograph and glass plate left the areas where the spirograph path intersects itself">
		</a>
		
		<figcaption>Taking the difference of the spirograph and glass plate left the areas where the spirograph path intersects itself</figcaption>
		
	</figure></p>
<p>I wasn&rsquo;t really sure why. Does a self intersection imply the inverse of the volume? However, this had taken me more than enough time already, and besides, I already had a working spirograph etching by using the SVG version. I therefore took out the sweeped spirograph module and code, put it into a new file, added a <code>z</code> coordinate value that is based on the distance from the center, and turned my spirograph line into a bowl <span class="kaomoji">(⌐■_■)</span>
</p>
<p><figure style="flex-grow: 202; flex-basis: 486px">
		<a href="../../blog/week-2/3D_openscad_spirograph_bowl.png" data-size="1000x493">
			
			<img src="../../blog/week-2/3D_openscad_spirograph_bowl.png"
				
				width="1000"
				height="493"
				loading="lazy"
				alt="My spirograph &lsquo;bowl&rsquo;">
		</a>
		
		<figcaption>My spirograph ‘bowl’</figcaption>
		
	</figure></p>
<h4 id="shell">Shell</h4>
<p>Returning to my puzzle box, I wanted to try and turn the acrylic bottom into a shell. In Fusion 360 that was exceptionally easy. In openSCAD there was no default function to do this. I googled, and found that the <code>morphology.scad</code> file from the <a class="link" href="https://github.com/openscad/scad-utils"  target="_blank" rel="noopener"
    >scad-utils</a> library had a <code>shell</code> option.</p>
<p>It seemed quite simple, I only had to call the <code>shell</code> function and then give it the shape, e.g. <code>shell(d=-0.3) shape();</code>. However, I got the error that <code>Mixing 2D and 3D objects is not supported</code>. Looking into the <code>morphology.scad</code> file and the example given in the repo, together with the error code, gave me the idea that it was perhaps only meant for 2D geometries, not 3D like my acrylic box.</p>
<p>Alright, no shell this time then. I just cut a hexagon straight through the acrylic box.</p>
<p><figure style="flex-grow: 202; flex-basis: 485px">
		<a href="../../blog/week-2/3D_openscad_hexagon_cut_acrylic_box.jpg" data-size="1000x494">
			
			<img src="../../blog/week-2/3D_openscad_hexagon_cut_acrylic_box.jpg"
				
				width="1000"
				height="494"
				loading="lazy"
				alt="Cutting a simple hexagon from the bottom of the acrylic box">
		</a>
		
		<figcaption>Cutting a simple hexagon from the bottom of the acrylic box</figcaption>
		
	</figure></p>
<h4 id="not-creating-fillets">(Not) Creating Fillets</h4>
<p>I briefly looked into fillets, but when I again found many google posts about how there was no fillet default function, and how people struggled, I let this one go.</p>
<h4 id="puzzles-pieces">Puzzles Pieces</h4>
<p>Creating the puzzle pieces didn&rsquo;t feel like it would add much knowledge and merely take up time that I wanted to use for exploring more tools, and thus I decided not to include them here. If I <em>had</em> added them, I would have probably gone back to my SVG in Illustrator, selected the lines of the puzzle pieces, thickened the strokes, and outlined all the strokes. Next, I would&rsquo;ve loaded that new SVG into OpenSCAD, scaled it, added a <code>linear_extrude</code> to give it height and then taken a difference with a hexagon shape to create all the pieces. Sadly, this doesn&rsquo;t make the thickness of the gap between the puzzle pieces easily adjustable / a parameter, since that happens with the stroke thickness in Illustrator.</p>
<h4 id="openscad-final-result">OpenSCAD Final Result</h4>
<p>Below you can see the final result of what I created with OpenSCAD:</p>
<p><figure style="flex-grow: 150; flex-basis: 360px">
		<a href="../../blog/week-2/3D_openscad_final.jpg" data-size="1000x666">
			
			<img src="../../blog/week-2/3D_openscad_final.jpg"
				
				width="1000"
				height="666"
				loading="lazy"
				alt="The final (preview) result from OpenSCAD">
		</a>
		
		<figcaption>The final (preview) result from OpenSCAD</figcaption>
		
	</figure></p>
<p>I saved the 3 separate elements into their own STL file, and you can find them all here, together with the original <code>.scad</code> file and the spirograph bowl:</p>
<ul>
<li>The different components as separate STL files | <a class="link" href="3D_openscad_STL.zip" >zip file</a></li>
<li>The final OpenSCAD file and spirograph SVG | <a class="link" href="3D_openscad_files.zip" >zip file</a></li>
<li>The spirograph bowl OpenSCAD and STL files | <a class="link" href="3D_openscad_spirograh_bowl.zip" >zip file</a></li>
</ul>
<h4 id="final-thoughts-on-openscad">Final Thoughts on OpenSCAD</h4>
<p>I did like working with OpenSCAD when it was all still about (easy) geometric shapes and combinations. But once I wanted something more difficult, such as the sweep, more complex functions, fillets, a shell, I really hit some walls. Perhaps with hours and hours of more experience I would overcome some of those, but for now I see OpenSCAD as a great tool for creating interesting <em>highly</em> geometric / mathematical models (with some rough edges), but not what I would use for my final project.</p>
<p>I also noticed that 9 out of 10 pages with questions about openSCAD that I found while trying to fix my bugs came from ~2011 - 2014, maybe up to 2016, barely anything more recent than that. That felt quite odd to me. Is the tool no longer popular? Are all the questions asked? (That can never happen though). Even the <code>scad-utils</code> and <code>sweep</code> libraries had not seen updates in the past ±6 years! Not sure what to make of that, but it didn&rsquo;t feel like a good development.</p>
<p>Bonus though for being the only tool I could use functionally without a mouse and just my laptop (including trackpad), and thus spend my Saturday evening on the couch and Sunday morning in bed <span class="kaomoji">(⌐■_■)</span>
</p>
<h3 id="xdesign">xDesign</h3>
<p>xDesign is an online CAD software, from the same company as <em>SolidWorks</em>. You don&rsquo;t have to download and install any software, however you do need an internet connection.</p>
<p>These are some of the videos that I watched to learn about xDesign:</p>
<ul>
<li>The Basics of Sketching and Creating Extruded Features <a class="link" href="https://www.youtube.com/watch?v=EEeFfGSQX2k"  target="_blank" rel="noopener"
    >video</a></li>
<li>Learning How to Use Patterns, Mirrors and Sweep Features <a class="link" href="https://www.youtube.com/watch?v=IurpjYf3jp0"  target="_blank" rel="noopener"
    >video</a></li>
<li>Basics of Building an Assembly <a class="link" href="https://www.youtube.com/watch?v=dgceGDMzR0Y"  target="_blank" rel="noopener"
    >video</a></li>
<li><a class="link" href="https://eduspace.3ds.com/CompanionManager/ui/index_lms.html?lpId=223539&amp;lang=en&amp;rc_Type=8&amp;lexType=1&amp;utm_source=10473_2_5&amp;utm_medium=por_crs&amp;utm_campaign=C223539&amp;ticket=ST-684300-g2Bx0wLQuv7hfCCJui77-cas"  target="_blank" rel="noopener"
    >&ldquo;Explore the 3D Creator Role&rdquo;</a>, which turns out to be a course on xDesign (not very well named I&rsquo;d say).</li>
</ul>
<p>Because every tool has this implemented differently, and I keep forgetting, here are the view controls:</p>
<ul>
<li>Rotate: Right-mouse hold and move</li>
<li>Zooming: Right-mouse hold + Shift key and move</li>
<li>Panning: Never managed to figure this out&hellip;</li>
</ul>
<p>And below is an image of how the xDesign environment looks. At the bottom are the main tools, with the <em>Sketch</em> currently active. Besides <em>Sketch</em> is was mostly within the <em>Features</em> tab.</p>
<p><figure style="flex-grow: 174; flex-basis: 419px">
		<a href="../../blog/week-2/3D_xdesign_main_options.png" data-size="1562x893">
			
			<img src="../../blog/week-2/3D_xdesign_main_options.png"
				
				width="1562"
				height="893"
				loading="lazy"
				alt="Some of the main (sketching) options I used in xDesign">
		</a>
		
		<figcaption>Some of the main (sketching) options I used in xDesign</figcaption>
		
	</figure></p>
<h4 id="sketch">Sketch</h4>
<p>Just like with Fusion 360, you start be creating a <em>Sketch</em>, with the little icon that looks like graph paper around the middle of the <em>Sketch</em> tab&rsquo;s options. You select a plane to start the sketch on. I went for the XY-plane.</p>
<p>You can draw several kinds of geometries, such as lines, arcs, rectangles, circles, and polygons. I started with a circle, clicking the diameter box afterwards to change its dimension to 500mm.</p>
<p><figure style="flex-grow: 207; flex-basis: 496px">
		<a href="../../blog/week-2/3D_xdesign_create_circle.jpg" data-size="1000x483">
			
			<img src="../../blog/week-2/3D_xdesign_create_circle.jpg"
				
				width="1000"
				height="483"
				loading="lazy"
				alt="Draw a circle in the sketch and fixing its diameter">
		</a>
		
		<figcaption>Draw a circle in the sketch and fixing its diameter</figcaption>
		
	</figure></p>
<p>I wanted to make this parametric and use a variable for that dimension. However, <strong>I wasn&rsquo;t able to find any button or tool that would let me create parameters</strong>. Googling for it came up empty too. I asked my partner to check how it was done in <em>SolidWorks</em> and there you had many options when you clicked on the dimension box to change it, one of which was to setup and create parameters. I also noticed that in all of the tutorials that I&rsquo;d watched, I had not seen the usage of parameters. All dimensions were hard-coded as numbers. That made me think that perhaps xDesign wasn&rsquo;t meant for pure parametric modelling? But perhaps I&rsquo;ve just missed how to add parameters.</p>
<h4 id="extruding-a-cylinder">Extruding a Cylinder</h4>
<p>I finished the sketch, selected the <em>Features</em> tab and then <em>Extrude</em> to extrude the circle upwards into a cylinder. This would be the acrylic bottom. I then selected the top of the cylinder and extruded this. However now I used <em>New</em> as an option to create it as a new body for the &ldquo;wooden top&rdquo;.</p>
<p><figure style="flex-grow: 207; flex-basis: 496px">
		<a href="../../blog/week-2/3D_xdesign_extrude_second_cylinder.jpg" data-size="1000x483">
			
			<img src="../../blog/week-2/3D_xdesign_extrude_second_cylinder.jpg"
				
				width="1000"
				height="483"
				loading="lazy"
				alt="Extruding the &ldquo;wooden top&rdquo; as a second cylinder, making it into a new body">
		</a>
		
		<figcaption>Extruding the “wooden top” as a second cylinder, making it into a new body</figcaption>
		
	</figure></p>
<h4 id="not-importing-an-svg">(Not) Importing an SVG</h4>
<p>Next I wanted to import my puzzle hexagon SVG into the sketch. I opened up the original sketch again, and went searching for some sort of <em>Import</em> functionality. There was indeed an <em>Import</em> option hidden behind the <em>New/Open/Import</em> icon all the way to the left of the bottom menu. However, this only let me import 3D models, not SVGs. Some Googling taught me that there was an SVG import function <em>in SolidWorks</em>, but I couldn&rsquo;t find any reference of it for xDesign. Alright, second hiccup so far that would not work well for using xDesign for my final project.</p>
<h4 id="cutting-hexagons">Cutting Hexagons</h4>
<p>I could also create a hexagon shape with the <em>Polygon</em> option in the Sketch menu. So I went back into my sketch (in the <em>History</em> panel, right-click the sketch and select <em>Edit Sketch</em>), drew a hexagon, and then found out that the points of the hexagon wouldn&rsquo;t snap to any axis. I therefore added a line that I wanted to fix at 30° and then make a hexagon point snap to that. You create a construction line by first drawing a normal line, selecting it, and in the little window that appears to the top-right upon selection, clicking the top-left icon that says <em>Construction</em> (when you hover over it for a second or two). I then selected the <em>Sketch Dimension</em> in the lower tab, but I couldn&rsquo;t set the angle yet. I added another construction line to represent the x-axis, and <em>then</em> when I selected both construction lines with the <em>Sketch Dimension</em> active, I could set the angle. Deactivating the dimensions option (just press escape). Selecting the point along the hexagon and the line at 30° a little window appeared in the top-right in which I could make these <em>Coincident</em>. That fixed my hexagon finally.</p>
<p><figure style="flex-grow: 207; flex-basis: 496px">
		<a href="../../blog/week-2/3D_xdesign_hexagon_sketch.jpg" data-size="1000x483">
			
			<img src="../../blog/week-2/3D_xdesign_hexagon_sketch.jpg"
				
				width="1000"
				height="483"
				loading="lazy"
				alt="Creating a hexagon in my sketch required two construction lines to fix">
		</a>
		
		<figcaption>Creating a hexagon in my sketch required two construction lines to fix</figcaption>
		
	</figure></p>
<p>I also immediately created a slightly larger hexagon with the <em>Offset</em> option from the lower tab bar.</p>
<p>I saved the sketch and wanted to cut some hexagons from the two cylinders. But this proved to be far more difficult than I thought. xDesign kept telling me that <code>the selected end condition failed</code>. I wasn&rsquo;t sure what the issue was. I had selected the top of the highest cylinder as the face for the start of the cut, since i didn&rsquo;t want the cut to start from the sketch plane. I tried setting the distance to a minus, but that didn&rsquo;t solve it. And then I tried the original way again, and this time it <em>did</em> work&hellip;</p>
<p><figure style="flex-grow: 207; flex-basis: 496px">
		<a href="../../blog/week-2/3D_xdesign_cutting_hexagons.jpg" data-size="1000x483">
			
			<img src="../../blog/week-2/3D_xdesign_cutting_hexagons.jpg"
				
				width="1000"
				height="483"
				loading="lazy"
				alt="Cutting the hexagon shape from the cylinders">
		</a>
		
		<figcaption>Cutting the hexagon shape from the cylinders</figcaption>
		
	</figure></p>
<p>And this wasn&rsquo;t the only cut that I struggled with to get working, basically any cut that wasn&rsquo;t starting or ending at the sketch plane required several tries, and then at some point it worked, and in some cases I just gave up.</p>
<h4 id="mirroring-in-sketches--3d">Mirroring in Sketches &amp; 3D</h4>
<p>For the cubby holes I created a new sketch on top face of the &ldquo;wooden&rdquo; cylinder. I created another construction line at 25°. It took a few tries to get the shape at the approximate position that I wanted (with two lines and one arc), and then mirrored it along the x-axis.</p>
<p><figure style="flex-grow: 207; flex-basis: 497px">
		<a href="../../blog/week-2/3D_xdesign_mirror_half_cubby_hole.jpg" data-size="1000x482">
			
			<img src="../../blog/week-2/3D_xdesign_mirror_half_cubby_hole.jpg"
				
				width="1000"
				height="482"
				loading="lazy"
				alt="Mirroring half of my cubby hole lines in the sketch to create a full hole">
		</a>
		
		<figcaption>Mirroring half of my cubby hole lines in the sketch to create a full hole</figcaption>
		
	</figure></p>
<p>Saving the sketch I selected all four edges of the cubby hole lines (I couldn&rsquo;t select that shape itself strangely enough) and performed another cut into the cylinders. This cut finally went smoothly, because I was cutting from the sketch plane I think.</p>
<p>I then used the <em>Circular Pattern</em> from the <em>Features</em> tab to cut out three more cubby holes, using the top face as the <em>Pattern Axis</em>.</p>
<p><figure style="flex-grow: 207; flex-basis: 497px">
		<a href="../../blog/week-2/3D_xdesign_circular_pattern.jpg" data-size="1000x482">
			
			<img src="../../blog/week-2/3D_xdesign_circular_pattern.jpg"
				
				width="1000"
				height="482"
				loading="lazy"
				alt="Mirroring the cut cubby hole 4 times along the circle">
		</a>
		
		<figcaption>Mirroring the cut cubby hole 4 times along the circle</figcaption>
		
	</figure></p>
<h4 id="separating-the-bodies">Separating the Bodies</h4>
<p>Although I had read that you could create multiple components within the same xDesign window, I felt that I had done things wrong and that in my current design the acrylic bottom and wooden top were seen as the same body. After watching a short tutorial I learned that I did probably went about this the wrong way, and I should&rsquo;ve set up the wooden and acrylic part as two separate &ldquo;Ordered Geometrical Sets&rdquo;.</p>
<p>The option to create one is within the <em>Tools</em> tab (towards the right side). I then tried to drag the 2nd extrusion to this new set, but that didn&rsquo;t work. Fine, I&rsquo;ll just recreate the second cylinder in the new set, but that meant that I had to delete it from the first set. I wasn&rsquo;t sure how I could re-use the same sketch for my 2nd set though. It seemed like I wouldn&rsquo;t be the only person to want to re-use parts of a sketch for different components? But somehow I wasn&rsquo;t able to make <em>any</em> changes to the first set anymore. Perhaps I was missing some way to <em>activate</em> one set at a time?</p>
<p><figure style="flex-grow: 207; flex-basis: 497px">
		<a href="../../blog/week-2/3D_xdesign_ordered_geometrical_set.jpg" data-size="1000x482">
			
			<img src="../../blog/week-2/3D_xdesign_ordered_geometrical_set.jpg"
				
				width="1000"
				height="482"
				loading="lazy"
				alt="Created a second &ldquo;Ordered Geometrical Set&rdquo; to hopefully separate my bottom and top">
		</a>
		
		<figcaption>Created a second “Ordered Geometrical Set” to hopefully separate my bottom and top</figcaption>
		
	</figure></p>
<p>I therefore undid my actions to before I created the second <em>Ordered Geometrical Set</em>, so I could make changes again to my original design. I threw away all the steps that I had done to create the wooden top, and recreated a second set. But now I was getting errors that my 2nd sketch (that was originally at the top of the second cylinder) was now <code>dangling in space</code> and I couldn&rsquo;t find any way to move it, or use any part of that sketch to use as extrusions or cuts (there were no more cubby holes in my design anymore for example). Googling for it came up empty yet again.</p>
<p>I was quite frustrated with xDesign at this point, and just accepted that I&rsquo;d set up this whole design wrong. I was also 100% sure that I wouldn&rsquo;t be using xDesign anymore, finding the other tools that I&rsquo;d tried to fit me much better. I thus didn&rsquo;t mind that my model from xDesign wasn&rsquo;t a proper one. I&rsquo;d tried the tool, that was the point. I therefore undid all my actions again until I had my two cylinders and four cubby holes back.</p>
<h4 id="shell-1">Shell</h4>
<p>I did apply the <em>Shell</em> command to carve out the bottom acrylic box, just to see how that would go. This finally went well again.</p>
<p><figure style="flex-grow: 207; flex-basis: 497px">
		<a href="../../blog/week-2/3D_xdesign_shell.jpg" data-size="1000x482">
			
			<img src="../../blog/week-2/3D_xdesign_shell.jpg"
				
				width="1000"
				height="482"
				loading="lazy"
				alt="Turning the bottom cylinder into a shell">
		</a>
		
		<figcaption>Turning the bottom cylinder into a shell</figcaption>
		
	</figure></p>
<h4 id="xdesign-final-results">xDesign Final Results</h4>
<p>Not very proud of this result, but this is how my final model looked from xDesign:</p>
<p><figure style="flex-grow: 105; flex-basis: 252px">
		<a href="../../blog/week-2/3D_xdesign_final.jpg" data-size="536x509">
			
			<img src="../../blog/week-2/3D_xdesign_final.jpg"
				
				width="536"
				height="509"
				loading="lazy"
				alt="Turning the bottom cylinder into a shell">
		</a>
		
		<figcaption>Turning the bottom cylinder into a shell</figcaption>
		
	</figure></p>
<p>And the STL file (the xDesign file is in the cloud I think, which you might be able to find if you search for my name in the online environment?):</p>
<ul>
<li>The model as an STL file | <a class="link" href="3D_xdesign_final.stl" >stl file</a></li>
</ul>
<h4 id="final-thoughts-on-xdesign">Final Thoughts on xDesign</h4>
<p>There were many things that I didn&rsquo;t like about xDesign. These are only a few specific examples:</p>
<ul>
<li>I couldn&rsquo;t find answers to many questions I had about xDesign by Googling, such as: how to insert and SVG to the sketch, how to pan and zoom with a mouse, how to create and use parameters.</li>
<li>I don&rsquo;t think you can actually work with user defined parameters, which makes good parametric modelling impossible?</li>
<li>Even if I create a dimension with a formula, such as <code>500 * 0.6</code>, when I then click this dimension again, it only shows the result of the equation (<code>300</code>) not the equation itself, which is lost.</li>
<li>The fact that you can&rsquo;t import an SVG as a sketch (as far as I have been able to figure out) was a major downside for my particular project.</li>
<li>There were <em>very</em> few tutorials on xDesign, barely any on Youtube.</li>
<li>There is a <em>User Assistance</em> in xDesign, but you can&rsquo;t <em>search</em> in it.</li>
<li>There are only a few available <em>Materials</em>; only plastics, glass and metals (and even less materials when you want a &ldquo;core material&rdquo; instead of a &ldquo;covering material&rdquo;), no wood at all.</li>
<li>I found the handling of the mouse with the view to be a little tricky. I never actually figured out how to pan, and had to use the <em>Reframe</em> option (hidden behind the left-pointing arrow head to the left of the chair in the top right) to get my model back into a useful position and zoom level quite often.</li>
</ul>
<p>It&rsquo;s probably me though. Perhaps my mind has been biased by using several other CAD tools before. Or part of it was that we didn&rsquo;t get an introduction tutorial to xDesign by an expert to show us the general mindset. Or perhaps xDesign is too minimal? But gosh was I <em>frustrated</em> with this tool many times. It just seemed that everything went much smoother and was more user-friendly in Fusion 360.</p>
<p>I know that part of this frustration also comes from not having taken enough time to sit and watch more tutorials (I think I watched about an hour of tutorials), but for now it&rsquo;s pretty clear to me that I&rsquo;ll not be continuing with xDesign.</p>
<h3 id="freecad">FreeCAD</h3>
<p>And then it was Wednesday and time was up sadly <span class="kaomoji">(╥﹏╥)</span>
</p>
<h3 id="blender">Blender</h3>
<p>I&rsquo;ve tried Blender for some simple experiments about 2 years ago. I made a donut by following BlenderGuru&rsquo;s <em>excellent</em> <a class="link" href="https://www.youtube.com/playlist?list=PLjEaoINr3zgEq0u2MzVgAaHEBt--xLB6U"  target="_blank" rel="noopener"
    >Blender tutorials</a>. I then worked with Blender for a few experiments through the <em>python</em> API only.</p>
<p><figure style="flex-grow: 177; flex-basis: 426px">
		<a href="../../blog/week-2/3D_blender_earlier_circles.jpg" data-size="1000x563">
			
			<img src="../../blog/week-2/3D_blender_earlier_circles.jpg"
				
				width="1000"
				height="563"
				loading="lazy"
				alt="A random collection of balls I created in Blender during 2019">
		</a>
		
		<figcaption>A random collection of balls I created in Blender during 2019</figcaption>
		
	</figure></p>
<p>I think it&rsquo;s absolutely <em>amazing</em> for 3D (even 2D) animated movies and games, with extensive sculpting options, and photo realistic results. However, with that experience, and while attending the (also great) <a class="link" href="http://fcycle.de/tutorials/blender/"  target="_blank" rel="noopener"
    >Blender tutorial</a> given by Ferdi from FabLab Kamp-Lintfort during the past three Sundays, it was clear to me that I didn&rsquo;t want to use this tool for the actual parametric design. <em>However</em>, I did indeed want to use it for next-level rendering and animations.</p>
<p>With the tutorials from Ferdi, and scanning some specific videos from BlenderGuru&rsquo;s donut tutorial again, I got started.</p>
<p><figure style="flex-grow: 165; flex-basis: 398px">
		<a href="../../blog/week-2/3D_blender_main_screen.png" data-size="1000x603">
			
			<img src="../../blog/week-2/3D_blender_main_screen.png"
				
				width="1000"
				height="603"
				loading="lazy"
				alt="The starting screen of Blender">
		</a>
		
		<figcaption>The starting screen of Blender</figcaption>
		
	</figure></p>
<p>Blender really is too chuck full of (hidden) options to explain all or explain well in here. I&rsquo;ve done lots of explorations to finally get at my final render and animations. Let me share the main ones. You can assume that I had to (extensively) google <em>every. little. thing.</em> that I explain below.</p>
<p>To remind my future self, the mouse view moves:</p>
<ul>
<li>Rotate: Middle mouse click, hold and drag</li>
<li>Panning: Shift + Middle mouse click, hold and drag</li>
<li>Zoom: Mouse scroll</li>
</ul>
<h4 id="importing-stl">Importing STL</h4>
<p>I first imported the four <code>.stl</code> files of my result in Fusion 360 into Blender (<em>File</em> -&gt; <em>Import</em> -&gt; <em>.stl</em>). This gets you to the finder window to select you files, but it also contains some other useful settings to set the scale and what direction should be <em>up</em> and <em>forward</em> for example. On the first try I ignored this, and imported my puzzle base, only to find that it was the size of a skyscraper compared to my scene! Eventually I settled on a measly <code>0.02</code> scaling.</p>
<p><figure style="flex-grow: 180; flex-basis: 433px">
		<a href="../../blog/week-2/3D_blender_puzzle_base.jpg" data-size="1000x553">
			
			<img src="../../blog/week-2/3D_blender_puzzle_base.jpg"
				
				width="1000"
				height="553"
				loading="lazy"
				alt="Imported my puzzle base into Blender">
		</a>
		
		<figcaption>Imported my puzzle base into Blender</figcaption>
		
	</figure></p>
<p>Interestingly, when I saved my puzzle pieces component, Fusion 360 gave me the option to save all bodies (pieces) into one file or each piece separately. Quite a handy option to have. Thankfully, from Ferdi&rsquo;s tutorial I&rsquo;d seen the option to separate bodies in Blender, so I kept all puzzle pieces in one STL. Another handy thing was that each of the four puzzle objects was positioning correctly in space when imported into Blender. I didn&rsquo;t have to move any of them to have them exactly aligned.</p>
<h4 id="adding-objects">Adding Objects</h4>
<p>In Blender you can press <code>SHFT+A</code> to add new objects. You get a pop-up window from which you can select many things. With my puzzle imported (and the default cube removed), I added a base plane, as the &ldquo;floor&rdquo; to put my puzzle on. Using <code>S</code> I could scale the plane really big (much later I turned this into a curved plane, following the steps found <a class="link" href="https://blender.stackexchange.com/questions/5623"  target="_blank" rel="noopener"
    >here</a> to have some shadow falling on a background).</p>
<p><figure style="flex-grow: 164; flex-basis: 394px">
		<a href="../../blog/week-2/3D_blender_add.jpg" data-size="1000x608">
			
			<img src="../../blog/week-2/3D_blender_add.jpg"
				
				width="1000"
				height="608"
				loading="lazy"
				alt="Adding new objects into Blender with SHFT&#43;A">
		</a>
		
		<figcaption>Adding new objects into Blender with SHFT+A</figcaption>
		
	</figure></p>
<h4 id="some-useful-tips">Some Useful Tips</h4>
<p>A few other move/scale/rotate moves I used often, when an object is selected, while in <em>Object</em> mode of the <em>3D Viewport</em> (the main window that you see when starting a new file):</p>
<ul>
<li>Move it by pressing <code>g</code>, to only move things in the <em>x</em> direction, press <code>g+x</code>, or to move an object in the <em>xy</em>-plane, press <code>g+SHFT+z</code> (move in every direction <em>except</em> the <em>z</em>).</li>
<li>Scale it by pressing <code>s</code>, the same extra options as for move above work for scaling.</li>
<li>Rotate it by pressing <code>r</code>, the same extra options as for move above work for scaling.</li>
</ul>
<p>Another good thing to do in general, is make use of <em>collections</em> to place the different objects into. The &ldquo;finder&rdquo; is located in the top-right. I created a collection for the lights and camera, one for the background (just the plane now), the puzzle box, and one for the puzzle pieces.</p>
<p>You can set which objects can be selected via a mouse-drag or mouse click in the <em>3D Viewport</em> using the little eye+arrow icon along the top-right of the window. I deselected the lights, because I kept on selecting those while I was dragging my mouse over the screen to select all my puzzle pieces for example.</p>
<p><figure style="flex-grow: 54; flex-basis: 131px">
		<a href="../../blog/week-2/3D_blender_selections.jpg" data-size="232x422">
			
			<img src="../../blog/week-2/3D_blender_selections.jpg"
				
				width="232"
				height="422"
				loading="lazy"
				alt="Making the Lights not selectable within the 3D Viewport">
		</a>
		
		<figcaption>Making the Lights not selectable within the 3D Viewport</figcaption>
		
	</figure></p>
<p>I also applied a <em>Parenting</em> to the acrylic puzzle bottom and the glass plate that lies on top of it. I&rsquo;d seen this in BlenderGuru&rsquo;s videos. That way, when I would move the bottom, the plate would move along with it. To parent, you select any children first, then select the parent last, press <code>CTRL+P</code>, and in the pop-up select <em>Object (Keep Transform)</em>. The child is now enclosed inside the parent in the finder window.</p>
<p><figure style="flex-grow: 323; flex-basis: 776px">
		<a href="../../blog/week-2/3D_blender_parenting.jpg" data-size="291x90">
			
			<img src="../../blog/week-2/3D_blender_parenting.jpg"
				
				width="291"
				height="90"
				loading="lazy"
				alt="The glass plate became part of the acrylic bottom after &ldquo;parenting&rdquo;">
		</a>
		
		<figcaption>The glass plate became part of the acrylic bottom after “parenting”</figcaption>
		
	</figure></p>
<p>I didn&rsquo;t parent anything else eventually because I wanted to have the other objects move separately for an animated video</p>
<h4 id="camera-view">Camera View</h4>
<p>One of the main objects in Blender is the camera. When you create an actual <em>render</em>, it&rsquo;s the viewport of the camera that gets rendered. I prefer to create a separate window next to the one I was working in, in which I had my &ldquo;camera view&rdquo; visible at all times. Within Blender you can split the view into sections (rows and columns) and within each new section you can select a new <em>Editor Type</em>, such as the <em>UV Editor</em>, <em>Shader Editor</em>, <em>Graph Editor</em> and many more. Or just create more copies of the main <em>3D Viewport</em>. Generally you create one by hovering in the corner of a window until the mouse turns into a cross, and then drag the new window into existence (it usually takes me a few tries).</p>
<p><figure style="flex-grow: 180; flex-basis: 433px">
		<a href="../../blog/week-2/3D_blender_camera_perspective.jpg" data-size="1000x553">
			
			<img src="../../blog/week-2/3D_blender_camera_perspective.jpg"
				
				width="1000"
				height="553"
				loading="lazy"
				alt="Created a separate window to fix my &ldquo;camera view&rdquo;">
		</a>
		
		<figcaption>Created a separate window to fix my “camera view”</figcaption>
		
	</figure></p>
<p>To make the right panel the &ldquo;Camera View&rdquo;, go into <em>View</em> (it&rsquo;s along the top of the window itself), then <em>Cameras</em> and <em>Active Camera</em>. You&rsquo;ll then see a rectangular box, such as in the right window of the image above. One final handy thing is to lock to this camera view, so even when you perform mouse moves in that window, the camera will move along. For this, with the &ldquo;Camera View&rdquo; window focused press <em>N</em>, which will slide out some options, then go to <em>View</em> along the right tab (yes, this is <em>a different View</em> than the one I mentioned before, so many options in Blender <span class="kaomoji">(⊙_⊙)</span>
), and select <em>Lock to View</em>.</p>
<h4 id="rendering-engine">Rendering Engine</h4>
<p>Another big change in the image above, is that I&rsquo;d selected the views of both windows to switch from the default solid body like look to using an actual shader. This actually takes light, shadows and material properties into account and makes things look more realistic (but it&rsquo;s much slower to render). You can change these looks by selecting the right-most circle from the group of 4 circles that is in the top-right of the <em>3D Viewport</em>.</p>
<p><figure style="flex-grow: 355; flex-basis: 852px">
		<a href="../../blog/week-2/3D_blender_view_options.png" data-size="206x58">
			
			<img src="../../blog/week-2/3D_blender_view_options.png"
				
				width="206"
				height="58"
				loading="lazy"
				alt="Four different ways to have the objects be rendered in the 3D Viewport">
		</a>
		
		<figcaption>Four different ways to have the objects be rendered in the 3D Viewport</figcaption>
		
	</figure></p>
<p>Generally the rendering in the viewport is a compromise between performance and how it looks. You often have many stray and black pixels, which I learned are called <em>fireflies</em>. For your final render you can press <code>F12</code>, or go into <em>Render</em> -&gt; <em>Render Image</em>. This will (generally) use a much more complex render processes, and thus can take a while, depending on the quality of the CPU (and even better, GPU) of your laptop/pc. The image is slowly built in in tiles.</p>
<p><figure style="flex-grow: 182; flex-basis: 438px">
		<a href="../../blog/week-2/3D_blender_render_halfway.jpg" data-size="1000x547">
			
			<img src="../../blog/week-2/3D_blender_render_halfway.jpg"
				
				width="1000"
				height="547"
				loading="lazy"
				alt="A final render while halfway, being built up from tiles">
		</a>
		
		<figcaption>A final render while halfway, being built up from tiles</figcaption>
		
	</figure></p>
<p>Later on, while I was trying to get rid of the <em>fireflies</em> that were plaguing my renders due to the heavy use of see-through materials, I watched several <a class="link" href="https://www.youtube.com/watch?v=5gYyn0L7g7w&amp;t=848s"  target="_blank" rel="noopener"
    >videos</a> / read blogs with tips. These were some of my most useful, and I hope I interpreted them correctly:</p>
<ul>
<li>Use the <em>Cycles</em> rendering engine.</li>
<li>If you have a compatible GPU, us it! (You might need to active it under <em>Edit</em> -&gt; <em>Preferences</em> -&gt; <em>System</em>.) And then set the <em>Tile</em> size to 265 x 265. For CPU use smaller tiles of 64 x 64.</li>
<li>Set the <em>Sampling</em> of your final render quite high, 300+ but keep that of the <em>Viewport</em> to the default 32.</li>
<li>Set the <em>Sampling Integrator</em> to <em>Branched Path Tracing</em> and then in the <em>Sub Samples</em> adjust the ratio based on your scene (e.g. if you have a lot of glass-like material, set the <em>Transmission</em> sample to 2 or 3).</li>
<li>Try and see how a <em>Denoising</em> looks</li>
<li>Play with the <em>Light Paths</em> -&gt; <em>Max Bounces</em> again taking into account the materials in your scene to see which bounces can be increased. For scenes with a lot of glass, click on the menu icon in <em>Light Paths</em> and choose <em>Full Global Illumination</em>.</li>
<li>To deal with fireflies specifically: use big lamps. Plus, this <a class="link" href="https://www.youtube.com/watch?v=TF5YZoDwDYI"  target="_blank" rel="noopener"
    >video</a> and <a class="link" href="https://www.blenderguru.com/articles/7-ways-get-rid-fireflies"  target="_blank" rel="noopener"
    >blog</a> are also chuck full of tips.</li>
</ul>
<p>All of these things can be set in the <em>Render Properties</em> tab. This tab, along with many other very useful property tabs is in the lower-right of the screen.</p>
<p><figure style="flex-grow: 53; flex-basis: 129px">
		<a href="../../blog/week-2/3D_blender_render_options.jpg" data-size="267x496">
			
			<img src="../../blog/week-2/3D_blender_render_options.jpg"
				
				width="267"
				height="496"
				loading="lazy"
				alt="The Render options tab found in the lower-right side of the screen">
		</a>
		
		<figcaption>The Render options tab found in the lower-right side of the screen</figcaption>
		
	</figure></p>
<p>Right below this tab is the <em>Output Properties</em> where you can change things such as the camera resolution, frame rates, save locations, output file types and more.</p>
<p>Random note: I stumbled upon <a class="link" href="https://www.blenderguru.com/tutorials/secret-ingredient-photorealism"  target="_blank" rel="noopener"
    >Filmic Blender</a>, an add-on to create better colors, which I installed and applied to my <em>Color Management</em> in the <em>Render Properties</em> tab.</p>
<h4 id="creating-materials">Creating Materials</h4>
<p>To add a material to any object, first select it. Then in that right column of <em>Property</em> tabs select the bottom red checkered circle, (<em>Material Properties</em>). Add a new material, and now a whole rabbit hole opens up for you. Generally the &ldquo;Principled BSDF&rdquo; is selected, which is quite the versatile material, with <em>lots</em> of sliders that can change your material to look like transparent glass, to a glossy metal, or rough brick. This <a class="link" href="https://www.youtube.com/watch?v=5lr8QnR5WWU"  target="_blank" rel="noopener"
    >Materials tutorial</a> was really helpful to understand more about it. I used this base material (and the values mentioned <a class="link" href="https://blender.stackexchange.com/questions/117336"  target="_blank" rel="noopener"
    >here</a>) to turn my acrylic bottom into a black acrylic like material.</p>
<p>I split my right window upwards, so I could set the lower to be a <em>Shader Editor</em> which lets you apply more advanced steps to materials. I&rsquo;d found <a class="link" href="https://blender.stackexchange.com/questions/27807/colored-matt-glass-shade-for-lamp-in-cycles"  target="_blank" rel="noopener"
    >an example</a> to create matt glass for the puzzle plate (which I actually sort of understood) and recreated the nodes.</p>
<p><figure style="flex-grow: 180; flex-basis: 433px">
		<a href="../../blog/week-2/3D_blender_material_nodes.jpg" data-size="1000x553">
			
			<img src="../../blog/week-2/3D_blender_material_nodes.jpg"
				
				width="1000"
				height="553"
				loading="lazy"
				alt="Creating a &ldquo;frosted matt glass&rdquo; material to apply to the glass plate, using the &ldquo;Shader Editor&rdquo; (lower-right window)">
		</a>
		
		<figcaption>Creating a “frosted matt glass” material to apply to the glass plate, using the “Shader Editor” (lower-right window)</figcaption>
		
	</figure></p>
<p>You add nodes with <code>SHFT+A</code> while the <em>Shader Editor</em> is active, and can search for the name, which I generally found easiest. You can connect them by dragging from one connection point to another (actually <em>cutting</em> a connection as a little harder to figure out, but you should press CTRL + right click while &ldquo;slicing&rdquo; through the link).</p>
<h4 id="when-wood-turns-out-to-be-hard">When Wood Turns Out to Be Hard</h4>
<p>There didn&rsquo;t seem to be any straightforward material to apply and turn my puzzle top into wood. Google seemed to show several different ways of getting to a wood-like appearance.</p>
<p>I looked a little into using an image as a texture. In the <em>Color</em> option of a material, you can click the circle, and then choose <em>Image Texture</em>. I actually can&rsquo;t quite remember why I didn&rsquo;t fully continue with this. I did download <a class="link" href="https://blendswap.com/blend/9478"  target="_blank" rel="noopener"
    >this</a> wooden texture, but was then lost as how to actually apply it. When I opened the <code>.blend</code> file that came with it and looked at the material in the <em>Shader Editor</em> it was <em>much</em> more complex than just a simple image.</p>
<p>I also checked out <em>procedurally created wood</em> where a wooden pattern is created without images and fully by the very smart use of the nodes and randomness. I downloaded the <a class="link" href="https://www.blendernation.com/2019/08/08/timber-a-realistic-procedural-pbr-wood-material/"  target="_blank" rel="noopener"
    >Timber</a> procedural material, and was again lost as to how to actually apply it. Thankfully, this material came with a (still too vague) instruction. Some googling later I had it working. Apparently, you can <em>append</em> a material from <em>another</em> blend file (learned from <a class="link" href="https://blender.stackexchange.com/questions/63018/how-to-import-downloaded-materials-files/63055"  target="_blank" rel="noopener"
    >here</a>).</p>
<ul>
<li>Click <em>File</em> and then <em>Append</em></li>
<li>Select the <code>.blend</code> file with the material you want. This will open the file as a folder structure</li>
<li>Go to <em>Materials</em> and choose the material that you want to append</li>
</ul>
<p>Now <em>seemingly</em> nothing has changed. However, if you select your object, go to the <em>Material Properties</em> and click on the drop down next to the tiny white checkered sphere, the new material should be there for you to apply.</p>
<p><figure style="flex-grow: 120; flex-basis: 288px">
		<a href="../../blog/week-2/3D_blender_appended_material.jpg" data-size="450x374">
			
			<img src="../../blog/week-2/3D_blender_appended_material.jpg"
				
				width="450"
				height="374"
				loading="lazy"
				alt="I appended a &ldquo;Timber - Decorative Veneer&rdquo; material and could find it as an option within the drop-down in the Material Properties">
		</a>
		
		<figcaption>I appended a “Timber - Decorative Veneer” material and could find it as an option within the drop-down in the Material Properties</figcaption>
		
	</figure></p>
<p>I really like how you can see an example of the material as a 3D sphere right within the <em>Material Properties</em> window.</p>
<p>I selected my appended material for the wooden top aaaaaand it just turned plain brown&hellip;. Weird. To check, I applied the wood to the plane, and it worked perfectly there. I could play with settings in the <em>Shader Editor</em>  and see the wood change patterns. I tried a different wood and applied it to the monkey (Suzanne) head, to see if the problem was a more complex shape, but it worked fine for Suzanne.</p>
<p><figure style="flex-grow: 125; flex-basis: 302px">
		<a href="../../blog/week-2/3D_blender_wood_not_working.jpg" data-size="588x467">
			
			<img src="../../blog/week-2/3D_blender_wood_not_working.jpg"
				
				width="588"
				height="467"
				loading="lazy"
				alt="The wood getting correctly applied to Suzanne, but not to my wooden puzzle box top">
		</a>
		
		<figcaption>The wood getting correctly applied to Suzanne, but not to my wooden puzzle box top</figcaption>
		
	</figure></p>
<p>I was at such a loss for what might be going wrong there that I eventually reached out to Ferdi to ask for help (because I was apparently not googling for the right words). And he was so very kind to help me! I sent over my file and he returned with a 5 minute <em>video</em> explaining the exact steps that I had to take <span class="kaomoji">(ﾉ◕ヮ◕)ﾉ*:・ﾟ✧</span>
 It appeared that I had to <em>UV-map</em> by wooden box first!</p>
<p>I turned my <em>Shader Editor</em> into a <em>UV Editor</em> (you change this with the top-left most button in each window). Next, I selected the wooden top in my left window, switched to <em>Edit Mode</em> (press <em>tab</em> to switch between <em>Object</em> and <em>Edit</em> mode). You know that you&rsquo;re in editor view when you are able to see the mesh of the selected object. Press <code>U</code> and this will open up the <em>UV Mapping</em> window.</p>
<p><figure style="flex-grow: 177; flex-basis: 425px">
		<a href="../../blog/week-2/3D_blender_uv_mapping.jpg" data-size="1000x564">
			
			<img src="../../blog/week-2/3D_blender_uv_mapping.jpg"
				
				width="1000"
				height="564"
				loading="lazy"
				alt="Pressing &ldquo;U&rdquo; while your object is selected in &ldquo;Edit Mode&rdquo; will open up the &ldquo;UV Mapping&rdquo; options">
		</a>
		
		<figcaption>Pressing “U” while your object is selected in “Edit Mode” will open up the “UV Mapping” options</figcaption>
		
	</figure></p>
<p>Select <em>Smart UV Project</em>. In the <em>Smart UV Project</em> window that appears, I left everything to default, checking both <em>Correct Aspect</em> and <em>Scale to Bounds</em>. With this the UV Editor switched to showing the wooden grain texture that was included with the wooden material that I was trying to apply (not sure why it now suddenly showed the wooden grain as a background), with the wooden top folded out on top of it. If you want, you can scale the UV-mapping by focusing in the <em>UV Editor</em> window, with the entire mapping selected and pressing <code>S</code> and moving the mouse.</p>
<p><figure style="flex-grow: 130; flex-basis: 312px">
		<a href="../../blog/week-2/3D_blender_uv_unwrapped.jpg" data-size="561x431">
			
			<img src="../../blog/week-2/3D_blender_uv_unwrapped.jpg"
				
				width="561"
				height="431"
				loading="lazy"
				alt="&ldquo;Smart UV Project&rdquo; lays out my puzzle box top onto the wooden structure image in the &ldquo;UV Editor&rdquo;">
		</a>
		
		<figcaption>“Smart UV Project” lays out my puzzle box top onto the wooden structure image in the “UV Editor”</figcaption>
		
	</figure></p>
<p>And lo and behold, my &ldquo;wooden&rdquo; top finally looked like wood! (I kept switching between this wood and the procedural wood that looked like glossy veneer).</p>
<p><figure style="flex-grow: 116; flex-basis: 278px">
		<a href="../../blog/week-2/3D_blender_wood_applied.jpg" data-size="473x407">
			
			<img src="../../blog/week-2/3D_blender_wood_applied.jpg"
				
				width="473"
				height="407"
				loading="lazy"
				alt="The wooden structure was finally visible on my wooden top!">
		</a>
		
		<figcaption>The wooden structure was finally visible on my wooden top!</figcaption>
		
	</figure></p>
<p>I also learned that Ferdi didn&rsquo;t have access to the image files that one of my wooden materials used when I sent him my file. And that you can <em>pack</em> those files <em>into</em> you <code>.blend</code> by going to <em>File</em> -&gt; <em>External Data</em> -&gt; <em>Pack all into .blend</em>. Later you can unpack it all with <em>Unpack all into files</em>.</p>
<h4 id="separate-puzzle-pieces">Separate Puzzle Pieces</h4>
<p>Alright, one more part of the puzzle to apply materials to, the puzzle pieces. The pieces were still seen as one type of object. You can separate them easily by selecting them all while in the <em>Edit Mode</em> of the <em>3D Viewport</em>, then pressing <code>P</code>. This will open up the <em>Separate</em> window, where I selected <em>By Loose Parts</em>. All these pieces were now separate bodies within my &ldquo;Puzzle Pieces&rdquo; collection.</p>
<p><figure style="flex-grow: 116; flex-basis: 279px">
		<a href="../../blog/week-2/3D_blender_separate.jpg" data-size="690x593">
			
			<img src="../../blog/week-2/3D_blender_separate.jpg"
				
				width="690"
				height="593"
				loading="lazy"
				alt="With the puzzle group selected and in &ldquo;Edit Mode&rdquo;, pressing &ldquo;P&rdquo; will pop-up the &ldquo;Separate&rdquo; window">
		</a>
		
		<figcaption>With the puzzle group selected and in “Edit Mode”, pressing “P” will pop-up the “Separate” window</figcaption>
		
	</figure></p>
<p>Something important that I&rsquo;d seen come by in a video on animations in Blender (I&rsquo;ll get to that) was the fact that this kind of separation leaves the origin of each piece at the origin of the original whole object. It&rsquo;s better to reset the origin of all the pieces to their geometric origin. You can do this be selecting all the pieces (this time being on <em>Object Mode</em> also worked), going to <em>Object</em> -&gt; <em>Set Origin</em> -&gt; <em>Origin to Geometry</em>. And now it was clear that each of my puzzle pieces had its origin set correctly:</p>
<p><figure style="flex-grow: 150; flex-basis: 361px">
		<a href="../../blog/week-2/3D_blender_origin_reset.jpg" data-size="531x353">
			
			<img src="../../blog/week-2/3D_blender_origin_reset.jpg"
				
				width="531"
				height="353"
				loading="lazy"
				alt="I reset the origin of all the pieces to each piece&rsquo;s geometric origin">
		</a>
		
		<figcaption>I reset the origin of all the pieces to each piece’s geometric origin</figcaption>
		
	</figure></p>
<h4 id="acrylic-puzzle-pieces-with-lights">Acrylic Puzzle Pieces With Lights</h4>
<p>With the pieces separated, I wanted them to be of a transparent acrylic. I selected one puzzle piece and used the (node) steps as describe in <a class="link" href="https://www.youtube.com/watch?v=1Y1Ny6MTPD4"  target="_blank" rel="noopener"
    >this</a> video to set-up my material.</p>
<p>That turned one piece acrylic. Thankfully you can link multiple objects to all have the same material, and when you make changes to the material of one piece, it gets applied to all of them. To link materials, select all the objects, while selecting the one with the correct material as the <em>active</em> one (select it first or last). Then press <code>CTRL+L</code> which pops up the <em>Make Links</em> window. From that, select <em>Material</em>, and then all my pieces looked acrylic.</p>
<p><figure style="flex-grow: 107; flex-basis: 259px">
		<a href="../../blog/week-2/3D_blender_linked_material.jpg" data-size="514x476">
			
			<img src="../../blog/week-2/3D_blender_linked_material.jpg"
				
				width="514"
				height="476"
				loading="lazy"
				alt="Linking my one acrylic puzzle piece to all the other pieces in terms of Material">
		</a>
		
		<figcaption>Linking my one acrylic puzzle piece to all the other pieces in terms of Material</figcaption>
		
	</figure></p>
<p>To make it look as if some of my puzzle pieces contained lights, I first looked into the <em>Emission</em> material. Using <a class="link" href="https://www.youtube.com/watch?v=qS1ZbPkNCYM"  target="_blank" rel="noopener"
    >this</a> video I saw that it&rsquo;s as easy as just selecting the material, choosing a color and a strength, and done.</p>
<p><figure style="flex-grow: 177; flex-basis: 425px">
		<a href="../../blog/week-2/3D_blender_emission.jpg" data-size="1000x564">
			
			<img src="../../blog/week-2/3D_blender_emission.jpg"
				
				width="1000"
				height="564"
				loading="lazy"
				alt="Making one of the pieces become a light emitting object by applying the &ldquo;Emission&rdquo; material">
		</a>
		
		<figcaption>Making one of the pieces become a light emitting object by applying the “Emission” material</figcaption>
		
	</figure></p>
<p>However, I didn&rsquo;t quite like the result enough. It didn&rsquo;t quite capture the idea that an LED was hidden inside. So I removed the material and instead tried to hide a tiny colored point light <em>into</em> two pieces. You add lights with <code>SHFT+A</code> just like with bodies. There are four types of lights to choose from; sun, point, area and spotlight. I played with all of them while setting up my scene, but for these puzzle pieces I went with a point light. You can adjust the settings of your selected light by going into the <em>Object Data Properties</em> setting in that column of tabs along the right (it looks like a green lamp icon when the light is selected).</p>
<p><figure style="flex-grow: 56; flex-basis: 136px">
		<a href="../../blog/week-2/3D_blender_light_properties.jpg" data-size="295x520">
			
			<img src="../../blog/week-2/3D_blender_light_properties.jpg"
				
				width="295"
				height="520"
				loading="lazy"
				alt="Adjusting the settings of a light in the lights&#39; &ldquo;Object Data Properties&rdquo;">
		</a>
		
		<figcaption>Adjusting the settings of a light in the lights' “Object Data Properties”</figcaption>
		
	</figure></p>
<p>I created two point lights and moved them into the pieces, which made it look more like what I had in mind, as if an LED was present within the pieces:</p>
<p><figure style="flex-grow: 109; flex-basis: 261px">
		<a href="../../blog/week-2/3D_blender_acrylic_lights.jpg" data-size="465x426">
			
			<img src="../../blog/week-2/3D_blender_acrylic_lights.jpg"
				
				width="465"
				height="426"
				loading="lazy"
				alt="Embedding two point lights into two pieces made them look like LEDs inside the pieces">
		</a>
		
		<figcaption>Embedding two point lights into two pieces made them look like LEDs inside the pieces</figcaption>
		
	</figure></p>
<p>Around this point I experimented quite some time with the render settings to try and get rid of those pixelated <em>fireflies</em> which I had a lot due to all the transparent materials. Most things I tried I already explained earlier in the <em>Rendering</em> section above.</p>
<p>I also experimented a lot with the lighting of my scene. Using different types of lights, different colors, different placements. My final, using a yellow, pink and blue area light is of course far from perfect, I&rsquo;m not a lighting specialist, but I felt it made the scene look somewhat interesting.</p>
<p><figure style="flex-grow: 208; flex-basis: 500px">
		<a href="../../blog/week-2/3D_blender_lighting_scene.jpg" data-size="1000x480">
			
			<img src="../../blog/week-2/3D_blender_lighting_scene.jpg"
				
				width="1000"
				height="480"
				loading="lazy"
				alt="A far-away look at the scene I&rsquo;d set up with 3 colored lights around the puzzle box">
		</a>
		
		<figcaption>A far-away look at the scene I’d set up with 3 colored lights around the puzzle box</figcaption>
		
	</figure></p>
<h4 id="final-static-result-in-blender">Final (Static) Result in Blender</h4>
<p>Below you can see the final rendered result of my puzzle box in Blender. It&rsquo;s far from photorealistic, but with only 1 day of experimenting I&rsquo;m happy with it.</p>
<p><figure style="flex-grow: 149; flex-basis: 359px">
		<a href="../../blog/week-2/3D_blender_final_static.jpg" data-size="1000x667">
			
			<img src="../../blog/week-2/3D_blender_final_static.jpg"
				
				width="1000"
				height="667"
				loading="lazy"
				alt="The final rendering result from Blender">
		</a>
		
		<figcaption>The final rendering result from Blender</figcaption>
		
	</figure></p>
<p>The final <code>.blend</code> file is almost 10Mb so I hope it&rsquo;s ok that I&rsquo;m not sharing that file here.</p>
<h4 id="animating-the-scene">Animating the Scene</h4>
<p>It would be a shame to stop there with Blender, because it can do really nice things with animations too. The <em>Timeline</em> editor is generally all the way at the bottom of the window. I dragged it up to be able to see it. During last Sunday&rsquo;s Blender tutorial by Ferdi we&rsquo;d seen a short into into animation.</p>
<p>You basically set the blue &ldquo;current frame&rdquo; line in the <em>Timeline</em> to the point you want something to happen. Then you place, move, rotate or whatnot the object into the position that you want. Next, press <code>I</code> which will open up the <em>Insert Keyframe</em> window, and select what type of keyframe to add. Just location, or location <em>and</em> rotation, etc. Now move the current frame to another position, readjust the object and add another keyframe. By pressing the spacebar the animation will run and you&rsquo;ll see you object moving/scaling/rotating between the two keyframes that you set.</p>
<p><figure style="flex-grow: 194; flex-basis: 466px">
		<a href="../../blog/week-2/3D_blender_keyframe.jpg" data-size="1000x515">
			
			<img src="../../blog/week-2/3D_blender_keyframe.jpg"
				
				width="1000"
				height="515"
				loading="lazy"
				alt="Select the object, hit &ldquo;I&rdquo; and select which type of keyframe to add to the timeline">
		</a>
		
		<figcaption>Select the object, hit “I” and select which type of keyframe to add to the timeline</figcaption>
		
	</figure></p>
<p>I switched my <em>Shader Editor</em> to the <em>Graph Editor</em> which let&rsquo;s you have more control over the exact path that is taken to move/scale/etc. the keyframes. Even though the general process is quite simple, it did require quite some fiddling and going back to earlier positions before I had something working as I wanted it to. I never figured out how to set locations <em>exactly</em> for example. I first moved my whole puzzle box up, and then moved the base down first, and then the wooden top next, and the pieces last. But I had to manually fiddle to place the wooden top back onto the acrylic bottom (or even to exactly place the bottom onto the place), there was no snapping, and in the graph editor I didn&rsquo;t see how to add exact numbers&hellip;</p>
<p>You can actually add a keyframe to about <em>anything</em>. Right-click while you&rsquo;re inside the <em>Power</em> of the light, and you can add a keyframe for that (I dimmed my light throughout the animation). And you can of course add a keyframe for the camera position as well by pressing <code>I</code> while the camera is selected (move it and press <code>I</code> again to add another keyframe).</p>
<p>I never figured out how to easily change the value that was set with a keyframe. Yes, I could drag the line up or down in the graph editor, but this was a slow going process (the editor let me move the power of the light up by about 20W per drag upwards, whereas I wanted a 200W change).</p>
<p>Due to all the fireflies that my renders were giving, and to speed up the rendering time, since for an animation I had to render many images, I completely changed my scene. I switched all the transparent materials to glossy dark acrylic, made a few random pieces have the <em>Emission</em> material, and deactivated all the lights from my scene, so the glowing pieces would stand out.</p>
<p>I animated the bottom coming in from the top, then the wooden top, and the puzzle pieces coming in last. I did have some weird effect where my scene was all dark when I saw it while working on the scene, but when <em>rendered</em> there were lights again. Some experimenting showed that somehow the three lights that I&rsquo;d placed for the original render, but deactivated (clicking the &ldquo;eye&rdquo; icon next to the lights in the <em>finder</em> window), where back again in the <em>final</em> render. At that time I just removed the lights all together. However, a few weeks later I had this issue again, and found the solution. The little &ldquo;eye&rdquo; icon is only for the <em>3D Viewport</em>, but if you click on the little <em>Filter</em> icon above the finder window, you can also select a little &ldquo;camera&rdquo; icon. This will add the camera icon next to each object and by deactivating it, it will not show up in the render (see [this] video).</p>
<p>I also learned that the &ldquo;World&rdquo; also has an ambient light, you can set the strength and color of this within the <em>World Properties</em> tab (the red Earth icon).</p>
<p><figure style="flex-grow: 144; flex-basis: 347px">
		<a href="../../blog/week-2/3D_blender_lights_still_present.jpg" data-size="636x439">
			
			<img src="../../blog/week-2/3D_blender_lights_still_present.jpg"
				
				width="636"
				height="439"
				loading="lazy"
				alt="Although I deactivated all the lights, they still appeared in the final render">
		</a>
		
		<figcaption>Although I deactivated all the lights, they still appeared in the final render</figcaption>
		
	</figure></p>
<p>One final thing to add to my animation was the staggered &ldquo;falling&rdquo; of the puzzle pieces. I didn&rsquo;t want to have to adjust the keyframe of each piece manually. Thankfully, I found a Blender add-on called <a class="link" href="https://github.com/mrachinskiy/commotion"  target="_blank" rel="noopener"
    ><em>Commotion</em></a> that creates this for you. It was a little bit of a search for a <a class="link" href="https://www.blendernation.com/2019/09/08/commotion-addon-blender-2-8x/"  target="_blank" rel="noopener"
    >video</a> that showed how to use it in a way that I could understand. The <em>Commotion</em> settings where hidden along the right side of the <em>3D Viewport</em>. I had set up a general keyframe for all puzzle pieces at some height at frame 0 and all down on the puzzle box at frame ±100. I selected all my pieces, and within the <em>Commotion</em> fold-out set <em>Order by</em> to <em>Random</em> and clicked <em>Offset Animation</em>.</p>
<p><figure style="flex-grow: 81; flex-basis: 195px">
		<a href="../../blog/week-2/3D_blender_commotion.jpg" data-size="315x387">
			
			<img src="../../blog/week-2/3D_blender_commotion.jpg"
				
				width="315"
				height="387"
				loading="lazy"
				alt="Using the &ldquo;Commotion&rdquo; add-on to stagger my puzzle pieces">
		</a>
		
		<figcaption>Using the “Commotion” add-on to stagger my puzzle pieces</figcaption>
		
	</figure></p>
<p>And that was it! This turned the simple two keyframes of all the puzzle pieces into a whole mess of keyframes. I wasn&rsquo;t sure how easy it was to make changes afterwards, but I didn&rsquo;t care since the effect was just what I wanted.</p>
<p><figure style="flex-grow: 150; flex-basis: 360px">
		<a href="../../blog/week-2/3D_blender_staggered_pieces.jpg" data-size="840x560">
			
			<img src="../../blog/week-2/3D_blender_staggered_pieces.jpg"
				
				width="840"
				height="560"
				loading="lazy"
				alt="The puzzle pieces moving into the box in a staggered fashion">
		</a>
		
		<figcaption>The puzzle pieces moving into the box in a staggered fashion</figcaption>
		
	</figure></p>
<p>I downsized the resolution of the rendering area, used less samples and light bounces to have the rendering go faster per image. I installed Blender on the (much more powerful) PC of my partner, and did the animation render there. You can render an animation by foing to <em>Render</em> -&gt; <em>Render Animation</em>. Using <code>ffmpeg</code> I stitched the 130 pngs together into a short video, using:</p>
<pre><code class="language-console" data-lang="console">$ ffmpeg -r 24 -f image2 -s 840x560 -start_number 15 -i %04d.png -vcodec libx264 -crf 25 -pix_fmt yuv420p video.mp4
</code></pre><p>You can find more on this command <a class="link" href="https://hamelot.io/visualization/using-ffmpeg-to-convert-a-set-of-images-into-a-video/"  target="_blank" rel="noopener"
    >here</a>. And the final animation turned into this:</p>

<figure >
    
        <video class='controls' controls="true" playsinline ><source src='3D_blender_animation.mp4' type="video/mp4"></video>
     
    
    <figcaption>Animating the puzzle box and pieces into place</figcaption>
    
</figure>
<p>The scene turned out too dark, but pretty cool what you can make in a short-ish amount of time! I wish I would&rsquo;ve had a whole other week to play with Blender <span class="kaomoji">(๑•̀ㅂ•́)ง✧</span>
</p>
<h4 id="animating-with-physics">Animating with Physics</h4>
<p>Another pretty darn cool thing of Blender is that you can animate by using <em>physics</em>! <a class="link" href="https://www.youtube.com/watch?v=KtjJfWlQ8oE"  target="_blank" rel="noopener"
    >This</a> video on physics in Blender with multiple objects was extremely useful to help me set up something simple. Every time I thought I had seen enough of the video and tried the next step myself, I ran into some weird result, by just watching the video a minute further, he&rsquo;d already explained and fixed that exact issue.</p>
<p><strong>I wanted to let my puzzle pieces fall down onto the puzzle box.</strong></p>
<p>I selected my plane, puzzle bottom and wooden top, went into the <em>Physics Properties</em> tab along the right, selected <em>Rigid Body</em> and set these to <em>Passive</em>. That makes sure that other (rigid) bodies know that they&rsquo;re there, but there not moving themselves (I think).</p>
<p><figure style="flex-grow: 45; flex-basis: 109px">
		<a href="../../blog/week-2/3D_blender_physics_properties.jpg" data-size="270x594">
			
			<img src="../../blog/week-2/3D_blender_physics_properties.jpg"
				
				width="270"
				height="594"
				loading="lazy"
				alt="Giving physics properties to my objects">
		</a>
		
		<figcaption>Giving physics properties to my objects</figcaption>
		
	</figure></p>
<p>I selected all my puzzle pieces and moved them up collectively (with <code>g+z</code>). Next I randomly selected pieces to offset them somewhat more, making the falling down of the pieces look more dynamic.</p>
<p><figure style="flex-grow: 52; flex-basis: 125px">
		<a href="../../blog/week-2/3D_blender_start_position_falling_pieces.jpg" data-size="257x491">
			
			<img src="../../blog/week-2/3D_blender_start_position_falling_pieces.jpg"
				
				width="257"
				height="491"
				loading="lazy"
				alt="Randomly offsetting the height of some pieces for  amore dynamic falling down">
		</a>
		
		<figcaption>Randomly offsetting the height of some pieces for  amore dynamic falling down</figcaption>
		
	</figure></p>
<p>You can make all the puzzle pieces become an <em>active</em> rigid body, by going into <em>Object</em> (along the top of the <em>3D Viewport</em>), then <em>Rigid body</em>, and select <em>Add Active</em>. I then changed one piece to become more bouncy. Like we&rsquo;ve seen before, when I select all the pieces, but the one I&rsquo;d just set as the <em>last</em> one (you can see that it&rsquo;s lighter orange), Blender probably has <em>some</em> way to duplicate settings across all. Here you need to go into <em>Object</em> and <em>Rigid body</em> again, and this time select <em>Copy from Active</em>.</p>
<p>And that was really all I had to do, Blender&rsquo;s physics engine takes care of the rest. Just press the <em>spacebar</em> to see the animation.</p>
<p>I looked closer towards the end of the animation and saw my puzzle pieces falling <em>through</em> the wooden top! Apparently, I hadn&rsquo;t actually selected my wooden top to set it up as a passive rigid body, and thus it was being ignored by the falling pieces. After fixing this the pieces nicely fell within the box (I also set its shape to <em>Mesh</em> instead of <em>Convex Hull</em>).</p>
<p><figure style="flex-grow: 149; flex-basis: 358px">
		<a href="../../blog/week-2/3D_blender_pieces_through_box.jpg" data-size="780x522">
			
			<img src="../../blog/week-2/3D_blender_pieces_through_box.jpg"
				
				width="780"
				height="522"
				loading="lazy"
				alt="Puzzle pieces were falling through the wooden top!">
		</a>
		
		<figcaption>Puzzle pieces were falling through the wooden top!</figcaption>
		
	</figure></p>
<p>I also randomly rotated my puzzle pieces, so they wouldn&rsquo;t all fall down flat. This <a class="link" href="https://www.youtube.com/watch?v=S1XiO-TCxNc"  target="_blank" rel="noopener"
    >video</a> was all I needed. <strong>Make sure that your timeframe is set at zero.</strong> Select all the pieces (make sure one is light orange, the &ldquo;active&rdquo; one), then in <em>Object</em> (in the top-left of the <em>3D Viewport</em>) select <em>Transform</em> and then <em>Randomize Transform</em>. Then it might look that nothing happened, but a little tab has appeared along the bottom-left of the <em>3D Viewport</em>. Open this and play with the numbers. I only left <em>Randomize Rotation</em> on and set the <em>x</em>, <em>y</em>, and <em>z</em> values to about 30° - 60°. Interestingly, this made some of the pieces scatter outward in the air already when I played the animation, because the rotation made them bump into each other.</p>
<p><figure style="flex-grow: 105; flex-basis: 253px">
		<a href="../../blog/week-2/3D_blender_randomize_rotation.jpg" data-size="532x503">
			
			<img src="../../blog/week-2/3D_blender_randomize_rotation.jpg"
				
				width="532"
				height="503"
				loading="lazy"
				alt="Randomizing the rotation of all my pieces">
		</a>
		
		<figcaption>Randomizing the rotation of all my pieces</figcaption>
		
	</figure></p>
<p>When I set my partner&rsquo;s pc to render again and checked the result at around frame 40, I was still looking at an empty puzzle box <span class="kaomoji">(⊙０⊙)</span>
 A <a class="link" href="https://blender.stackexchange.com/questions/186523"  target="_blank" rel="noopener"
    >quick google</a> revealed that I had to &ldquo;bake&rdquo; the simulation into the scene first. Go to <em>Scene Properties</em> along the right, then make sure <em>Rigid Body World</em> is active. Within that, under <em>Cache</em> press <em>Delete All Bakes</em> and then <em>Bake All Dynamics</em>. Now you can render the animation (it feels rather obscure to hide this important step away like that).</p>
<p><figure style="flex-grow: 50; flex-basis: 122px">
		<a href="../../blog/week-2/3D_blender_bake_dynamics.jpg" data-size="302x593">
			
			<img src="../../blog/week-2/3D_blender_bake_dynamics.jpg"
				
				width="302"
				height="593"
				loading="lazy"
				alt="Baking the dynamics so they show up in the animation rendering">
		</a>
		
		<figcaption>Baking the dynamics so they show up in the animation rendering</figcaption>
		
	</figure></p>
<p>Rendering these 120 frames took a lot longer than the dark animation before, because of the transparent pieces and glass plate. I also set the rendering settings quite low so it wouldn&rsquo;t take hours, thus the light reflection isn&rsquo;t awesome, and there are still fireflies. Here is the final result where the pieces were not rotated, and most still fall neatly into the box:</p>

<figure >
    
        <video class='controls' controls="true" playsinline ><source src='3D_blender_animation_physics_straight.mp4' type="video/mp4"></video>
     
    
    <figcaption>Animating the puzzle pieces falling into the box</figcaption>
    
</figure>
<p>And below is the version where I randomly rotated the pieces, which made the pieces bounce off each other in the air and became in a more scattered result:</p>

<figure >
    
        <video class='controls' controls="true" playsinline ><source src='3D_blender_animation_physics_rotated.mp4' type="video/mp4"></video>
     
    
    <figcaption>Animating the puzzle pieces falling into the box while starting out randomly rotated</figcaption>
    
</figure>
<p>A note on <em>parenting</em> again. Because I parented the two lights to the two puzzles pieces, they remained fixed <em>inside</em> the puzzle pieces while falling and bouncing, really useful. But now I really need to stop playing with Blender <span class="kaomoji">(*≧▽≦)</span>
</p>
<h4 id="final-thoughts-on-blender">Final Thoughts on Blender</h4>
<p>Blender is truly amazing in terms of its power to create photo realistic renderings (that I&rsquo;ve seen online) and animations. It was also easy to import my model from Fusion 360 to continue with in Blender. It wasn&rsquo;t easy to progress though. I had to google for every little thing, and even then you sort of just have to <em>know</em> that it&rsquo;s possible, or kind of know what to google for, because there is a lot hidden away behind menus or short keys. But definitely a tool I wouldn&rsquo;t mind spending (a lot) more time with.</p>
<h3 id="antimony--stretch-goal">Antimony | Stretch Goal</h3>
<p>When I saw this node-based process being demonstrated by Neil during Wednesday&rsquo;s class, I was intrigued. I added it to my &ldquo;try-out&rdquo; list for the week as a possible stretch goal, and thankfully found the time to dive a little into it.</p>
<p>I installed <a class="link" href="https://github.com/mkeeter/antimony"  target="_blank" rel="noopener"
    >Antimony</a> and watched the (super) short <a class="link" href="http://www.mattkeeter.com/projects/antimony/3/"  target="_blank" rel="noopener"
    >tutorial</a> on the creator&rsquo;s website.</p>
<p>When you open the tool it&rsquo;s very bare and you don&rsquo;t see anything but blackness and a small axis. I placed the node window and resulting model window side by side, left and right respectively. You can add nodes by right-clicking in the node window and selecting what you want.</p>
<p><figure style="flex-grow: 205; flex-basis: 493px">
		<a href="../../blog/week-2/3D_antimony_start_screen.jpg" data-size="1000x486">
			
			<img src="../../blog/week-2/3D_antimony_start_screen.jpg"
				
				width="1000"
				height="486"
				loading="lazy"
				alt="The starting set-up of Antimony and how to add nodes">
		</a>
		
		<figcaption>The starting set-up of Antimony and how to add nodes</figcaption>
		
	</figure></p>
<h4 id="creating-cylinders">Creating Cylinders</h4>
<p>Although you can start with 3D shapes, I found that the model window becomes a bit cluttered with all the blue lines that represent your starting 3D shapes. It&rsquo;s can be handier to start with a 2D circle and then <em>extruding</em> it upward.</p>
<p>There are <em>very</em> few tutorials to be found on Antimony, and funnily enough, most are attached to the Fab Academy (perhaps because the creator, Matt, used to be a student of Neil I think? And Neil has added quite some code to Antimony). The &ldquo;Script: Dimensions&rdquo; section from <a class="link" href="http://fabacademy.org/2019/docs/FabAcademy-Tutorials/week02_computer_aided_design/antimony_tabs.html"  target="_blank" rel="noopener"
    >this</a> Fab Academy tutorial was very helpful to figure out how to work parametrically and create a node to hold your dimensions.</p>
<p><figure style="flex-grow: 217; flex-basis: 521px">
		<a href="../../blog/week-2/3D_antimony_circle.jpg" data-size="1000x460">
			
			<img src="../../blog/week-2/3D_antimony_circle.jpg"
				
				width="1000"
				height="460"
				loading="lazy"
				alt="Having created a &ldquo;dimensions&rdquo; node and a 2D circle">
		</a>
		
		<figcaption>Having created a “dimensions” node and a 2D circle</figcaption>
		
	</figure></p>
<p>The code for the dimensions node, which you can access by clicking the hamburger icon in the top-right of the node, looked as follows:</p>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">fab</span>

<span class="n">title</span><span class="p">(</span><span class="s1">&#39;Dimensions&#39;</span><span class="p">)</span>

<span class="nb">input</span><span class="p">(</span><span class="s1">&#39;r&#39;</span><span class="p">,</span> <span class="nb">float</span><span class="p">)</span>
<span class="nb">input</span><span class="p">(</span><span class="s1">&#39;h_acryl&#39;</span><span class="p">,</span> <span class="nb">float</span><span class="p">)</span>
<span class="nb">input</span><span class="p">(</span><span class="s1">&#39;h_wood&#39;</span><span class="p">,</span> <span class="nb">float</span><span class="p">)</span>
<span class="nb">input</span><span class="p">(</span><span class="s1">&#39;r_hex&#39;</span><span class="p">,</span> <span class="nb">float</span><span class="p">)</span>
</code></pre></div><p>By clicking in the top-left of the node, you can change the &ldquo;name&rdquo; of the node. I changed the dimensions node to <code>dim</code> and thus could use the values that I&rsquo;d set in any other node by <code>dim.h_wood</code> for example. You can also connect the yellow squares to the right of the dimension that you want to use and connect it to the node that you want to use it (see the yellow connection in the image above). However, I find that creates a <em>lot</em> of messy lines real fast, and I don&rsquo;t think that method lets you do any math, such as saying that the wooden cylinder should be extruded from a <code>z_min</code> of <code>dim.h_acryl</code> up to a <code>z_max</code> of <code>dim.h_acryl + dim.h_wood</code>.</p>
<p><figure style="flex-grow: 217; flex-basis: 521px">
		<a href="../../blog/week-2/3D_antimony_hexagon.jpg" data-size="1000x460">
			
			<img src="../../blog/week-2/3D_antimony_hexagon.jpg"
				
				width="1000"
				height="460"
				loading="lazy"
				alt="Two cylinders, and starting on the hexagonal cuts">
		</a>
		
		<figcaption>Two cylinders, and starting on the hexagonal cuts</figcaption>
		
	</figure></p>
<p>I created a hexagon and used some translations and <em>difference</em> functions (from CSG: <em>Constructive Solid Geometry</em>)to cut away the hexagon through the entire &ldquo;wooden&rdquo; top, and partway through the &ldquo;acrylic bottom&rdquo;. I found out that using a difference of a 2D hexagon on a 3D cylinder will cut all the way through it. To only cut partway, I had to first extrude the 2D hexagon into a 3D version, translate it upward so it would be positioned correctly for the part-way cut, and then do a difference on the 3D cylinder and 3D hexagon. You can see these steps in the node connections in the image below (specifically the bottom four connected nodes):</p>
<p><figure style="flex-grow: 104; flex-basis: 251px">
		<a href="../../blog/week-2/3D_antimony_partway_hexagon_cut.png" data-size="701x668">
			
			<img src="../../blog/week-2/3D_antimony_partway_hexagon_cut.png"
				
				width="701"
				height="668"
				loading="lazy"
				alt="The nodes links to cut a 3D hexagon partly from the 2D cylinder">
		</a>
		
		<figcaption>The nodes links to cut a 3D hexagon partly from the 2D cylinder</figcaption>
		
	</figure></p>
<h4 id="cubby-holes-from-scratch">Cubby Holes From Scratch</h4>
<p>For the cubby holes, I had to basically disassemble the steps that I&rsquo;d already used in OpenSCAD into Antimony nodes. I looked at my OpenSCAD script and started constructing the nodes; a circle, intersecting with two rectangles, one of which was rotated, then rotating the result halfway back to get it centered.</p>
<p><figure style="flex-grow: 217; flex-basis: 521px">
		<a href="../../blog/week-2/3D_antimony_pie_slice.jpg" data-size="1000x460">
			
			<img src="../../blog/week-2/3D_antimony_pie_slice.jpg"
				
				width="1000"
				height="460"
				loading="lazy"
				alt="Creating a slice of a circle took quite some nodes (the group of 6 separated nodes)">
		</a>
		
		<figcaption>Creating a slice of a circle took quite some nodes (the group of 6 separated nodes)</figcaption>
		
	</figure></p>
<p>I was kind of surprised at how many steps that had taken. And how fast my node window was getting cluttered, and I was starting to forget what specific other nodes were doing. I could really use some way of annotation or grouping nodes into a &ldquo;module&rdquo; or function I guess.</p>
<p>To finish the cubby holes I subtracted a square from the center of the pie slice, extruded the result, translated it upward. Each of these simple steps needed a new node though. Using the two hexagon cylinders I applied a difference with the cubby hole and had removed one hole.</p>
<p><figure style="flex-grow: 217; flex-basis: 521px">
		<a href="../../blog/week-2/3D_antimony_removed_cubby_hole.jpg" data-size="1000x460">
			
			<img src="../../blog/week-2/3D_antimony_removed_cubby_hole.jpg"
				
				width="1000"
				height="460"
				loading="lazy"
				alt="Having removed one cubby hole">
		</a>
		
		<figcaption>Having removed one cubby hole</figcaption>
		
	</figure></p>
<p>To remove 4 holes, I wasn&rsquo;t completely sure what the best way forward was. Perhaps add 3 rotation nodes and add all those to the/a difference node as well? However, I&rsquo;d seen an interesting use of an <em>array</em> node in an example file from the Antimony Github repo. I created an array node, and set the <code>n</code> to 4, which created four copies of my cubby holes along. However, they ran along 360°, and I couldn&rsquo;t see an option to set a start and/or end angle. At this point though I felt that I had played enough with Antimony to get a little feeling for it, and just upped the number to create 6 holes around the entire perimeter, and called it finished (I couldn&rsquo;t see any way to get my spirograph SVG or math in there&hellip;).</p>
<h4 id="final-result">Final Result</h4>
<p>I did actually clean up the model a little it and removed some nodes that turned the bottom cylinder into a shell with a hexagon take out of it. The nodes were getting too messy and I was pretty sure I&rsquo;d not be able to figure out the logic if I&rsquo;d ever open the file again.</p>
<p>There is an <em>Export Mesh (.stl)</em> node, to which I plugged my model into. It asked for the number of voxels, which I left to the default <code>13</code>. However, when I checked the resulting <code>.stl</code> file it was 14Mb big! And furthermore, it was just one big cylinder! All the holes were gone <span class="kaomoji">(O_O)</span>
 No idea why that happened, but both of those are the reason why I&rsquo;m not including the <code>.stl</code> file here, but only the Antimony <code>.sb</code> file.</p>
<p>Below you can see the final resulting model and the node structure I used to create it.</p>
<p><figure style="flex-grow: 144; flex-basis: 346px">
		<a href="../../blog/week-2/3D_antimony_final_model.png" data-size="887x615">
			
			<img src="../../blog/week-2/3D_antimony_final_model.png"
				
				width="887"
				height="615"
				loading="lazy"
				alt="The final model in Antimony">
		</a>
		
		<figcaption>The final model in Antimony</figcaption>
		
	</figure></p>
<p><figure style="flex-grow: 153; flex-basis: 367px">
		<a href="../../blog/week-2/3D_antimony_final_nodes.png" data-size="1530x1000">
			
			<img src="../../blog/week-2/3D_antimony_final_nodes.png"
				
				width="1530"
				height="1000"
				loading="lazy"
				alt="The final node structure in Antimony, with the &ldquo;two cylinders and (semi) cut out hexagon&rdquo; flow at the top and the &ldquo;cubby hole&rdquo; flow at the bottom">
		</a>
		
		<figcaption>The final node structure in Antimony, with the “two cylinders and (semi) cut out hexagon” flow at the top and the “cubby hole” flow at the bottom</figcaption>
		
	</figure></p>
<ul>
<li>Final Antimony <code>.sb</code> file | <a class="link" href="3D_antimony_final.sb" >sb file</a></li>
</ul>
<h4 id="fstl-an-stl-viewer">Fstl an STL Viewer</h4>
<p>The creator has made another nifty tool called <a class="link" href="https://www.mattkeeter.com/projects/fstl/"  target="_blank" rel="noopener"
    ><em>fstl</em></a> for viewing stl files. There is no one-step way to install it / get the app. The <a class="link" href="https://github.com/fstl-app/fstl"  target="_blank" rel="noopener"
    >GitHub repo</a> does tell you the steps (for Mac OS). However, there is no <code>fstl.pro</code> file in the entire folder to be able to run <code>qmake ../qt/fstl.pro</code>. Looking at the issues of the repo I saw something about &ldquo;having to update the README for Mac OS, just like was done for the Linux set-up steps&rdquo;. I thus checked the Linux set-up, which used the line <code>cmake ..</code> instead. Ok, installed <code>cmake</code> with <code>homebrew install cmake</code>, followed the rest of the set-up. The <code>fstl.app</code> had been created, tried to open it. Aaaand was completely shut down by Big Sur&rsquo;s tightened security <span class="kaomoji">(ᗒᗣᗕ)՞</span>
</p>
<h4 id="final-thoughts-on-antimony">Final Thoughts on Antimony</h4>
<p>I thought it was interesting, and the examples were quite cool to have been created in so few steps. However, I <em>really</em> needed more documentation. It was really unclear what some of the more obscure nodes would do, or how you should/could use them. Sure, I understand <em>scale</em>,<em>translate</em>, and so one, but <em>array</em> wasn&rsquo;t quite clear until I saw an example. Plus it is still completely unclear how I might use the <em>script</em> node to so some more complex things (spirographs maybe??).</p>
<p>I also found my node window to get really cluttered and unintelligible quite fast. I&rsquo;m sure that was partly because I was doing things in a roundabout way, but I wonder if I&rsquo;m just too used to the verbose and linear way of writing code?</p>
<p>I do whish that the creator had chosen a more unique name <span class="kaomoji">(*^▽^*)ゞ</span>
 Since the tool doesn&rsquo;t seem to have really been picked up, it&rsquo;s quite a bit difficult to find documentation on it, and the fact that antimony is a chemical element, and the name of several other tools, shows lots of non-relevant pages in many search results.</p>
<p>Furthermore, it&rsquo;s no longer under active development (it&rsquo;s in <a class="link" href="https://github.com/mkeeter/antimony/issues/205#issuecomment-484271273"  target="_blank" rel="noopener"
    >&ldquo;long-term maintenance mode&rdquo;</a>). The creator seems to have moved on if I look at all the <a class="link" href="https://www.mattkeeter.com/projects/"  target="_blank" rel="noopener"
    >new projects</a> that he&rsquo;s worked on since 2015. The combination of this, with the fact that it hasn&rsquo;t widely been picked up, therefore making it hard to find help online, marks this as a tool for me that I wouldn&rsquo;t dive any deeper into.</p>
<h3 id="solidworks--bonus">SolidWorks | Bonus</h3>
<p>I&rsquo;m calling this a bonus, because I only have the final files and end result. During Thursday evening my partner <em>really</em> wanted to show me <a class="link" href="https://www.designsolutions.nl/SOLIDWORKS-3d-cad"  target="_blank" rel="noopener"
    >SolidWorks</a> (from the same company as xDesign), the main CAD tool that he&rsquo;d used during his university years. I proposed to make a cookie jar with different elements, such as a lid. And so in about an hour we sat behind his pc and worked together to create the jar, trying different ways to set up each element. It wasn&rsquo;t the right time and vibe to take process screenshots though. Furthermore, I won&rsquo;t be using this tool any further, since I don&rsquo;t have a license myself, and I&rsquo;m not planning on using his (Windows) PC during class. But below is the final rendering of our cookie jar! Pretty darn good rendering btw <span class="kaomoji">O.O</span>
</p>
<p><figure style="flex-grow: 129; flex-basis: 310px">
		<a href="../../blog/week-2/3D_solidworks_cookie_jar.jpg" data-size="1200x927">
			
			<img src="../../blog/week-2/3D_solidworks_cookie_jar.jpg"
				
				width="1200"
				height="927"
				loading="lazy"
				alt="The very shiny cookie jar I created with my partner">
		</a>
		
		<figcaption>The very shiny cookie jar I created with my partner</figcaption>
		
	</figure></p>
<p>If you look closely there&rsquo;s actually a physical impossibility in this design, except if glue is used <span class="kaomoji">(*^▽^*)ゞ</span>
</p>
<p>It&rsquo;s a powerful took that seems quite straightforward to use to build things (it did take some time to figure out the rendering). However, I didn&rsquo;t like the fact that I had to create all three elements of the jar (base, lid, top knop) separately instead of making them all from scratch in a single overview. Creation in one overview just makes it easier to see how the elements would relate to each other and relate the different dimensions that need to fit together.</p>
<h2 id="reflections">Reflections</h2>
<p>A very busy week, with lots of new tools and concepts to learn.</p>
<h4 id="what-went-wrong">What went wrong</h4>
<p>Lots went wrong while learning all of the tools. On average I had ±60 tabs open in my browser to google solutions about the specific tool I was trying at that time. However, I&rsquo;ve talked about most of them above, and this blog is long enough as it is, so I won&rsquo;t repeat myself here. Nothing major went wrong thankfully.</p>
<h4 id="what-went-well">What went well</h4>
<p>Although it took basically the entire week of my &ldquo;awake time&rdquo; to test and document all the tools, I&rsquo;m very happy that I <em>did</em> manage to test quite some tools. It has really broadened my view on CAD tools, and which I would use under what circumstances.</p>
<h4 id="what-i-would-do-differently">What I would do differently</h4>
<p>Although I tried many tools I did them sequentially. Trying one up till the point that I felt I had a good enough opinion on it, before moving on. In hindsight, I should&rsquo;ve made an early start with <em>all</em> the tools that I wanted to try, document it, and then continue a little further with the tools I wanted to explore more, etc, until the week was up.</p>
<h4 id="wrapping-up">Wrapping up</h4>
<p>I don&rsquo;t think I&rsquo;ve thoroughly tried so many new (elaborate) software tools in so few days <span class="kaomoji">✖_✖</span>
, but it was definitely a very interesting exercise. I really liked <em>Fusion 360</em>, was intrigued by <em>OpenSCAD</em>, highly frustrated by <em>xDesign</em>. This is probably also the longest blog post I&rsquo;ve ever written <span class="kaomoji">[¬º-°]¬</span>
</p>
<h2 id="all-files-together">All Files Together</h2>
<ul>
<li>2D Vector
<ul>
<li>The JavaScript code | <a class="link" href="2D_vector_puzzle.zip" >zip file</a></li>
<li>The raw SVG | <a class="link" href="2D_vector_puzzle_raw.svg" >svg file</a></li>
<li>The cleaned-up (with Illustrator) SVG | <a class="link" href="2D_vector_puzzle.svg" >svg file</a></li>
</ul>
</li>
<li>Fusion 360
<ul>
<li>Final Fusion 360 STL files of the 4 components | <a class="link" href="3D_fusion360_stl.zip" >zip file</a></li>
<li>Separate SVG files used for the hexagon and puzzle piece sketches | <a class="link" href="3D_fusion360_puzzle_svgs.zip" >zip file</a></li>
</ul>
</li>
<li>OpenSCAD
<ul>
<li>The different components as separate STL files | <a class="link" href="3D_openscad_STL.zip" >zip file</a></li>
<li>The final OpenSCAD file and spirograph SVG | <a class="link" href="3D_openscad_files.zip" >zip file</a></li>
<li>The spirograph bowl OpenSCAD and STL files | <a class="link" href="3D_openscad_spirograh_bowl.zip" >zip file</a></li>
</ul>
</li>
<li>xDesign
<ul>
<li>The model as an STL file | <a class="link" href="3D_xdesign_final.stl" >stl file</a></li>
</ul>
</li>
<li>Antimony
<ul>
<li>Final Antimony file | <a class="link" href="3D_antimony_final.sb" >sb file</a></li>
</ul>
</li>
</ul>
</section>


    <footer class="article-footer">
    
    <section class="article-tags">
        
            <a href="../../tags/cam/">cam</a>
        
            <a href="../../tags/cad/">cad</a>
        
            <a href="../../tags/2d/">2D</a>
        
            <a href="../../tags/raster/">raster</a>
        
            <a href="../../tags/vector/">vector</a>
        
            <a href="../../tags/3d/">3D</a>
        
            <a href="../../tags/xdesign/">xdesign</a>
        
            <a href="../../tags/fusion-360/">fusion 360</a>
        
            <a href="../../tags/openscad/">openscad</a>
        
            <a href="../../tags/freecad/">freecad</a>
        
            <a href="../../tags/blender/">blender</a>
        
            <a href="../../tags/solidworks/">solidworks</a>
        
    </section>


    <section class="article-social-icons">
        <a class="share_icon" title="Follow me on Twitter" href="https://twitter.com/NadiehBremer"><svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-brand-twitter" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
  <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
  <path d="M22 4.01c-1 .49 -1.98 .689 -3 .99c-1.121 -1.265 -2.783 -1.335 -4.38 -.737s-2.643 2.06 -2.62 3.737v1c-3.245 .083 -6.135 -1.395 -8 -4c0 0 -4.182 7.433 4 11c-1.872 1.247 -3.739 2.088 -6 2c3.308 1.803 6.913 2.423 10.034 1.517c3.58 -1.04 6.522 -3.723 7.651 -7.742a13.84 13.84 0 0 0 .497 -3.753c-.002 -.249 1.51 -2.772 1.818 -4.013z" />
</svg></a>
        <a class="share_icon" title="Follow me on Instagram" href="https://instagram.com/NadiehBremer"><svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-brand-instagram" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
  <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
  <rect x="4" y="4" width="16" height="16" rx="4" />
  <circle cx="12" cy="12" r="3" />
  <line x1="16.5" y1="7.5" x2="16.5" y2="7.501" />
</svg></a>
    </section><section class="article-time">
        <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-clock" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
  <path stroke="none" d="M0 0h24v24H0z"/>
  <circle cx="12" cy="12" r="9" />
  <polyline points="12 7 12 12 15 15" />
</svg>



        <span class="article-time--modified">
            Last updated on Feb 26, 2021
        </span>
    </section></footer>

    
</article>

    <div class="prev-next--wrapper">
    
        <a href="http://fabacademy.org/2021/labs/waag/students/nadieh-bremer/blog/week-1b/" class="prev-post">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-chevron-left" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
  <path stroke="none" d="M0 0h24v24H0z"/>
  <polyline points="15 6 9 12 15 18" />
</svg>



            <span>Previous</span>
        </a>
    

    
    <a href="http://fabacademy.org/2021/labs/waag/students/nadieh-bremer/blog/week-3/" class="next-post">
        <span>Next</span>
        <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-chevron-right" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
    <path stroke="none" d="M24,24H0V0h24V24z"/>
    <polyline points="9,18 15,12 9,6 "/>
</svg>

    </a>
    
</div>

    <aside class="related-contents--wrapper">
    
    
        <h2 class="section-title">Related contents</h2>
        <div class="related-contents">
            <div class="flex article-list--tile">
                
                    
<article class="has-image">
    <a href="../../blog/week-12/">
        
        
            <div class="article-image">
                
                    
                    <img src="../../blog/week-12/header.fa772e282fa51bcdd4d67643999bccad.jpg" 
                        width="1000" 
                        height="588" 
                        loading="lazy" 
                        data-key="week-12" 
                        data-hash="md5-&#43;ncuKC&#43;lG83U1nZDmZvMrQ==">
                
            </div>
        

        <div class="article-details">
            <h2 class="article-title">Molding and Casting</h2>
        </div>
    </a>
</article>
                
                    
<article class="has-image">
    <a href="../../blog/week-7/">
        
        
            <div class="article-image">
                
                    
                    <img src="../../blog/week-7/header.36d9f1175b8afb48442155d3a610d9f2.jpg" 
                        width="1000" 
                        height="631" 
                        loading="lazy" 
                        data-key="week-7" 
                        data-hash="md5-NtnxF1uK&#43;0hEIVXTphDZ8g==">
                
            </div>
        

        <div class="article-details">
            <h2 class="article-title">Computer-Controlled Machining</h2>
        </div>
    </a>
</article>
                
                    
<article class="has-image">
    <a href="../../blog/week-9/">
        
        
            <div class="article-image">
                
                    
                    <img src="../../blog/week-9/header.0ec5cd7078b8f62697ad6b6d1004e7ae.jpeg" 
                        width="1000" 
                        height="630" 
                        loading="lazy" 
                        data-key="week-9" 
                        data-hash="md5-DsXNcHi49iaXrWttEATnrg==">
                
            </div>
        

        <div class="article-details">
            <h2 class="article-title">Mechanical &amp; Machine Design</h2>
        </div>
    </a>
</article>
                
            </div>
        </div>
    
</aside>


    <footer class="site-footer">
    <section class="copyright">
        &copy; 2021 Nadieh&#39;s Fab Academy | <a href="../../student-agreement">Student Agreement</a>
    </section>
    
    <section class="powerby">
        Built with <a href="https://gohugo.io/" target="_blank" rel="noopener">Hugo</a> | Using a personally adjusted version of the theme <a href="https://github.com/CaiJimmy/hugo-theme-stack" target="_blank" rel="noopener" data-version="%s">Stack</a>
    </section>
</footer>
<div class="pswp" tabindex="-1" role="dialog" aria-hidden="true">

    
    <div class="pswp__bg"></div>

    
    <div class="pswp__scroll-wrap">

        
        <div class="pswp__container">
            <div class="pswp__item"></div>
            <div class="pswp__item"></div>
            <div class="pswp__item"></div>
        </div>

        
        <div class="pswp__ui pswp__ui--hidden">

            <div class="pswp__top-bar">

                

                <div class="pswp__counter"></div>

                <button class="pswp__button pswp__button--close" title="Close (Esc)"></button>

                <button class="pswp__button pswp__button--share" title="Share"></button>

                <button class="pswp__button pswp__button--fs" title="Toggle fullscreen"></button>

                <button class="pswp__button pswp__button--zoom" title="Zoom in/out"></button>

                
                
                <div class="pswp__preloader">
                    <div class="pswp__preloader__icn">
                        <div class="pswp__preloader__cut">
                            <div class="pswp__preloader__donut"></div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="pswp__share-modal pswp__share-modal--hidden pswp__single-tap">
                <div class="pswp__share-tooltip"></div>
            </div>

            <button class="pswp__button pswp__button--arrow--left" title="Previous (arrow left)">
            </button>

            <button class="pswp__button pswp__button--arrow--right" title="Next (arrow right)">
            </button>

            <div class="pswp__caption">
                <div class="pswp__caption__center"></div>
            </div>

        </div>

    </div>

</div>

<script src="https://cdn.jsdelivr.net/npm/photoswipe@4.1.3/dist/photoswipe.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/photoswipe@4.1.3/dist/photoswipe-ui-default.min.js"></script>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/photoswipe@4.1.3/dist/default-skin/default-skin.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/photoswipe@4.1.3/dist/photoswipe.css">
            </main>
    <aside class="sidebar right-sidebar sticky">
    <section class="widget toc">
        <h2 class="widget-title section-title">TABLE OF CONTENTS</h2>
        <div id="toc-wrapper">
            <h3 class="page-title">Computer-Aided Design</h3>
            <nav id="TableOfContents">
  <ul>
    <li><a href="#assignments">Assignments</a></li>
    <li><a href="#hero-shots">Hero Shots</a></li>
    <li><a href="#2d-modelling">2D Modelling</a>
      <ul>
        <li><a href="#raster-based">Raster based</a></li>
        <li><a href="#vector-based">Vector based</a></li>
      </ul>
    </li>
    <li><a href="#3d-modelling">3D Modelling</a>
      <ul>
        <li><a href="#fusion-360">Fusion 360</a></li>
        <li><a href="#openscad">OpenSCAD</a></li>
        <li><a href="#xdesign">xDesign</a></li>
        <li><a href="#freecad">FreeCAD</a></li>
        <li><a href="#blender">Blender</a></li>
        <li><a href="#antimony--stretch-goal">Antimony | Stretch Goal</a></li>
        <li><a href="#solidworks--bonus">SolidWorks | Bonus</a></li>
      </ul>
    </li>
    <li><a href="#reflections">Reflections</a>
      <ul>
        <li></li>
      </ul>
    </li>
    <li><a href="#all-files-together">All Files Together</a></li>
  </ul>
</nav>
        </div>
    </section>
</aside>

<script>
    
    
    window.addEventListener('DOMContentLoaded', () => {
        const observer = new IntersectionObserver(entries => {
            entries.forEach(entry => {
                const id = entry.target.getAttribute('id');
                if (entry.intersectionRatio > 0) {
                    clearActiveStatesInTableOfContents()
                    document.querySelector(`nav li a[href="#${id}"]`).parentElement.classList.add('active');
                } else {
                    
                }
            });
        });
    
        
        document.querySelectorAll('h2[id], h3[id]').forEach((section) => {
            observer.observe(section);
        });
        
    });

    function clearActiveStatesInTableOfContents() {
        document.querySelectorAll('aside #TableOfContents li').forEach((section) => {
            section.classList.remove('active');
        });
    }
</script>

        </div>
        <script src="https://cdn.jsdelivr.net/npm/node-vibrant@3.1.5/dist/vibrant.min.js"
    integrity="sha256-5NovOZc4iwiAWTYIFiIM7DxKUXKWvpVEuMEPLzcm5/g=" crossorigin="anonymous"></script><script type="text/javascript" src="../../ts/main.js" defer></script>

<script>
    
    
    let table = document.getElementsByTagName("table")

    if(table.length > 0) {
        for(let i = 0; i < table.length; i++) {
            table[i].addEventListener("click", (e) => {
                let target = e.target
                if(target.localName === "code") {
                    let range = document.createRange()
                    range.selectNodeContents(target)  
                    let sel = document.getSelection()
                    sel.removeAllRanges()
                    sel.addRange(range)
        
                    document.execCommand('copy')
                    sel.removeAllRanges()

                    
                    target.classList.add('copy-animate')
                    setTimeout(() => {
                        target.classList.remove('copy-animate')
                    }, 400)
                }
            })
        }
    }
</script>
    </body>
</html>
