<!DOCTYPE HTML>
<!--
	TXT by HTML5 UP
	html5up.net | @ajlkn
	Free for personal and commercial use under the CCA 3.0 license (html5up.net/license)
-->
<html>
	<head>
		<title>Week 11. Input devices</title>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no" />
		<link rel="stylesheet" href="assets/css/main.css" />
	</head>
	<body class="is-preload">
		<div id="page-wrapper">

			<!-- Nav -->
				<nav id="nav">
					<ul>
						<li class="current"><a href="index.html">Home</a></li>
						<li>
							<a href="assignments.html">Assignments</a>
							
						</li>
                        
						<li>
                            <a href="finalproject.html">Final project</a>
                        </li>
                        
						<li>
                            <a href="#">About</a>
                            <ul>
                                <li><a href="about.html">About me</a></li>
                                <li><a href="SA.html">Student Agreement</a></li>
                            </ul> 
                        </li>
                        
						<li>
                            <a href="diary.html">How to survive</a>
                        </li>
					</ul>
				</nav>

			<!-- Main -->
				<section id="main">
					<div class="container">
						<div class="row">
							<div class="col-3 col-12-medium">
								<div class="sidebar">

									<!-- Sidebar -->

                                    <!-- Recent Posts -->
											<section>
												<h2 class="major"><span></span></h2>
												<ul class="divided">
													<li>
														<article class="box post-summary">
															<h3><a href="#"></a>Previous week</h3>
                                                            <a href="week10.html" class="image featured"><img src="images/icons/castingb.jpg" alt="" /></a> 
															<ul class="meta">
                                                            <h3><a href="week10.html">Week 10.<br>Molding and casting</a></h3>
															</ul>
														</article>
													</li>
													<li>
														<article class="box post-summary">
															<h3><a href="#">Following week</a></h3>
                                                            <a href="week12.html" class="image featured"><img src="images/icons/outputb.jpg" alt="" /></a> 
															<ul class="meta">
															<h3><a href="week12.html">Week 12.<br>Output devices</a></h3>	
															</ul>
														</article>
													</li>
													<li>														
													</li>
												<a href="assignments.html" class="button alt">More assignments</a>
                                                </ul>
											</section>
                                    
								</div>
							</div>
							<div class="col-9 col-12-medium imp-medium">
								<div class="content">

									<!-- Content -->

										<article class="box page-content">

											<header>
												<h2>Input devices</h2>
												<p>Week 11</p>
												<ul class="meta">
												</ul>
											</header>

											<section>
                                                <p>
                                                    Like every week I started the week planning the assignment. 
                                                </p>
												<span class="image featured"><img src="images/week11/w11img01.PNG" alt="" /></span>
                                            </section>
                                            
                                            <section>
												<h3>Group assignment. Probing an input device's analog levels and digital signals.</h3>
                                                <p style="color:purple;"> <i>I usually do the group assignments individually as I am a remote student and none of my colleagues are in the fab academy, but in this case, we decided to meet the four of us (Leon remote students) and do some group assignments together. </i></p>
                                                
                                                <p>
                                                 To measure a digital signal we decided to use the PCB that I designed in the <a href="http://fabacademy.org/2019/labs/leon/students/elena-cardiel/week07.html">Electronic design week</a> and we loaded a blink sketch that turns on/off the LED each one second. First, we tried with a <i>Semoic Mini ARM DSO212</i> Osciloscopier, but for some reason, when we connected to the boards it was giving us weird readings, creating short circuits and some times it gots frozen.   
                                                </p> 
                                                <span class="image featured"><img src="images/week11/w11img13.jpg" alt="" /></span>
                                                <p>So we decided to use another oscilloscope, a <i>Dso sheel</i> one that <a href="http://fabacademy.org/2019/labs/leon/students/alejandro-ausejo/index.html">Alejandro Ulecia</a> assembled, and then we finally got the feedback of the digital signal from the PCB.
                                                </p>
                                                <iframe src="https://player.vimeo.com/video/331962689" width="100%" height="360" frameborder="0" allow="autoplay; fullscreen" allowfullscreen></iframe>
                                                <p></p>
                                                <p>To probe the analog levels we decided to use the PCB that I designed for a phototransistor in the <a href="http://fabacademy.org/2019/labs/leon/students/elena-cardiel/week11.html">Input devices week</a>. and after regulating the range of signal that the oscilloscope shows in the screen we got the feedback.  
                                                </p>
                                                <iframe src="https://player.vimeo.com/video/331970819" width="100%" height="360" frameborder="0" allow="autoplay; fullscreen" allowfullscreen></iframe><p>
                                                
                                            </section>
                                            
                                                                                
                                            <section>
												<h3>Distance input device: Ultrasonic sensor HC-SR04</h3>
                                                <p>
                                                    For this assignment, I wanted to try some sensors that I could use for my final project. Since I want that my lamp reads the presence of the user, I thought it would be a good idea to try a distance sensor, so maybe the lamp would be able to know if someone or something is in front of it. 
                                                    <br>Additionally, I also thought it would be a good idea to add a BUS connector so I can use this board for the <i>networking and communications week</i>, so, having as a reference the <a href="http://fabacademy.org/archives/2015/eu/students/kados.szilard/files/courses/10.html">Szilárd A. Kados's assignment, </a>I decided to use an ITtiny44 microcontroller because of the extra communication connector pins.
                                                    <br>The components that I used for this boards are:
                                                    <br><b>></b> 1 x ATtiny44
                                                    <br><b>></b> 1 x 10kΩ resistors
                                                    <br><b>></b> 1 x 1uF capacitor
                                                    <br><b>></b> 1 x 2x3 pin header (ISP)
                                                    <br><b>></b> 1 x 2x2 pin header (BUS)
                                                    <br><b>></b> 6 x Male headers (FTDI)
                                                    <br><b>></b> 1 x Ultrasonic sensor HC-SR04 
                                                </p>                                
                                                <p>
                                                    I designed the PCB in Eagle. I created a new schematic, I added all the components and I made all the connections. Then I created a board file from it, I checked the design rules and I arranged all the components and traces.
                                                </p>
                                                    <span class="image featured"><img src="images/week11/w11img02.jpg" alt="" /></span>
                                                <p style="color:purple;"> <i>I couldn't find the sensor HC-SR04 in the libraries so I added an extra FTDI since they have the same footprint but just with 4 pins. I renamed the pins in the schematic according to the sensor pins and then in Photoshop I erased the extra two pines.</i></p>
                                                <p>
                                                    Then I exported the images for the traces into .png, I got the .rml files through <a href="http://fabmodules.org/">Fab Modules</a> and then I milled the PCB. The first attempt didn't go well. I had to level the base of the machine because in some areas the end-mill didn't cut all the way thought of the copper layer, but after that, the milling part went quite smoothly, without any incident and the board came out nicely.
                                                </p>
                                                    <span class="image featured"><img src="images/week11/w11img03.jpg" alt="" /></span>
                                                    <span class="image featured"><img src="images/week11/w11img04.jpg" alt="" /></span>
                                                <p>
                                                    Then I soldered all the components and I checked with the multimeter that all connections were good. 
                                                </p>
                                                <span class="image featured"><img src="images/week11/w11img05.jpg" alt="" /></span>
                                                <p style="color:purple;"> <i>It is quite easy to lose the reference of the scale while working in Eagle. I didn't realize how tiny was the board until it was cut and I started soldering. This time this process was a bit hard as I hadn't to much space to work. Mental note: make bigger PCBs; leave more space between components.</i></p>
                                                <p>
                                                    Once everything was soldered I made a program in Arduino IDE. Here I had to go to the <a href="http://academy.cba.mit.edu/classes/embedded_programming/doc8183.pdf">datasheet of ATtiny44A</a> in order to know the clock that it uses, which is 8MHz. Then I had to convert de physically pins so Arduino could recognize in which pins I connected the sensor. For the serial output part, I used the <a href="https://www.arduino.cc/en/Reference/SoftwareSerial">SoftwareSerial Library</a>, which is the way that you have in Arduino to get the information from other devices.
                                                </p>
                                                    <iframe src=https://create.arduino.cc/editor/ElenaCardiel/46c81a73-9bd3-466c-9045-168bf96b9e8a/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>
                                                <p>
                                                    So I burned the bootloader and I uploaded the program to the sensor board through the FabISP and everything went well. But, when I tried to get the information of the sensor from the Serial Monitor of Arduino IDE this error came up:
                                                </p>
                                                <span class="image featured"><img src="images/week11/w11img09.jpg" alt="" /></span>
                                                <p>
                                                    I checked the program, the number of the pins and the settings, and everything seemed to be ok. I checked the soldering and everything seems to be ok too. I used the multimeter and I had good continuity. So, why couldn't I read the information from my sensor? Maybe is the sensor broken? Maybe is a problem with the Arduino version that for some reason is not able to read the información from the sensor? After a couple of hours trying to find the mistake, I told with my instructor and following together the steps that I had followed she realized that I was connecting the FTDI to an external supply, instead of to my computer... So the computer wasn't receiving any information...
                                                </p>
                                                <p style="color:purple;"> <i>In the previous weeks, I had connected the computer to the FabISP, the FabISP to the board, and the board to an external supply. So I had that reference in my mind. But this time I didn't realize that I needed to get información directly from the board, and if I don't connect the board to the computer through the FTDI cord... #cosasdenovatos</i></p>
                                                <p>So I connected everything in the right position (computer > FabISP > board > computer) and I started getting feedback from the sensor through the serial monitor!!</p>
                                                <span class="image featured"><img src="images/week11/w11img10.jpg" alt="" /></span>
                                                <p><iframe src="https://player.vimeo.com/video/327765089" width="100%" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe></p>
                                                <p>
                                                I was testing the sensor and I could observe several things:
                                                <br><b>1.-</b> In the data sheet, you can read that the range of the sensor is between 2cm. and 400cm. However, the maximum that the sensor can read is around 200cm.
                                                <br><b>2.-</b> If for some reason the sensor gets crazy because the surface that you are using as a limit for the reading is too close or too far, I have observed that there is a point around 20-40cm that makes it come back. So probably that is the optimal distance.
                                                <br><b>3.-</b> To get a good reading, the sensor has to be as perpendicular as possible to the reading surface (the limit for reading), otherwise, if the angle is different the pulse cannot come back and the reading will be wrong or the sensor will not work at all. For instance, I have tried to use my hand as a limit and it didn't work.  
                                                </p>
                                                <p style="color:purple;"> <i>For sure I can apply this sensor to my final project, what I am a bit worried about is what I can use for the reading limit, I mean, I need to come up with some method for not getting wrong readings... maybe I may cover the sensor with something while you want to use the lamp, in such a way that if the sensor is reading 10-12cm, then the lamp turns on, but if it is reading a different number, then the lamp turn off... I think something like that could work...</i></p>
                                            </section>
                                            
                                                                                    
                                            <section>                                    
												<h3>Light input device: IR phototransistor</h3>
                                                <p>
                                                    For this assignment, I also wanted to try a sensor that would be able to read the amount of light, a sensor that I could also apply for my final project. I decided to try with an IR phototransistor which I may configure for the future weeks in such a way that the lamp projects light when the room if not illuminated enough.
                                                </p>
                                                <p>
                                                    I designed the PCB in Eagle. I created a new schematic, I added all the components and I made all the connections. As in the ultrasonic sensor board, I also added a BUS connector so I can use this board for the <i>networking and communications week</i>. The components that I used for this boards are:
                                                    <br><b>></b> 1 x ATtiny44
                                                    <br><b>></b> 2 x 10kΩ resistors
                                                    <br><b>></b> 1 x 1uF capacitor
                                                    <br><b>></b> 1 x 2x3 pin header (ISP)
                                                    <br><b>></b> 1 x 2x2 pin header (BUS)
                                                    <br><b>></b> 6 x Male headers (FTDI)
                                                    <br><b>></b> 1 x IR phototransistor
                                                    <br>But when I checked that everything is correct, from <i>tools > errors</i>, a couple of warnings messages appeared, telling me that something was wrong connected. I checked the schematic and everything seemed to be good. Then I asked my instructor and she recommended me to use labels instead of lines to make the connections as sometimes Eagle gets crazy due to the overlapped lines. So I opened a new file, I imported again the components and I used the labels to make de connections. And when I went to check the errors again, it was even worse!! Now instead of having only two warning errors, I had fourteen!! 
                                                </p>
                                                    <span class="image featured"><img src="images/week11/w11img06.jpg" alt="" /></span>
                                                <p>
                                                    I didn't know which was the problem, the software was telling me that something was disconnected, but if I moved the component I moved de lines too, so it dindn't make any sense. I even closed and opened Eagle and I restarted the computer, but the warnings were still there... So I decided to go ahead, as in the board window everything seemed to be well connected.  
                                                </p>
                                                <span class="image featured"><img src="images/week11/w11img08.jpg" alt="" /></span>
                                                <p style="color:purple;"> <i>PD: When I opened the Eagle file the day after, all the warning messages had disappeared. Boom! Magic! Definitely, it weren't my poor skills in Eagle, it was some bug in the schematic... Aggg I really hate this kind of things because it makes you waste a lot of time!!!</i></p>
                                                <span class="image featured"><img src="images/week11/w11img07.jpg" alt="" /></span>
                                                <span class="image featured"><img src="images/week11/w11img12.jpg" alt="" /></span>
                                                <p style="color:purple;"> <i>Some boards look like torture machines with so much skewer coming out from everywhere ...</i></p>
                                                <p>
                                                    Once everything was soldered I made a program in Arduino IDE. Here I had to go to the <a href="http://academy.cba.mit.edu/classes/embedded_programming/doc8183.pdf">datasheet of ATtiny44A</a> in order to know the clock that it uses, which is 8MHz. Then I had to convert de physically pins so Arduino could recognize in which pins I connected the sensor. For the serial output part, I used the <a href="https://www.arduino.cc/en/Reference/SoftwareSerial">SoftwareSerial Library</a>, which is the way that you have in Arduino to get the information from other devices.
                                                </p>
                                                <iframe src=https://create.arduino.cc/editor/ElenaCardiel/9a20e97d-9d97-4b79-8c7d-debb6f2eb3a4/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>
                                                
                                                <p>
                                                    Here I had a couple of problems:
                                                    <br>First of all, I completely forgot to connect the IR phototransistor sensor to a PWD/ADC pin, so the first time that I run the program it gave me wrong readings. So I had to do a bridge with an external cord.  
                                                    <br>And secondly, I don't know why but the readings that I was getting were upside down, I mean, I got 1024 when the room was in darkness and 0 when it was fully illuminated. To solve this, in the code I added a <a href="https://www.arduino.cc/reference/en/language/functions/math/map/">map funcion</a> to invert the numbers. 
                                                </p>
                                                <span class="image featured"><img src="images/week11/w11img11.jpg" alt="" /></span>
                                                <iframe src="https://player.vimeo.com/video/327949901" width="100%" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>
                                                <p></p>
                                                <p style="color:purple;"> <i>I will also use this sensor in my final project. Using/applying these two sensors for the lamp I have interaction with the environment through the IR sensor (which will turn on the light when the room is not enough illuminated) and interaction with the user/person through the ultrasonic sensor (which will be able to read the presence of the person and illuminated that area of the room where he/she is).</i></p>
                                                <p style="color:purple;"> <i>Some weeks later I made the final version of the phototransistor's PCB. You can find more information in <a href="http://fabacademy.org/2019/labs/leon/students/elena-cardiel/FP03.html">Final project. First prototype.</a> </i></p>
                                                                                               
                                            </section>
                                            
                                            <section>
												<h3>Distance input device: SHARP GP2Y0A02YK0F IR Sensor</h3>
                                                <p style="color:purple;"> <i>I am adding this part of the assignment in the week 17 while developing the <a href="http://fabacademy.org/2019/labs/leon/students/elena-cardiel/FP03.html">first prototype of the final project</a></i>.</p>
                                                <p>
                                                    As the ultrasonic sensor has so many inconveniences in order to work well, I wanted also to tray an infrared distance sensor. To control de device I used the FabKit that I made for the <a href="http://fabacademy.org/2019/labs/leon/students/elena-cardiel/FP03.html">first prototype of the final project</a>.
                                                </p>
                                                <p>
                                                    After a couple of hours trying to get good readings from the sensor without success,  I found out this <a href="https://www.makerguides.com/sharp-gp2y0a21yk0f-ir-distance-sensor-arduino-tutorial/">tutorial</a> and I followed it to program the microcontroller. It uses a library that reduces the lines of code and makes so much easier to use/program the sensor. <br>To know the pinout of my Atmega328, I used this <a href="https://www.flickr.com/photos/28521811@N04/8449935217">image</a>.
                                                </p>
                                                <span class="image featured"><img src="images/week11/w11img14.jpg" alt="" /></span>
                                                <iframe src=https://create.arduino.cc/editor/ElenaCardiel/1a3612bd-e8e5-4a2e-aa9b-48d272cbc72e/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>    
                                            
                                                <iframe src="https://player.vimeo.com/video/335745322" width="100%" height="360" frameborder="0" allow="autoplay; fullscreen" allowfullscreen></iframe>
                                                <p></p>
                                                <p>
                                                    The sensor works pretty well, it is very precise in distance between 20 and 70 cm. If you place something in a distance less than 15-18 cm, the sensor gives you weird readings. From 70 cm. the readings have a mismatch of about 2 or 3 cm with respect to the actual measurement (which I think is expected and admissible, at least in my case). From 90-100 cm. the readings are not very good, you can have a mismatch of about 10 or 15 cm. and this mismatch grows exponentially as you move the reading surface away from the sensor. Although the specifications of the sensor say that it is able to work until 150 cm., from 120 cm. it doesn't work at all.
                                                    <br>These readings can be affected by the amount of light in the room or if the reading surface is a very dark color. 
                                                </p>
                                                <p style="color:purple;"> <i>In the video is a bit hard to see the values in the serial monitor (sorry for that), but the sensor is quite precise and definitely, this sensor works better for me, as I can read objects that have irregular shapes, such as a hand, or a person sited in front of the lamp... something that I cannot do with the ultrasonic one. So I will incorporate this sensor to my final project.</i></p>
                                                
                                            </section>
                                                                           
                                          
                                                
                                            <section>                                    
												<h3>Files</h3>
                                                <p>
                                                   Find below the files that I made for this assignment. Please do not hesitate to download it!! I hope you enjoy it!!
                                                    <br><a href="images/week11/sonar_traces.png">Ultrasonic sensor - traces - .png</a>
                                                    <br><a href="images/week11/sonar_outline.png">Ultrasonic sensor - outline - .png</a>
                                                    <br><a href="images/week11/sonar.zip">Ultrasonic sensor - Eagle schematic + board</a>
                                                    <br><a href="images/week11/ultrasonic_sensor.ino">Ultrasonic sensor - Arduino - .ino</a>
                                                    <br><a href="images/week11/IR_traces.png">IR phototransistor - traces - .png</a>
                                                    <br><a href="images/week11/IR_outline.png">IR phototransistor - outline - .png</a>
                                                    <br><a href="images/week11/IR.zip">IR phototransistor - Eagle schematic + board</a>
                                                    <br><a href="images/week11/IR_sensor.ino">IR phototransistor - Arduino - .ino</a>
                                                    <br><a href="images/week11/SHARP_IR.ino">SHARP GP2Y0A02YK0F IR Sensor - Arduino - .ino</a>
                                                    
                                            </section>
                                           
                                     </article>
                                 </div>
                             </div>
                        </div>        
                    </div>
                </section>
            
		<!-- Scripts -->
			<script src="assets/js/jquery.min.js"></script>
			<script src="assets/js/jquery.dropotron.min.js"></script>
			<script src="assets/js/jquery.scrolly.min.js"></script>
			<script src="assets/js/browser.min.js"></script>
			<script src="assets/js/breakpoints.min.js"></script>
			<script src="assets/js/util.js"></script>
			<script src="assets/js/main.js"></script>
            
        </div>
	</body>
</html>